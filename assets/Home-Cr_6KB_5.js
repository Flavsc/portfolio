import{r as Se,a as hx,g as fx,j as wt,m as oa,N as dx}from"./index-_Njqncqd.js";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Fa="158",px={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},mx={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},G0=0,Lf=1,W0=2,gx=3,X0=0,Qc=1,ca=2,vi=3,ir=0,Un=1,Ii=2,vx=2,nr=0,as=1,If=2,Uf=3,Df=4,q0=5,wr=100,Y0=101,Z0=102,Nf=103,Of=104,J0=200,j0=201,K0=202,Q0=203,Xc=204,qc=205,$0=206,ev=207,tv=208,nv=209,iv=210,rv=211,sv=212,ov=213,av=214,lv=0,cv=1,uv=2,ma=3,hv=4,fv=5,dv=6,pv=7,za=0,mv=1,gv=2,Ni=0,vv=1,_v=2,yv=3,Md=4,xv=5,Ff="attached",Sv="detached",$c=300,rr=301,Rr=302,ga=303,va=304,So=306,_a=1e3,An=1001,ya=1002,jt=1003,Yc=1004,_x=1004,ua=1005,yx=1005,Kt=1006,Ed=1007,xx=1007,Cr=1008,Sx=1008,Oi=1009,Mv=1010,Ev=1011,eu=1012,wd=1013,tr=1014,Ui=1015,go=1016,Td=1017,Ad=1018,Tr=1020,wv=1021,kn=1023,Tv=1024,Av=1025,Ar=1026,fs=1027,bv=1028,bd=1029,Rv=1030,Rd=1031,Cd=1033,Fc=33776,zc=33777,Bc=33778,kc=33779,zf=35840,Bf=35841,kf=35842,Hf=35843,Cv=36196,Vf=37492,Gf=37496,Wf=37808,Xf=37809,qf=37810,Yf=37811,Zf=37812,Jf=37813,jf=37814,Kf=37815,Qf=37816,$f=37817,ed=37818,td=37819,nd=37820,id=37821,Hc=36492,rd=36494,sd=36495,Pv=36283,od=36284,ad=36285,ld=36286,Lv=2200,Iv=2201,Uv=2202,xa=2300,Sa=2301,Vc=2302,is=2400,rs=2401,Ma=2402,tu=2500,Pd=2501,Mx=0,Ex=1,wx=2,Ld=3e3,br=3001,Dv=3200,Nv=3201,Lr=0,Ov=1,Kn="",sn="srgb",zi="srgb-linear",nu="display-p3",Ba="display-p3-linear",Ea="linear",Nt="srgb",wa="rec709",Ta="p3",Tx=0,es=7680,Ax=7681,bx=7682,Rx=7683,Cx=34055,Px=34056,Lx=5386,Ix=512,Ux=513,Dx=514,Nx=515,Ox=516,Fx=517,zx=518,cd=519,Fv=512,zv=513,Bv=514,kv=515,Hv=516,Vv=517,Gv=518,Wv=519,Aa=35044,ls=35048,Bx=35040,kx=35045,Hx=35049,Vx=35041,Gx=35046,Wx=35050,Xx=35042,qx="100",ud="300 es",Zc=1035,Di=2e3,ba=2001;class or{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}const wn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let km=1234567;const cs=Math.PI/180,vo=180/Math.PI;function Qn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(wn[r&255]+wn[r>>8&255]+wn[r>>16&255]+wn[r>>24&255]+"-"+wn[e&255]+wn[e>>8&255]+"-"+wn[e>>16&15|64]+wn[e>>24&255]+"-"+wn[t&63|128]+wn[t>>8&255]+"-"+wn[t>>16&255]+wn[t>>24&255]+wn[n&255]+wn[n>>8&255]+wn[n>>16&255]+wn[n>>24&255]).toLowerCase()}function Yt(r,e,t){return Math.max(e,Math.min(t,r))}function Id(r,e){return(r%e+e)%e}function Yx(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function Zx(r,e,t){return r!==e?(t-r)/(e-r):0}function ha(r,e,t){return(1-t)*r+t*e}function Jx(r,e,t,n){return ha(r,e,1-Math.exp(-t*n))}function jx(r,e=1){return e-Math.abs(Id(r,e*2)-e)}function Kx(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function Qx(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function $x(r,e){return r+Math.floor(Math.random()*(e-r+1))}function eS(r,e){return r+Math.random()*(e-r)}function tS(r){return r*(.5-Math.random())}function nS(r){r!==void 0&&(km=r);let e=km+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function iS(r){return r*cs}function rS(r){return r*vo}function hd(r){return(r&r-1)===0&&r!==0}function Xv(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Jc(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function sS(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),d=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),v=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*d,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*d,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*d,c*h);break;case"XZX":r.set(c*d,u*y,u*v,c*h);break;case"YXY":r.set(u*v,c*d,u*y,c*h);break;case"ZYZ":r.set(u*y,u*v,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Hn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ft(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const oS={DEG2RAD:cs,RAD2DEG:vo,generateUUID:Qn,clamp:Yt,euclideanModulo:Id,mapLinear:Yx,inverseLerp:Zx,lerp:ha,damp:Jx,pingpong:jx,smoothstep:Kx,smootherstep:Qx,randInt:$x,randFloat:eS,randFloatSpread:tS,seededRandom:nS,degToRad:iS,radToDeg:rS,isPowerOfTwo:hd,ceilPowerOfTwo:Xv,floorPowerOfTwo:Jc,setQuaternionFromProperEuler:sS,normalize:ft,denormalize:Hn};class ue{constructor(e=0,t=0){ue.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Yt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class pt{constructor(e,t,n,i,s,l,c,u,h){pt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=s,d[5]=u,d[6]=n,d[7]=l,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],d=n[4],p=n[7],m=n[2],v=n[5],y=n[8],E=i[0],x=i[3],_=i[6],w=i[1],M=i[4],A=i[7],R=i[2],P=i[5],U=i[8];return s[0]=l*E+c*w+u*R,s[3]=l*x+c*M+u*P,s[6]=l*_+c*A+u*U,s[1]=h*E+d*w+p*R,s[4]=h*x+d*M+p*P,s[7]=h*_+d*A+p*U,s[2]=m*E+v*w+y*R,s[5]=m*x+v*M+y*P,s[8]=m*_+v*A+y*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*l*d-t*c*h-n*s*d+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=d*l-c*h,m=c*u-d*s,v=h*s-l*u,y=t*p+n*m+i*v;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const E=1/y;return e[0]=p*E,e[1]=(i*h-d*n)*E,e[2]=(c*n-i*l)*E,e[3]=m*E,e[4]=(d*t-i*u)*E,e[5]=(i*s-c*t)*E,e[6]=v*E,e[7]=(n*u-h*t)*E,e[8]=(l*t-n*s)*E,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Nh.makeScale(e,t)),this}rotate(e){return this.premultiply(Nh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Nh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Nh=new pt;function qv(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const aS={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ao(r,e){return new aS[r](e)}function Ra(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Yv(){const r=Ra("canvas");return r.style.display="block",r}const Hm={};function fa(r){r in Hm||(Hm[r]=!0,console.warn(r))}const Vm=new pt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Gm=new pt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Xl={[zi]:{transfer:Ea,primaries:wa,toReference:r=>r,fromReference:r=>r},[sn]:{transfer:Nt,primaries:wa,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[Ba]:{transfer:Ea,primaries:Ta,toReference:r=>r.applyMatrix3(Gm),fromReference:r=>r.applyMatrix3(Vm)},[nu]:{transfer:Nt,primaries:Ta,toReference:r=>r.convertSRGBToLinear().applyMatrix3(Gm),fromReference:r=>r.applyMatrix3(Vm).convertLinearToSRGB()}},lS=new Set([zi,Ba]),Pt={enabled:!0,_workingColorSpace:zi,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!lS.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=Xl[e].toReference,i=Xl[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return Xl[r].primaries},getTransfer:function(r){return r===Kn?Ea:Xl[r].transfer}};function fo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Oh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Os;class Ud{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Os===void 0&&(Os=Ra("canvas")),Os.width=e.width,Os.height=e.height;const n=Os.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Os}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Ra("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=fo(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(fo(t[n]/255)*255):t[n]=fo(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let cS=0;class ss{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:cS++}),this.uuid=Qn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(Fh(i[l].image)):s.push(Fh(i[l]))}else s=Fh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Fh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Ud.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let uS=0;class Qt extends or{constructor(e=Qt.DEFAULT_IMAGE,t=Qt.DEFAULT_MAPPING,n=An,i=An,s=Kt,l=Cr,c=kn,u=Oi,h=Qt.DEFAULT_ANISOTROPY,d=Kn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:uS++}),this.uuid=Qn(),this.name="",this.source=new ss(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new ue(0,0),this.repeat=new ue(1,1),this.center=new ue(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof d=="string"?this.colorSpace=d:(fa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=d===br?sn:Kn),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==$c)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case _a:e.x=e.x-Math.floor(e.x);break;case An:e.x=e.x<0?0:1;break;case ya:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case _a:e.y=e.y-Math.floor(e.y);break;case An:e.y=e.y<0?0:1;break;case ya:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return fa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===sn?br:Ld}set encoding(e){fa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===br?sn:Kn}}Qt.DEFAULT_IMAGE=null;Qt.DEFAULT_MAPPING=$c;Qt.DEFAULT_ANISOTROPY=1;class Lt{constructor(e=0,t=0,n=0,i=1){Lt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],d=u[4],p=u[8],m=u[1],v=u[5],y=u[9],E=u[2],x=u[6],_=u[10];if(Math.abs(d-m)<.01&&Math.abs(p-E)<.01&&Math.abs(y-x)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+E)<.1&&Math.abs(y+x)<.1&&Math.abs(h+v+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(h+1)/2,A=(v+1)/2,R=(_+1)/2,P=(d+m)/4,U=(p+E)/4,F=(y+x)/4;return M>A&&M>R?M<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(M),i=P/n,s=U/n):A>R?A<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(A),n=P/i,s=F/i):R<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(R),n=U/s,i=F/s),this.set(n,i,s,t),this}let w=Math.sqrt((x-y)*(x-y)+(p-E)*(p-E)+(m-d)*(m-d));return Math.abs(w)<.001&&(w=1),this.x=(x-y)/w,this.y=(p-E)/w,this.z=(m-d)/w,this.w=Math.acos((h+v+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Zv extends or{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Lt(0,0,e,t),this.scissorTest=!1,this.viewport=new Lt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(fa("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===br?sn:Kn),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Kt,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new Qt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ss(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class yi extends Zv{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class iu extends Qt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=jt,this.minFilter=jt,this.wrapR=An,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class hS extends yi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new iu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Dd extends Qt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=jt,this.minFilter=jt,this.wrapR=An,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class fS extends yi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Dd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class dS extends yi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let l=0;l<n;l++)this.texture[l]=s.clone(),this.texture[l].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Vn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=s[l+0],v=s[l+1],y=s[l+2],E=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=v,e[t+2]=y,e[t+3]=E;return}if(p!==E||u!==m||h!==v||d!==y){let x=1-c;const _=u*m+h*v+d*y+p*E,w=_>=0?1:-1,M=1-_*_;if(M>Number.EPSILON){const R=Math.sqrt(M),P=Math.atan2(R,_*w);x=Math.sin(x*P)/R,c=Math.sin(c*P)/R}const A=c*w;if(u=u*x+m*A,h=h*x+v*A,d=d*x+y*A,p=p*x+E*A,x===1-c){const R=1/Math.sqrt(u*u+h*h+d*d+p*p);u*=R,h*=R,d*=R,p*=R}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],p=s[l],m=s[l+1],v=s[l+2],y=s[l+3];return e[t]=c*y+d*p+u*v-h*m,e[t+1]=u*y+d*m+h*p-c*v,e[t+2]=h*y+d*v+c*m-u*p,e[t+3]=d*y-c*p-u*m-h*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),p=c(s/2),m=u(n/2),v=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*d*p+h*v*y,this._y=h*v*p-m*d*y,this._z=h*d*y+m*v*p,this._w=h*d*p-m*v*y;break;case"YXZ":this._x=m*d*p+h*v*y,this._y=h*v*p-m*d*y,this._z=h*d*y-m*v*p,this._w=h*d*p+m*v*y;break;case"ZXY":this._x=m*d*p-h*v*y,this._y=h*v*p+m*d*y,this._z=h*d*y+m*v*p,this._w=h*d*p-m*v*y;break;case"ZYX":this._x=m*d*p-h*v*y,this._y=h*v*p+m*d*y,this._z=h*d*y-m*v*p,this._w=h*d*p+m*v*y;break;case"YZX":this._x=m*d*p+h*v*y,this._y=h*v*p+m*d*y,this._z=h*d*y-m*v*p,this._w=h*d*p-m*v*y;break;case"XZY":this._x=m*d*p-h*v*y,this._y=h*v*p-m*d*y,this._z=h*d*y+m*v*p,this._w=h*d*p+m*v*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],d=t[6],p=t[10],m=n+c+p;if(m>0){const v=.5/Math.sqrt(m+1);this._w=.25/v,this._x=(d-u)*v,this._y=(s-h)*v,this._z=(l-i)*v}else if(n>c&&n>p){const v=2*Math.sqrt(1+n-c-p);this._w=(d-u)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(s+h)/v}else if(c>p){const v=2*Math.sqrt(1+c-n-p);this._w=(s-h)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(u+d)/v}else{const v=2*Math.sqrt(1+p-n-c);this._w=(l-i)/v,this._x=(s+h)/v,this._y=(u+d)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Yt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+l*c+i*h-s*u,this._y=i*d+l*u+s*c-n*h,this._z=s*d+l*h+n*u-i*c,this._w=l*d-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-t;return this._w=v*l+t*this._w,this._x=v*n+t*this._x,this._y=v*i+t*this._y,this._z=v*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Wm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Wm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=2*(l*i-c*n),d=2*(c*t-s*i),p=2*(s*n-l*t);return this.x=t+u*h+l*p-c*d,this.y=n+u*d+c*h-s*p,this.z=i+u*p+s*d-l*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return zh.copy(this).projectOnVector(e),this.sub(zh)}reflect(e){return this.sub(zh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Yt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const zh=new D,Wm=new Vn;class ki{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(pi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(pi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=pi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,pi):pi.fromBufferAttribute(s,l),pi.applyMatrix4(e.matrixWorld),this.expandByPoint(pi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),ql.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),ql.copy(n.boundingBox)),ql.applyMatrix4(e.matrixWorld),this.union(ql)}const i=e.children;for(let s=0,l=i.length;s<l;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,pi),pi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Yo),Yl.subVectors(this.max,Yo),Fs.subVectors(e.a,Yo),zs.subVectors(e.b,Yo),Bs.subVectors(e.c,Yo),gr.subVectors(zs,Fs),vr.subVectors(Bs,zs),Wr.subVectors(Fs,Bs);let t=[0,-gr.z,gr.y,0,-vr.z,vr.y,0,-Wr.z,Wr.y,gr.z,0,-gr.x,vr.z,0,-vr.x,Wr.z,0,-Wr.x,-gr.y,gr.x,0,-vr.y,vr.x,0,-Wr.y,Wr.x,0];return!Bh(t,Fs,zs,Bs,Yl)||(t=[1,0,0,0,1,0,0,0,1],!Bh(t,Fs,zs,Bs,Yl))?!1:(Zl.crossVectors(gr,vr),t=[Zl.x,Zl.y,Zl.z],Bh(t,Fs,zs,Bs,Yl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,pi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(pi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Zi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Zi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Zi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Zi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Zi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Zi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Zi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Zi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Zi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Zi=[new D,new D,new D,new D,new D,new D,new D,new D],pi=new D,ql=new ki,Fs=new D,zs=new D,Bs=new D,gr=new D,vr=new D,Wr=new D,Yo=new D,Yl=new D,Zl=new D,Xr=new D;function Bh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Xr.fromArray(r,s);const c=i.x*Math.abs(Xr.x)+i.y*Math.abs(Xr.y)+i.z*Math.abs(Xr.z),u=e.dot(Xr),h=t.dot(Xr),d=n.dot(Xr);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const pS=new ki,Zo=new D,kh=new D;class xi{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):pS.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Zo.subVectors(e,this.center);const t=Zo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Zo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(kh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Zo.copy(e.center).add(kh)),this.expandByPoint(Zo.copy(e.center).sub(kh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ji=new D,Hh=new D,Jl=new D,_r=new D,Vh=new D,jl=new D,Gh=new D;class Mo{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ji)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ji.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ji.copy(this.origin).addScaledVector(this.direction,t),Ji.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Hh.copy(e).add(t).multiplyScalar(.5),Jl.copy(t).sub(e).normalize(),_r.copy(this.origin).sub(Hh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(Jl),c=_r.dot(this.direction),u=-_r.dot(Jl),h=_r.lengthSq(),d=Math.abs(1-l*l);let p,m,v,y;if(d>0)if(p=l*u-c,m=l*c-u,y=s*d,p>=0)if(m>=-y)if(m<=y){const E=1/d;p*=E,m*=E,v=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),v=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Hh).addScaledVector(Jl,m),v}intersectSphere(e,t){Ji.subVectors(e.center,this.origin);const n=Ji.dot(this.direction),i=Ji.dot(Ji)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(s=(e.min.y-m.y)*d,l=(e.max.y-m.y)*d):(s=(e.max.y-m.y)*d,l=(e.min.y-m.y)*d),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Ji)!==null}intersectTriangle(e,t,n,i,s){Vh.subVectors(t,e),jl.subVectors(n,e),Gh.crossVectors(Vh,jl);let l=this.direction.dot(Gh),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;_r.subVectors(this.origin,e);const u=c*this.direction.dot(jl.crossVectors(_r,jl));if(u<0)return null;const h=c*this.direction.dot(Vh.cross(_r));if(h<0||u+h>l)return null;const d=-c*_r.dot(Gh);return d<0?null:this.at(d/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class lt{constructor(e,t,n,i,s,l,c,u,h,d,p,m,v,y,E,x){lt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,d,p,m,v,y,E,x)}set(e,t,n,i,s,l,c,u,h,d,p,m,v,y,E,x){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=l,_[9]=c,_[13]=u,_[2]=h,_[6]=d,_[10]=p,_[14]=m,_[3]=v,_[7]=y,_[11]=E,_[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new lt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/ks.setFromMatrixColumn(e,0).length(),s=1/ks.setFromMatrixColumn(e,1).length(),l=1/ks.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*d,v=l*p,y=c*d,E=c*p;t[0]=u*d,t[4]=-u*p,t[8]=h,t[1]=v+y*h,t[5]=m-E*h,t[9]=-c*u,t[2]=E-m*h,t[6]=y+v*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*d,v=u*p,y=h*d,E=h*p;t[0]=m+E*c,t[4]=y*c-v,t[8]=l*h,t[1]=l*p,t[5]=l*d,t[9]=-c,t[2]=v*c-y,t[6]=E+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*d,v=u*p,y=h*d,E=h*p;t[0]=m-E*c,t[4]=-l*p,t[8]=y+v*c,t[1]=v+y*c,t[5]=l*d,t[9]=E-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*d,v=l*p,y=c*d,E=c*p;t[0]=u*d,t[4]=y*h-v,t[8]=m*h+E,t[1]=u*p,t[5]=E*h+m,t[9]=v*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,v=l*h,y=c*u,E=c*h;t[0]=u*d,t[4]=E-m*p,t[8]=y*p+v,t[1]=p,t[5]=l*d,t[9]=-c*d,t[2]=-h*d,t[6]=v*p+y,t[10]=m-E*p}else if(e.order==="XZY"){const m=l*u,v=l*h,y=c*u,E=c*h;t[0]=u*d,t[4]=-p,t[8]=h*d,t[1]=m*p+E,t[5]=l*d,t[9]=v*p-y,t[2]=y*p-v,t[6]=c*d,t[10]=E*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(mS,e,gS)}lookAt(e,t,n){const i=this.elements;return Jn.subVectors(e,t),Jn.lengthSq()===0&&(Jn.z=1),Jn.normalize(),yr.crossVectors(n,Jn),yr.lengthSq()===0&&(Math.abs(n.z)===1?Jn.x+=1e-4:Jn.z+=1e-4,Jn.normalize(),yr.crossVectors(n,Jn)),yr.normalize(),Kl.crossVectors(Jn,yr),i[0]=yr.x,i[4]=Kl.x,i[8]=Jn.x,i[1]=yr.y,i[5]=Kl.y,i[9]=Jn.y,i[2]=yr.z,i[6]=Kl.z,i[10]=Jn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],d=n[1],p=n[5],m=n[9],v=n[13],y=n[2],E=n[6],x=n[10],_=n[14],w=n[3],M=n[7],A=n[11],R=n[15],P=i[0],U=i[4],F=i[8],b=i[12],L=i[1],k=i[5],$=i[9],ae=i[13],H=i[2],K=i[6],se=i[10],oe=i[14],X=i[3],Y=i[7],Z=i[11],z=i[15];return s[0]=l*P+c*L+u*H+h*X,s[4]=l*U+c*k+u*K+h*Y,s[8]=l*F+c*$+u*se+h*Z,s[12]=l*b+c*ae+u*oe+h*z,s[1]=d*P+p*L+m*H+v*X,s[5]=d*U+p*k+m*K+v*Y,s[9]=d*F+p*$+m*se+v*Z,s[13]=d*b+p*ae+m*oe+v*z,s[2]=y*P+E*L+x*H+_*X,s[6]=y*U+E*k+x*K+_*Y,s[10]=y*F+E*$+x*se+_*Z,s[14]=y*b+E*ae+x*oe+_*z,s[3]=w*P+M*L+A*H+R*X,s[7]=w*U+M*k+A*K+R*Y,s[11]=w*F+M*$+A*se+R*Z,s[15]=w*b+M*ae+A*oe+R*z,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],d=e[2],p=e[6],m=e[10],v=e[14],y=e[3],E=e[7],x=e[11],_=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*v-n*u*v)+E*(+t*u*v-t*h*m+s*l*m-i*l*v+i*h*d-s*u*d)+x*(+t*h*p-t*c*v-s*l*p+n*l*v+s*c*d-n*h*d)+_*(-i*c*d-t*u*p+t*c*m+i*l*p-n*l*m+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=e[9],m=e[10],v=e[11],y=e[12],E=e[13],x=e[14],_=e[15],w=p*x*h-E*m*h+E*u*v-c*x*v-p*u*_+c*m*_,M=y*m*h-d*x*h-y*u*v+l*x*v+d*u*_-l*m*_,A=d*E*h-y*p*h+y*c*v-l*E*v-d*c*_+l*p*_,R=y*p*u-d*E*u-y*c*m+l*E*m+d*c*x-l*p*x,P=t*w+n*M+i*A+s*R;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const U=1/P;return e[0]=w*U,e[1]=(E*m*s-p*x*s-E*i*v+n*x*v+p*i*_-n*m*_)*U,e[2]=(c*x*s-E*u*s+E*i*h-n*x*h-c*i*_+n*u*_)*U,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*v-n*u*v)*U,e[4]=M*U,e[5]=(d*x*s-y*m*s+y*i*v-t*x*v-d*i*_+t*m*_)*U,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*_-t*u*_)*U,e[7]=(l*m*s-d*u*s+d*i*h-t*m*h-l*i*v+t*u*v)*U,e[8]=A*U,e[9]=(y*p*s-d*E*s-y*n*v+t*E*v+d*n*_-t*p*_)*U,e[10]=(l*E*s-y*c*s+y*n*h-t*E*h-l*n*_+t*c*_)*U,e[11]=(d*c*s-l*p*s-d*n*h+t*p*h+l*n*v-t*c*v)*U,e[12]=R*U,e[13]=(d*E*i-y*p*i+y*n*m-t*E*m-d*n*x+t*p*x)*U,e[14]=(y*c*i-l*E*i-y*n*u+t*E*u+l*n*x-t*c*x)*U,e[15]=(l*p*i-d*c*i+d*n*u-t*p*u-l*n*m+t*c*m)*U,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,d=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*l,0,h*u-i*c,d*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,d=l+l,p=c+c,m=s*h,v=s*d,y=s*p,E=l*d,x=l*p,_=c*p,w=u*h,M=u*d,A=u*p,R=n.x,P=n.y,U=n.z;return i[0]=(1-(E+_))*R,i[1]=(v+A)*R,i[2]=(y-M)*R,i[3]=0,i[4]=(v-A)*P,i[5]=(1-(m+_))*P,i[6]=(x+w)*P,i[7]=0,i[8]=(y+M)*U,i[9]=(x-w)*U,i[10]=(1-(m+E))*U,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=ks.set(i[0],i[1],i[2]).length();const l=ks.set(i[4],i[5],i[6]).length(),c=ks.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],mi.copy(this);const h=1/s,d=1/l,p=1/c;return mi.elements[0]*=h,mi.elements[1]*=h,mi.elements[2]*=h,mi.elements[4]*=d,mi.elements[5]*=d,mi.elements[6]*=d,mi.elements[8]*=p,mi.elements[9]*=p,mi.elements[10]*=p,t.setFromRotationMatrix(mi),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Di){const u=this.elements,h=2*s/(t-e),d=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let v,y;if(c===Di)v=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===ba)v=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=d,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=v,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Di){const u=this.elements,h=1/(t-e),d=1/(n-i),p=1/(l-s),m=(t+e)*h,v=(n+i)*d;let y,E;if(c===Di)y=(l+s)*p,E=-2*p;else if(c===ba)y=s*p,E=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-v,u[2]=0,u[6]=0,u[10]=E,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const ks=new D,mi=new lt,mS=new D(0,0,0),gS=new D(1,1,1),yr=new D,Kl=new D,Jn=new D,Xm=new lt,qm=new Vn;class ka{constructor(e=0,t=0,n=0,i=ka.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],d=i[9],p=i[2],m=i[6],v=i[10];switch(t){case"XYZ":this._y=Math.asin(Yt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,v),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Yt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Yt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,v),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Yt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,v),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Yt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-Yt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-d,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Xm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Xm,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return qm.setFromEuler(this),this.setFromQuaternion(qm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ka.DEFAULT_ORDER="XYZ";class us{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let vS=0;const Ym=new D,Hs=new Vn,ji=new lt,Ql=new D,Jo=new D,_S=new D,yS=new Vn,Zm=new D(1,0,0),Jm=new D(0,1,0),jm=new D(0,0,1),xS={type:"added"},SS={type:"removed"};class Rt extends or{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:vS++}),this.uuid=Qn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Rt.DEFAULT_UP.clone();const e=new D,t=new ka,n=new Vn,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new lt},normalMatrix:{value:new pt}}),this.matrix=new lt,this.matrixWorld=new lt,this.matrixAutoUpdate=Rt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new us,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Hs.setFromAxisAngle(e,t),this.quaternion.multiply(Hs),this}rotateOnWorldAxis(e,t){return Hs.setFromAxisAngle(e,t),this.quaternion.premultiply(Hs),this}rotateX(e){return this.rotateOnAxis(Zm,e)}rotateY(e){return this.rotateOnAxis(Jm,e)}rotateZ(e){return this.rotateOnAxis(jm,e)}translateOnAxis(e,t){return Ym.copy(e).applyQuaternion(this.quaternion),this.position.add(Ym.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Zm,e)}translateY(e){return this.translateOnAxis(Jm,e)}translateZ(e){return this.translateOnAxis(jm,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ji.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ql.copy(e):Ql.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Jo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ji.lookAt(Jo,Ql,this.up):ji.lookAt(Ql,Jo,this.up),this.quaternion.setFromRotationMatrix(ji),i&&(ji.extractRotation(i.matrixWorld),Hs.setFromRotationMatrix(ji),this.quaternion.premultiply(Hs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(xS)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(SS)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),ji.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),ji.multiply(e.parent.matrixWorld)),e.applyMatrix4(ji),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const l=this.children[i].getObjectsByProperty(e,t);l.length>0&&(n=n.concat(l))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Jo,e,_S),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Jo,yS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),d=l(e.images),p=l(e.shapes),m=l(e.skeletons),v=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),v.length>0&&(n.animations=v),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Rt.DEFAULT_UP=new D(0,1,0);Rt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const gi=new D,Ki=new D,Wh=new D,Qi=new D,Vs=new D,Gs=new D,Km=new D,Xh=new D,qh=new D,Yh=new D;let $l=!1;class Bn{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),gi.subVectors(e,t),i.cross(gi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){gi.subVectors(i,t),Ki.subVectors(n,t),Wh.subVectors(e,t);const l=gi.dot(gi),c=gi.dot(Ki),u=gi.dot(Wh),h=Ki.dot(Ki),d=Ki.dot(Wh),p=l*h-c*c;if(p===0)return s.set(-2,-1,-1);const m=1/p,v=(h*u-c*d)*m,y=(l*d-c*u)*m;return s.set(1-v-y,y,v)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Qi),Qi.x>=0&&Qi.y>=0&&Qi.x+Qi.y<=1}static getUV(e,t,n,i,s,l,c,u){return $l===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),$l=!0),this.getInterpolation(e,t,n,i,s,l,c,u)}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,Qi),u.setScalar(0),u.addScaledVector(s,Qi.x),u.addScaledVector(l,Qi.y),u.addScaledVector(c,Qi.z),u}static isFrontFacing(e,t,n,i){return gi.subVectors(n,t),Ki.subVectors(e,t),gi.cross(Ki).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return gi.subVectors(this.c,this.b),Ki.subVectors(this.a,this.b),gi.cross(Ki).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Bn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Bn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return $l===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),$l=!0),Bn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return Bn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Bn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Bn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;Vs.subVectors(i,n),Gs.subVectors(s,n),Xh.subVectors(e,n);const u=Vs.dot(Xh),h=Gs.dot(Xh);if(u<=0&&h<=0)return t.copy(n);qh.subVectors(e,i);const d=Vs.dot(qh),p=Gs.dot(qh);if(d>=0&&p<=d)return t.copy(i);const m=u*p-d*h;if(m<=0&&u>=0&&d<=0)return l=u/(u-d),t.copy(n).addScaledVector(Vs,l);Yh.subVectors(e,s);const v=Vs.dot(Yh),y=Gs.dot(Yh);if(y>=0&&v<=y)return t.copy(s);const E=v*h-u*y;if(E<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Gs,c);const x=d*y-v*p;if(x<=0&&p-d>=0&&v-y>=0)return Km.subVectors(s,i),c=(p-d)/(p-d+(v-y)),t.copy(i).addScaledVector(Km,c);const _=1/(x+E+m);return l=E*_,c=m*_,t.copy(n).addScaledVector(Vs,l).addScaledVector(Gs,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Jv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},xr={h:0,s:0,l:0},ec={h:0,s:0,l:0};function Zh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Ue{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=sn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Pt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Pt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Pt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Pt.workingColorSpace){if(e=Id(e,1),t=Yt(t,0,1),n=Yt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=Zh(l,s,e+1/3),this.g=Zh(l,s,e),this.b=Zh(l,s,e-1/3)}return Pt.toWorkingColorSpace(this,i),this}setStyle(e,t=sn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=sn){const n=Jv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=fo(e.r),this.g=fo(e.g),this.b=fo(e.b),this}copyLinearToSRGB(e){return this.r=Oh(e.r),this.g=Oh(e.g),this.b=Oh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=sn){return Pt.fromWorkingColorSpace(Tn.copy(this),e),Math.round(Yt(Tn.r*255,0,255))*65536+Math.round(Yt(Tn.g*255,0,255))*256+Math.round(Yt(Tn.b*255,0,255))}getHexString(e=sn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Pt.workingColorSpace){Pt.fromWorkingColorSpace(Tn.copy(this),t);const n=Tn.r,i=Tn.g,s=Tn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const d=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=d<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=Pt.workingColorSpace){return Pt.fromWorkingColorSpace(Tn.copy(this),t),e.r=Tn.r,e.g=Tn.g,e.b=Tn.b,e}getStyle(e=sn){Pt.fromWorkingColorSpace(Tn.copy(this),e);const t=Tn.r,n=Tn.g,i=Tn.b;return e!==sn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(xr),this.setHSL(xr.h+e,xr.s+t,xr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(xr),e.getHSL(ec);const n=ha(xr.h,ec.h,t),i=ha(xr.s,ec.s,t),s=ha(xr.l,ec.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Tn=new Ue;Ue.NAMES=Jv;let MS=0;class bn extends or{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:MS++}),this.uuid=Qn(),this.name="",this.type="Material",this.blending=as,this.side=ir,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Xc,this.blendDst=qc,this.blendEquation=wr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ue(0,0,0),this.blendAlpha=0,this.depthFunc=ma,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=cd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=es,this.stencilZFail=es,this.stencilZPass=es,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==as&&(n.blending=this.blending),this.side!==ir&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Xc&&(n.blendSrc=this.blendSrc),this.blendDst!==qc&&(n.blendDst=this.blendDst),this.blendEquation!==wr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ma&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==cd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==es&&(n.stencilFail=this.stencilFail),this.stencilZFail!==es&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==es&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ir extends bn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=za,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const er=ES();function ES(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;(h&8388608)===0;)h<<=1,d-=8388608;h&=-8388609,d+=947912704,s[u]=h|d}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function zn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Yt(r,-65504,65504),er.floatView[0]=r;const e=er.uint32View[0],t=e>>23&511;return er.baseTable[t]+((e&8388607)>>er.shiftTable[t])}function aa(r){const e=r>>10;return er.uint32View[0]=er.mantissaTable[er.offsetTable[e]+(r&1023)]+er.exponentTable[e],er.floatView[0]}const wS={toHalfFloat:zn,fromHalfFloat:aa},nn=new D,tc=new ue;class Dt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Aa,this.updateRange={offset:0,count:-1},this.gpuType=Ui,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)tc.fromBufferAttribute(this,t),tc.applyMatrix3(e),this.setXY(t,tc.x,tc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.applyMatrix3(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.applyMatrix4(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.applyNormalMatrix(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)nn.fromBufferAttribute(this,t),nn.transformDirection(e),this.setXYZ(t,nn.x,nn.y,nn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Hn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ft(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array),s=ft(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Aa&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class TS extends Dt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class AS extends Dt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class bS extends Dt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class RS extends Dt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Nd extends Dt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class CS extends Dt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Od extends Dt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class PS extends Dt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=aa(this.array[e*this.itemSize]);return this.normalized&&(t=Hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize]=zn(t),this}getY(e){let t=aa(this.array[e*this.itemSize+1]);return this.normalized&&(t=Hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+1]=zn(t),this}getZ(e){let t=aa(this.array[e*this.itemSize+2]);return this.normalized&&(t=Hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+2]=zn(t),this}getW(e){let t=aa(this.array[e*this.itemSize+3]);return this.normalized&&(t=Hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+3]=zn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array)),this.array[e+0]=zn(t),this.array[e+1]=zn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array)),this.array[e+0]=zn(t),this.array[e+1]=zn(n),this.array[e+2]=zn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array),s=ft(s,this.array)),this.array[e+0]=zn(t),this.array[e+1]=zn(n),this.array[e+2]=zn(i),this.array[e+3]=zn(s),this}}class ze extends Dt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class LS extends Dt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let IS=0;const ui=new lt,Jh=new Rt,Ws=new D,jn=new ki,jo=new ki,pn=new D;class gt extends or{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:IS++}),this.uuid=Qn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(qv(e)?Od:Nd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new pt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ui.makeRotationFromQuaternion(e),this.applyMatrix4(ui),this}rotateX(e){return ui.makeRotationX(e),this.applyMatrix4(ui),this}rotateY(e){return ui.makeRotationY(e),this.applyMatrix4(ui),this}rotateZ(e){return ui.makeRotationZ(e),this.applyMatrix4(ui),this}translate(e,t,n){return ui.makeTranslation(e,t,n),this.applyMatrix4(ui),this}scale(e,t,n){return ui.makeScale(e,t,n),this.applyMatrix4(ui),this}lookAt(e){return Jh.lookAt(e),Jh.updateMatrix(),this.applyMatrix4(Jh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ws).negate(),this.translate(Ws.x,Ws.y,Ws.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ze(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ki);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];jn.setFromBufferAttribute(s),this.morphTargetsRelative?(pn.addVectors(this.boundingBox.min,jn.min),this.boundingBox.expandByPoint(pn),pn.addVectors(this.boundingBox.max,jn.max),this.boundingBox.expandByPoint(pn)):(this.boundingBox.expandByPoint(jn.min),this.boundingBox.expandByPoint(jn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new xi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(jn.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];jo.setFromBufferAttribute(c),this.morphTargetsRelative?(pn.addVectors(jn.min,jo.min),jn.expandByPoint(pn),pn.addVectors(jn.max,jo.max),jn.expandByPoint(pn)):(jn.expandByPoint(jo.min),jn.expandByPoint(jo.max))}jn.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)pn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(pn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)pn.fromBufferAttribute(c,h),u&&(Ws.fromBufferAttribute(e,h),pn.add(Ws)),i=Math.max(i,n.distanceToSquared(pn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,l=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Dt(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],d=[];for(let L=0;L<c;L++)h[L]=new D,d[L]=new D;const p=new D,m=new D,v=new D,y=new ue,E=new ue,x=new ue,_=new D,w=new D;function M(L,k,$){p.fromArray(i,L*3),m.fromArray(i,k*3),v.fromArray(i,$*3),y.fromArray(l,L*2),E.fromArray(l,k*2),x.fromArray(l,$*2),m.sub(p),v.sub(p),E.sub(y),x.sub(y);const ae=1/(E.x*x.y-x.x*E.y);isFinite(ae)&&(_.copy(m).multiplyScalar(x.y).addScaledVector(v,-E.y).multiplyScalar(ae),w.copy(v).multiplyScalar(E.x).addScaledVector(m,-x.x).multiplyScalar(ae),h[L].add(_),h[k].add(_),h[$].add(_),d[L].add(w),d[k].add(w),d[$].add(w))}let A=this.groups;A.length===0&&(A=[{start:0,count:n.length}]);for(let L=0,k=A.length;L<k;++L){const $=A[L],ae=$.start,H=$.count;for(let K=ae,se=ae+H;K<se;K+=3)M(n[K+0],n[K+1],n[K+2])}const R=new D,P=new D,U=new D,F=new D;function b(L){U.fromArray(s,L*3),F.copy(U);const k=h[L];R.copy(k),R.sub(U.multiplyScalar(U.dot(k))).normalize(),P.crossVectors(F,k);const ae=P.dot(d[L])<0?-1:1;u[L*4]=R.x,u[L*4+1]=R.y,u[L*4+2]=R.z,u[L*4+3]=ae}for(let L=0,k=A.length;L<k;++L){const $=A[L],ae=$.start,H=$.count;for(let K=ae,se=ae+H;K<se;K+=3)b(n[K+0]),b(n[K+1]),b(n[K+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Dt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,v=n.count;m<v;m++)n.setXYZ(m,0,0,0);const i=new D,s=new D,l=new D,c=new D,u=new D,h=new D,d=new D,p=new D;if(e)for(let m=0,v=e.count;m<v;m+=3){const y=e.getX(m+0),E=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,E),l.fromBufferAttribute(t,x),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,E),h.fromBufferAttribute(n,x),c.add(d),u.add(d),h.add(d),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(E,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,v=t.count;m<v;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)pn.fromBufferAttribute(e,t),pn.normalize(),e.setXYZ(t,pn.x,pn.y,pn.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,p=c.normalized,m=new h.constructor(u.length*d);let v=0,y=0;for(let E=0,x=u.length;E<x;E++){c.isInterleavedBufferAttribute?v=u[E]*c.data.stride+c.offset:v=u[E]*d;for(let _=0;_<d;_++)m[y++]=h[v++]}return new Dt(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new gt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,p=h.length;d<p;d++){const m=h[d],v=e(m,n);u.push(v)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let p=0,m=h.length;p<m;p++){const v=h[p];d.push(v.toJSON(e.data))}d.length>0&&(i[u]=d,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const s=e.morphAttributes;for(const h in s){const d=[],p=s[h];for(let m=0,v=p.length;m<v;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,d=l.length;h<d;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Qm=new lt,qr=new Mo,nc=new xi,$m=new D,Xs=new D,qs=new D,Ys=new D,jh=new D,ic=new D,rc=new ue,sc=new ue,oc=new ue,eg=new D,tg=new D,ng=new D,ac=new D,lc=new D;class yn extends Rt{constructor(e=new gt,t=new Ir){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){ic.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const d=c[u],p=s[u];d!==0&&(jh.fromBufferAttribute(p,e),l?ic.addScaledVector(jh,d):ic.addScaledVector(jh.sub(t),d))}t.add(ic)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),nc.copy(n.boundingSphere),nc.applyMatrix4(s),qr.copy(e.ray).recast(e.near),!(nc.containsPoint(qr.origin)===!1&&(qr.intersectSphere(nc,$m)===null||qr.origin.distanceToSquared($m)>(e.far-e.near)**2))&&(Qm.copy(s).invert(),qr.copy(e.ray).applyMatrix4(Qm),!(n.boundingBox!==null&&qr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,qr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,d=s.attributes.uv1,p=s.attributes.normal,m=s.groups,v=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,E=m.length;y<E;y++){const x=m[y],_=l[x.materialIndex],w=Math.max(x.start,v.start),M=Math.min(c.count,Math.min(x.start+x.count,v.start+v.count));for(let A=w,R=M;A<R;A+=3){const P=c.getX(A),U=c.getX(A+1),F=c.getX(A+2);i=cc(this,_,e,n,h,d,p,P,U,F),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,v.start),E=Math.min(c.count,v.start+v.count);for(let x=y,_=E;x<_;x+=3){const w=c.getX(x),M=c.getX(x+1),A=c.getX(x+2);i=cc(this,l,e,n,h,d,p,w,M,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,E=m.length;y<E;y++){const x=m[y],_=l[x.materialIndex],w=Math.max(x.start,v.start),M=Math.min(u.count,Math.min(x.start+x.count,v.start+v.count));for(let A=w,R=M;A<R;A+=3){const P=A,U=A+1,F=A+2;i=cc(this,_,e,n,h,d,p,P,U,F),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,v.start),E=Math.min(u.count,v.start+v.count);for(let x=y,_=E;x<_;x+=3){const w=x,M=x+1,A=x+2;i=cc(this,l,e,n,h,d,p,w,M,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function US(r,e,t,n,i,s,l,c){let u;if(e.side===Un?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===ir,c),u===null)return null;lc.copy(c),lc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(lc);return h<t.near||h>t.far?null:{distance:h,point:lc.clone(),object:r}}function cc(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,Xs),r.getVertexPosition(u,qs),r.getVertexPosition(h,Ys);const d=US(r,e,t,n,Xs,qs,Ys,ac);if(d){i&&(rc.fromBufferAttribute(i,c),sc.fromBufferAttribute(i,u),oc.fromBufferAttribute(i,h),d.uv=Bn.getInterpolation(ac,Xs,qs,Ys,rc,sc,oc,new ue)),s&&(rc.fromBufferAttribute(s,c),sc.fromBufferAttribute(s,u),oc.fromBufferAttribute(s,h),d.uv1=Bn.getInterpolation(ac,Xs,qs,Ys,rc,sc,oc,new ue),d.uv2=d.uv1),l&&(eg.fromBufferAttribute(l,c),tg.fromBufferAttribute(l,u),ng.fromBufferAttribute(l,h),d.normal=Bn.getInterpolation(ac,Xs,qs,Ys,eg,tg,ng,new D),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new D,materialIndex:0};Bn.getNormal(Xs,qs,Ys,p.normal),d.face=p}return d}class vs extends gt{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],d=[],p=[];let m=0,v=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new ze(h,3)),this.setAttribute("normal",new ze(d,3)),this.setAttribute("uv",new ze(p,2));function y(E,x,_,w,M,A,R,P,U,F,b){const L=A/U,k=R/F,$=A/2,ae=R/2,H=P/2,K=U+1,se=F+1;let oe=0,X=0;const Y=new D;for(let Z=0;Z<se;Z++){const z=Z*k-ae;for(let j=0;j<K;j++){const fe=j*L-$;Y[E]=fe*w,Y[x]=z*M,Y[_]=H,h.push(Y.x,Y.y,Y.z),Y[E]=0,Y[x]=0,Y[_]=P>0?1:-1,d.push(Y.x,Y.y,Y.z),p.push(j/U),p.push(1-Z/F),oe+=1}}for(let Z=0;Z<F;Z++)for(let z=0;z<U;z++){const j=m+z+K*Z,fe=m+z+K*(Z+1),we=m+(z+1)+K*(Z+1),Ae=m+(z+1)+K*Z;u.push(j,fe,Ae),u.push(fe,we,Ae),X+=6}c.addGroup(v,X,b),v+=X,m+=oe}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function _o(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function In(r){const e={};for(let t=0;t<r.length;t++){const n=_o(r[t]);for(const i in n)e[i]=n[i]}return e}function DS(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function jv(r){return r.getRenderTarget()===null?r.outputColorSpace:Pt.workingColorSpace}const Kv={clone:_o,merge:In};var NS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,OS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Bi extends bn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=NS,this.fragmentShader=OS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=_o(e.uniforms),this.uniformsGroups=DS(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ha extends Rt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new lt,this.projectionMatrix=new lt,this.projectionMatrixInverse=new lt,this.coordinateSystem=Di}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class mn extends Ha{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=vo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(cs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return vo*2*Math.atan(Math.tan(cs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(cs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Zs=-90,Js=1;class Qv extends Rt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new mn(Zs,Js,e,t);i.layers=this.layers,this.add(i);const s=new mn(Zs,Js,e,t);s.layers=this.layers,this.add(s);const l=new mn(Zs,Js,e,t);l.layers=this.layers,this.add(l);const c=new mn(Zs,Js,e,t);c.layers=this.layers,this.add(c);const u=new mn(Zs,Js,e,t);u.layers=this.layers,this.add(u);const h=new mn(Zs,Js,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Di)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===ba)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,d]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),v=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const E=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=E,e.setRenderTarget(n,5,i),e.render(t,d),e.setRenderTarget(p,m,v),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class Va extends Qt{constructor(e,t,n,i,s,l,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:rr,super(e,t,n,i,s,l,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class $v extends yi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(fa("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===br?sn:Kn),this.texture=new Va(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Kt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new vs(5,5,5),s=new Bi({name:"CubemapFromEquirect",uniforms:_o(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Un,blending:nr});s.uniforms.tEquirect.value=t;const l=new yn(i,s),c=t.minFilter;return t.minFilter===Cr&&(t.minFilter=Kt),new Qv(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const Kh=new D,FS=new D,zS=new pt;class Er{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Kh.subVectors(n,t).cross(FS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Kh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||zS.getNormalMatrix(e),i=this.coplanarPoint(Kh).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Yr=new xi,uc=new D;class ru{constructor(e=new Er,t=new Er,n=new Er,i=new Er,s=new Er,l=new Er){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Di){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],d=i[5],p=i[6],m=i[7],v=i[8],y=i[9],E=i[10],x=i[11],_=i[12],w=i[13],M=i[14],A=i[15];if(n[0].setComponents(u-s,m-h,x-v,A-_).normalize(),n[1].setComponents(u+s,m+h,x+v,A+_).normalize(),n[2].setComponents(u+l,m+d,x+y,A+w).normalize(),n[3].setComponents(u-l,m-d,x-y,A-w).normalize(),n[4].setComponents(u-c,m-p,x-E,A-M).normalize(),t===Di)n[5].setComponents(u+c,m+p,x+E,A+M).normalize();else if(t===ba)n[5].setComponents(c,p,E,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Yr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Yr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Yr)}intersectsSprite(e){return Yr.center.set(0,0,0),Yr.radius=.7071067811865476,Yr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Yr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(uc.x=i.normal.x>0?e.max.x:e.min.x,uc.y=i.normal.y>0?e.max.y:e.min.y,uc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(uc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function e_(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function BS(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const p=h.array,m=h.usage,v=r.createBuffer();r.bindBuffer(d,v),r.bufferData(d,p,m),h.onUploadCallback();let y;if(p instanceof Float32Array)y=r.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)y=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else y=r.UNSIGNED_SHORT;else if(p instanceof Int16Array)y=r.SHORT;else if(p instanceof Uint32Array)y=r.UNSIGNED_INT;else if(p instanceof Int32Array)y=r.INT;else if(p instanceof Int8Array)y=r.BYTE;else if(p instanceof Uint8Array)y=r.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)y=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:v,type:y,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function s(h,d,p){const m=d.array,v=d.updateRange;r.bindBuffer(p,h),v.count===-1?r.bufferSubData(p,0,m):(t?r.bufferSubData(p,v.offset*m.BYTES_PER_ELEMENT,m,v.offset,v.count):r.bufferSubData(p,v.offset*m.BYTES_PER_ELEMENT,m.subarray(v.offset,v.offset+v.count)),v.count=-1),d.onUploadCallback()}function l(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(r.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p===void 0?n.set(h,i(h,d)):p.version<h.version&&(s(p.buffer,h,d),p.version=h.version)}return{get:l,remove:c,update:u}}class Ga extends gt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,p=e/c,m=t/u,v=[],y=[],E=[],x=[];for(let _=0;_<d;_++){const w=_*m-l;for(let M=0;M<h;M++){const A=M*p-s;y.push(A,-w,0),E.push(0,0,1),x.push(M/c),x.push(1-_/u)}}for(let _=0;_<u;_++)for(let w=0;w<c;w++){const M=w+h*_,A=w+h*(_+1),R=w+1+h*(_+1),P=w+1+h*_;v.push(M,A,P),v.push(A,R,P)}this.setIndex(v),this.setAttribute("position",new ze(y,3)),this.setAttribute("normal",new ze(E,3)),this.setAttribute("uv",new ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ga(e.width,e.height,e.widthSegments,e.heightSegments)}}var kS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,HS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,VS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,GS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,WS=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,XS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,qS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,YS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,ZS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,JS=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,jS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,KS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,QS=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,$S=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,eM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,tM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,nM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,iM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,rM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,sM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,oM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,aM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,lM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,cM=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,uM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,hM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,fM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,dM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,pM="gl_FragColor = linearToOutputTexel( gl_FragColor );",mM=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,gM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,vM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,_M=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,yM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,xM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,SM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,MM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,EM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,wM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,TM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,AM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,bM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,RM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,CM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,PM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,LM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,IM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,UM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,DM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,NM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,OM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,FM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,zM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,BM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,kM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,HM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,VM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,GM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,WM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,XM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,qM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,YM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ZM=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,JM=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,jM=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,KM=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,QM=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,$M=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,e1=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,t1=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,n1=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,i1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,r1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,s1=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,o1=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,a1=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,l1=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,c1=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,u1=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,h1=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,f1=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,d1=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,p1=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,m1=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,g1=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,v1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,_1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,y1=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,x1=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,S1=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,M1=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,E1=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,w1=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,T1=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,A1=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,b1=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,R1=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,C1=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,P1=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,L1=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,I1=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,U1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,D1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,N1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,O1=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const F1=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,z1=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,B1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,k1=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,H1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,V1=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,G1=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,W1=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,X1=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,q1=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Y1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Z1=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,J1=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,j1=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,K1=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Q1=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$1=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,eE=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,nE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,iE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,rE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,sE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,oE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,lE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,uE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hE=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,fE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,dE=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,pE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,mE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,gE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ht={alphahash_fragment:kS,alphahash_pars_fragment:HS,alphamap_fragment:VS,alphamap_pars_fragment:GS,alphatest_fragment:WS,alphatest_pars_fragment:XS,aomap_fragment:qS,aomap_pars_fragment:YS,begin_vertex:ZS,beginnormal_vertex:JS,bsdfs:jS,iridescence_fragment:KS,bumpmap_pars_fragment:QS,clipping_planes_fragment:$S,clipping_planes_pars_fragment:eM,clipping_planes_pars_vertex:tM,clipping_planes_vertex:nM,color_fragment:iM,color_pars_fragment:rM,color_pars_vertex:sM,color_vertex:oM,common:aM,cube_uv_reflection_fragment:lM,defaultnormal_vertex:cM,displacementmap_pars_vertex:uM,displacementmap_vertex:hM,emissivemap_fragment:fM,emissivemap_pars_fragment:dM,colorspace_fragment:pM,colorspace_pars_fragment:mM,envmap_fragment:gM,envmap_common_pars_fragment:vM,envmap_pars_fragment:_M,envmap_pars_vertex:yM,envmap_physical_pars_fragment:LM,envmap_vertex:xM,fog_vertex:SM,fog_pars_vertex:MM,fog_fragment:EM,fog_pars_fragment:wM,gradientmap_pars_fragment:TM,lightmap_fragment:AM,lightmap_pars_fragment:bM,lights_lambert_fragment:RM,lights_lambert_pars_fragment:CM,lights_pars_begin:PM,lights_toon_fragment:IM,lights_toon_pars_fragment:UM,lights_phong_fragment:DM,lights_phong_pars_fragment:NM,lights_physical_fragment:OM,lights_physical_pars_fragment:FM,lights_fragment_begin:zM,lights_fragment_maps:BM,lights_fragment_end:kM,logdepthbuf_fragment:HM,logdepthbuf_pars_fragment:VM,logdepthbuf_pars_vertex:GM,logdepthbuf_vertex:WM,map_fragment:XM,map_pars_fragment:qM,map_particle_fragment:YM,map_particle_pars_fragment:ZM,metalnessmap_fragment:JM,metalnessmap_pars_fragment:jM,morphcolor_vertex:KM,morphnormal_vertex:QM,morphtarget_pars_vertex:$M,morphtarget_vertex:e1,normal_fragment_begin:t1,normal_fragment_maps:n1,normal_pars_fragment:i1,normal_pars_vertex:r1,normal_vertex:s1,normalmap_pars_fragment:o1,clearcoat_normal_fragment_begin:a1,clearcoat_normal_fragment_maps:l1,clearcoat_pars_fragment:c1,iridescence_pars_fragment:u1,opaque_fragment:h1,packing:f1,premultiplied_alpha_fragment:d1,project_vertex:p1,dithering_fragment:m1,dithering_pars_fragment:g1,roughnessmap_fragment:v1,roughnessmap_pars_fragment:_1,shadowmap_pars_fragment:y1,shadowmap_pars_vertex:x1,shadowmap_vertex:S1,shadowmask_pars_fragment:M1,skinbase_vertex:E1,skinning_pars_vertex:w1,skinning_vertex:T1,skinnormal_vertex:A1,specularmap_fragment:b1,specularmap_pars_fragment:R1,tonemapping_fragment:C1,tonemapping_pars_fragment:P1,transmission_fragment:L1,transmission_pars_fragment:I1,uv_pars_fragment:U1,uv_pars_vertex:D1,uv_vertex:N1,worldpos_vertex:O1,background_vert:F1,background_frag:z1,backgroundCube_vert:B1,backgroundCube_frag:k1,cube_vert:H1,cube_frag:V1,depth_vert:G1,depth_frag:W1,distanceRGBA_vert:X1,distanceRGBA_frag:q1,equirect_vert:Y1,equirect_frag:Z1,linedashed_vert:J1,linedashed_frag:j1,meshbasic_vert:K1,meshbasic_frag:Q1,meshlambert_vert:$1,meshlambert_frag:eE,meshmatcap_vert:tE,meshmatcap_frag:nE,meshnormal_vert:iE,meshnormal_frag:rE,meshphong_vert:sE,meshphong_frag:oE,meshphysical_vert:aE,meshphysical_frag:lE,meshtoon_vert:cE,meshtoon_frag:uE,points_vert:hE,points_frag:fE,shadow_vert:dE,shadow_frag:pE,sprite_vert:mE,sprite_frag:gE},Te={common:{diffuse:{value:new Ue(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new pt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new pt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new pt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new pt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new pt},normalScale:{value:new ue(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new pt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new pt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new pt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new pt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ue(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ue(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0},uvTransform:{value:new pt}},sprite:{diffuse:{value:new Ue(16777215)},opacity:{value:1},center:{value:new ue(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}}},_i={basic:{uniforms:In([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.fog]),vertexShader:ht.meshbasic_vert,fragmentShader:ht.meshbasic_frag},lambert:{uniforms:In([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)}}]),vertexShader:ht.meshlambert_vert,fragmentShader:ht.meshlambert_frag},phong:{uniforms:In([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)},specular:{value:new Ue(1118481)},shininess:{value:30}}]),vertexShader:ht.meshphong_vert,fragmentShader:ht.meshphong_frag},standard:{uniforms:In([Te.common,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.roughnessmap,Te.metalnessmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag},toon:{uniforms:In([Te.common,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.gradientmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)}}]),vertexShader:ht.meshtoon_vert,fragmentShader:ht.meshtoon_frag},matcap:{uniforms:In([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,{matcap:{value:null}}]),vertexShader:ht.meshmatcap_vert,fragmentShader:ht.meshmatcap_frag},points:{uniforms:In([Te.points,Te.fog]),vertexShader:ht.points_vert,fragmentShader:ht.points_frag},dashed:{uniforms:In([Te.common,Te.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ht.linedashed_vert,fragmentShader:ht.linedashed_frag},depth:{uniforms:In([Te.common,Te.displacementmap]),vertexShader:ht.depth_vert,fragmentShader:ht.depth_frag},normal:{uniforms:In([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,{opacity:{value:1}}]),vertexShader:ht.meshnormal_vert,fragmentShader:ht.meshnormal_frag},sprite:{uniforms:In([Te.sprite,Te.fog]),vertexShader:ht.sprite_vert,fragmentShader:ht.sprite_frag},background:{uniforms:{uvTransform:{value:new pt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ht.background_vert,fragmentShader:ht.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:ht.backgroundCube_vert,fragmentShader:ht.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ht.cube_vert,fragmentShader:ht.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ht.equirect_vert,fragmentShader:ht.equirect_frag},distanceRGBA:{uniforms:In([Te.common,Te.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ht.distanceRGBA_vert,fragmentShader:ht.distanceRGBA_frag},shadow:{uniforms:In([Te.lights,Te.fog,{color:{value:new Ue(0)},opacity:{value:1}}]),vertexShader:ht.shadow_vert,fragmentShader:ht.shadow_frag}};_i.physical={uniforms:In([_i.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new pt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new pt},clearcoatNormalScale:{value:new ue(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new pt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new pt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new pt},sheen:{value:0},sheenColor:{value:new Ue(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new pt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new pt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new pt},transmissionSamplerSize:{value:new ue},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new pt},attenuationDistance:{value:0},attenuationColor:{value:new Ue(0)},specularColor:{value:new Ue(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new pt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new pt},anisotropyVector:{value:new ue},anisotropyMap:{value:null},anisotropyMapTransform:{value:new pt}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag};const hc={r:0,b:0,g:0};function vE(r,e,t,n,i,s,l){const c=new Ue(0);let u=s===!0?0:1,h,d,p=null,m=0,v=null;function y(x,_){let w=!1,M=_.isScene===!0?_.background:null;M&&M.isTexture&&(M=(_.backgroundBlurriness>0?t:e).get(M)),M===null?E(c,u):M&&M.isColor&&(E(M,1),w=!0);const A=r.xr.getEnvironmentBlendMode();A==="additive"?n.buffers.color.setClear(0,0,0,1,l):A==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||w)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),M&&(M.isCubeTexture||M.mapping===So)?(d===void 0&&(d=new yn(new vs(1,1,1),new Bi({name:"BackgroundCubeMaterial",uniforms:_o(_i.backgroundCube.uniforms),vertexShader:_i.backgroundCube.vertexShader,fragmentShader:_i.backgroundCube.fragmentShader,side:Un,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(R,P,U){this.matrixWorld.copyPosition(U.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),d.material.uniforms.envMap.value=M,d.material.uniforms.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,d.material.toneMapped=Pt.getTransfer(M.colorSpace)!==Nt,(p!==M||m!==M.version||v!==r.toneMapping)&&(d.material.needsUpdate=!0,p=M,m=M.version,v=r.toneMapping),d.layers.enableAll(),x.unshift(d,d.geometry,d.material,0,0,null)):M&&M.isTexture&&(h===void 0&&(h=new yn(new Ga(2,2),new Bi({name:"BackgroundMaterial",uniforms:_o(_i.background.uniforms),vertexShader:_i.background.vertexShader,fragmentShader:_i.background.fragmentShader,side:ir,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=M,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=Pt.getTransfer(M.colorSpace)!==Nt,M.matrixAutoUpdate===!0&&M.updateMatrix(),h.material.uniforms.uvTransform.value.copy(M.matrix),(p!==M||m!==M.version||v!==r.toneMapping)&&(h.material.needsUpdate=!0,p=M,m=M.version,v=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function E(x,_){x.getRGB(hc,jv(r)),n.buffers.color.setClear(hc.r,hc.g,hc.b,_,l)}return{getClearColor:function(){return c},setClearColor:function(x,_=1){c.set(x),u=_,E(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,E(c,u)},render:y}}function _E(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),l=n.isWebGL2||s!==null,c={},u=x(null);let h=u,d=!1;function p(H,K,se,oe,X){let Y=!1;if(l){const Z=E(oe,se,K);h!==Z&&(h=Z,v(h.object)),Y=_(H,oe,se,X),Y&&w(H,oe,se,X)}else{const Z=K.wireframe===!0;(h.geometry!==oe.id||h.program!==se.id||h.wireframe!==Z)&&(h.geometry=oe.id,h.program=se.id,h.wireframe=Z,Y=!0)}X!==null&&t.update(X,r.ELEMENT_ARRAY_BUFFER),(Y||d)&&(d=!1,F(H,K,se,oe),X!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(X).buffer))}function m(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function v(H){return n.isWebGL2?r.bindVertexArray(H):s.bindVertexArrayOES(H)}function y(H){return n.isWebGL2?r.deleteVertexArray(H):s.deleteVertexArrayOES(H)}function E(H,K,se){const oe=se.wireframe===!0;let X=c[H.id];X===void 0&&(X={},c[H.id]=X);let Y=X[K.id];Y===void 0&&(Y={},X[K.id]=Y);let Z=Y[oe];return Z===void 0&&(Z=x(m()),Y[oe]=Z),Z}function x(H){const K=[],se=[],oe=[];for(let X=0;X<i;X++)K[X]=0,se[X]=0,oe[X]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:K,enabledAttributes:se,attributeDivisors:oe,object:H,attributes:{},index:null}}function _(H,K,se,oe){const X=h.attributes,Y=K.attributes;let Z=0;const z=se.getAttributes();for(const j in z)if(z[j].location>=0){const we=X[j];let Ae=Y[j];if(Ae===void 0&&(j==="instanceMatrix"&&H.instanceMatrix&&(Ae=H.instanceMatrix),j==="instanceColor"&&H.instanceColor&&(Ae=H.instanceColor)),we===void 0||we.attribute!==Ae||Ae&&we.data!==Ae.data)return!0;Z++}return h.attributesNum!==Z||h.index!==oe}function w(H,K,se,oe){const X={},Y=K.attributes;let Z=0;const z=se.getAttributes();for(const j in z)if(z[j].location>=0){let we=Y[j];we===void 0&&(j==="instanceMatrix"&&H.instanceMatrix&&(we=H.instanceMatrix),j==="instanceColor"&&H.instanceColor&&(we=H.instanceColor));const Ae={};Ae.attribute=we,we&&we.data&&(Ae.data=we.data),X[j]=Ae,Z++}h.attributes=X,h.attributesNum=Z,h.index=oe}function M(){const H=h.newAttributes;for(let K=0,se=H.length;K<se;K++)H[K]=0}function A(H){R(H,0)}function R(H,K){const se=h.newAttributes,oe=h.enabledAttributes,X=h.attributeDivisors;se[H]=1,oe[H]===0&&(r.enableVertexAttribArray(H),oe[H]=1),X[H]!==K&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](H,K),X[H]=K)}function P(){const H=h.newAttributes,K=h.enabledAttributes;for(let se=0,oe=K.length;se<oe;se++)K[se]!==H[se]&&(r.disableVertexAttribArray(se),K[se]=0)}function U(H,K,se,oe,X,Y,Z){Z===!0?r.vertexAttribIPointer(H,K,se,X,Y):r.vertexAttribPointer(H,K,se,oe,X,Y)}function F(H,K,se,oe){if(n.isWebGL2===!1&&(H.isInstancedMesh||oe.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;M();const X=oe.attributes,Y=se.getAttributes(),Z=K.defaultAttributeValues;for(const z in Y){const j=Y[z];if(j.location>=0){let fe=X[z];if(fe===void 0&&(z==="instanceMatrix"&&H.instanceMatrix&&(fe=H.instanceMatrix),z==="instanceColor"&&H.instanceColor&&(fe=H.instanceColor)),fe!==void 0){const we=fe.normalized,Ae=fe.itemSize,ke=t.get(fe);if(ke===void 0)continue;const qe=ke.buffer,Je=ke.type,it=ke.bytesPerElement,_t=n.isWebGL2===!0&&(Je===r.INT||Je===r.UNSIGNED_INT||fe.gpuType===wd);if(fe.isInterleavedBufferAttribute){const Be=fe.data,B=Be.stride,pe=fe.offset;if(Be.isInstancedInterleavedBuffer){for(let ce=0;ce<j.locationSize;ce++)R(j.location+ce,Be.meshPerAttribute);H.isInstancedMesh!==!0&&oe._maxInstanceCount===void 0&&(oe._maxInstanceCount=Be.meshPerAttribute*Be.count)}else for(let ce=0;ce<j.locationSize;ce++)A(j.location+ce);r.bindBuffer(r.ARRAY_BUFFER,qe);for(let ce=0;ce<j.locationSize;ce++)U(j.location+ce,Ae/j.locationSize,Je,we,B*it,(pe+Ae/j.locationSize*ce)*it,_t)}else{if(fe.isInstancedBufferAttribute){for(let Be=0;Be<j.locationSize;Be++)R(j.location+Be,fe.meshPerAttribute);H.isInstancedMesh!==!0&&oe._maxInstanceCount===void 0&&(oe._maxInstanceCount=fe.meshPerAttribute*fe.count)}else for(let Be=0;Be<j.locationSize;Be++)A(j.location+Be);r.bindBuffer(r.ARRAY_BUFFER,qe);for(let Be=0;Be<j.locationSize;Be++)U(j.location+Be,Ae/j.locationSize,Je,we,Ae*it,Ae/j.locationSize*Be*it,_t)}}else if(Z!==void 0){const we=Z[z];if(we!==void 0)switch(we.length){case 2:r.vertexAttrib2fv(j.location,we);break;case 3:r.vertexAttrib3fv(j.location,we);break;case 4:r.vertexAttrib4fv(j.location,we);break;default:r.vertexAttrib1fv(j.location,we)}}}}P()}function b(){$();for(const H in c){const K=c[H];for(const se in K){const oe=K[se];for(const X in oe)y(oe[X].object),delete oe[X];delete K[se]}delete c[H]}}function L(H){if(c[H.id]===void 0)return;const K=c[H.id];for(const se in K){const oe=K[se];for(const X in oe)y(oe[X].object),delete oe[X];delete K[se]}delete c[H.id]}function k(H){for(const K in c){const se=c[K];if(se[H.id]===void 0)continue;const oe=se[H.id];for(const X in oe)y(oe[X].object),delete oe[X];delete se[H.id]}}function $(){ae(),d=!0,h!==u&&(h=u,v(h.object))}function ae(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:$,resetDefaultState:ae,dispose:b,releaseStatesOfGeometry:L,releaseStatesOfProgram:k,initAttributes:M,enableAttribute:A,disableUnusedAttributes:P}}function yE(r,e,t,n){const i=n.isWebGL2;let s;function l(h){s=h}function c(h,d){r.drawArrays(s,h,d),t.update(d,s,1)}function u(h,d,p){if(p===0)return;let m,v;if(i)m=r,v="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),v="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[v](s,h,d,p),t.update(d,s,p)}this.setMode=l,this.render=c,this.renderInstances=u}function xE(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const U=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(U.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(U){if(U==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";U="mediump"}return U==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const l=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=l||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=r.getParameter(r.MAX_TEXTURE_SIZE),y=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),E=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),_=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),M=m>0,A=l||e.has("OES_texture_float"),R=M&&A,P=l?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:l,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:m,maxTextureSize:v,maxCubemapSize:y,maxAttributes:E,maxVertexUniforms:x,maxVaryings:_,maxFragmentUniforms:w,vertexTextures:M,floatFragmentTextures:A,floatVertexTextures:R,maxSamples:P}}function SE(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new Er,c=new pt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const v=p.length!==0||m||n!==0||i;return i=m,n=p.length,v},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=d(p,m,0)},this.setState=function(p,m,v){const y=p.clippingPlanes,E=p.clipIntersection,x=p.clipShadows,_=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?d(null):h();else{const w=s?0:n,M=w*4;let A=_.clippingState||null;u.value=A,A=d(y,m,M,v);for(let R=0;R!==M;++R)A[R]=t[R];_.clippingState=A,this.numIntersection=E?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,v,y){const E=p!==null?p.length:0;let x=null;if(E!==0){if(x=u.value,y!==!0||x===null){const _=v+E*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(x===null||x.length<_)&&(x=new Float32Array(_));for(let M=0,A=v;M!==E;++M,A+=4)l.copy(p[M]).applyMatrix4(w,c),l.normal.toArray(x,A),x[A+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=E,e.numIntersection=0,x}}function ME(r){let e=new WeakMap;function t(l,c){return c===ga?l.mapping=rr:c===va&&(l.mapping=Rr),l}function n(l){if(l&&l.isTexture&&l.isRenderTargetTexture===!1){const c=l.mapping;if(c===ga||c===va)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new $v(u.height/2);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Wa extends Ha{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const lo=4,ig=[.125,.215,.35,.446,.526,.582],ns=20,Qh=new Wa,rg=new Ue;let $h=null,ef=0,tf=0;const ts=(1+Math.sqrt(5))/2,js=1/ts,sg=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,ts,js),new D(0,ts,-js),new D(js,0,ts),new D(-js,0,ts),new D(ts,js,0),new D(-ts,js,0)];class fd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){$h=this._renderer.getRenderTarget(),ef=this._renderer.getActiveCubeFace(),tf=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=lg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=ag(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget($h,ef,tf),e.scissorTest=!1,fc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===rr||e.mapping===Rr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),$h=this._renderer.getRenderTarget(),ef=this._renderer.getActiveCubeFace(),tf=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Kt,minFilter:Kt,generateMipmaps:!1,type:go,format:kn,colorSpace:zi,depthBuffer:!1},i=og(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=og(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=EE(s)),this._blurMaterial=wE(s,e,t)}return i}_compileMaterial(e){const t=new yn(this._lodPlanes[0],e);this._renderer.compile(t,Qh)}_sceneToCubeUV(e,t,n,i){const c=new mn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(rg),d.toneMapping=Ni,d.autoClear=!1;const v=new Ir({name:"PMREM.Background",side:Un,depthWrite:!1,depthTest:!1}),y=new yn(new vs,v);let E=!1;const x=e.background;x?x.isColor&&(v.color.copy(x),e.background=null,E=!0):(v.color.copy(rg),E=!0);for(let _=0;_<6;_++){const w=_%3;w===0?(c.up.set(0,u[_],0),c.lookAt(h[_],0,0)):w===1?(c.up.set(0,0,u[_]),c.lookAt(0,h[_],0)):(c.up.set(0,u[_],0),c.lookAt(0,0,h[_]));const M=this._cubeSize;fc(i,w*M,_>2?M:0,M,M),d.setRenderTarget(i),E&&d.render(y,c),d.render(e,c)}y.geometry.dispose(),y.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===rr||e.mapping===Rr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=lg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=ag());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new yn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;fc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,Qh)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=sg[(i-1)%sg.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new yn(this._lodPlanes[i],h),m=h.uniforms,v=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*v):2*Math.PI/(2*ns-1),E=s/y,x=isFinite(s)?1+Math.floor(d*E):ns;x>ns&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${ns}`);const _=[];let w=0;for(let U=0;U<ns;++U){const F=U/E,b=Math.exp(-F*F/2);_.push(b),U===0?w+=b:U<x&&(w+=2*b)}for(let U=0;U<_.length;U++)_[U]=_[U]/w;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=_,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:M}=this;m.dTheta.value=y,m.mipInt.value=M-n;const A=this._sizeLods[i],R=3*A*(i>M-lo?i-M+lo:0),P=4*(this._cubeSize-A);fc(t,R,P,3*A,2*A),u.setRenderTarget(t),u.render(p,Qh)}}function EE(r){const e=[],t=[],n=[];let i=r;const s=r-lo+1+ig.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-lo?u=ig[l-r+lo-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],v=6,y=6,E=3,x=2,_=1,w=new Float32Array(E*y*v),M=new Float32Array(x*y*v),A=new Float32Array(_*y*v);for(let P=0;P<v;P++){const U=P%3*2/3-1,F=P>2?0:-1,b=[U,F,0,U+2/3,F,0,U+2/3,F+1,0,U,F,0,U+2/3,F+1,0,U,F+1,0];w.set(b,E*y*P),M.set(m,x*y*P);const L=[P,P,P,P,P,P];A.set(L,_*y*P)}const R=new gt;R.setAttribute("position",new Dt(w,E)),R.setAttribute("uv",new Dt(M,x)),R.setAttribute("faceIndex",new Dt(A,_)),e.push(R),i>lo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function og(r,e,t){const n=new yi(r,e,t);return n.texture.mapping=So,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function fc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function wE(r,e,t){const n=new Float32Array(ns),i=new D(0,1,0);return new Bi({name:"SphericalGaussianBlur",defines:{n:ns,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Fd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function ag(){return new Bi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Fd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function lg(){return new Bi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Fd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function Fd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function TE(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===ga||u===va,d=u===rr||u===Rr;if(h||d)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new fd(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||d&&p&&i(p)){t===null&&(t=new fd(r));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",s),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function AE(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function bE(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const E=m.morphAttributes[y];for(let x=0,_=E.length;x<_;x++)e.remove(E[x])}m.removeEventListener("dispose",l),delete i[m.id];const v=s.get(m);v&&(e.remove(v),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const v=p.morphAttributes;for(const y in v){const E=v[y];for(let x=0,_=E.length;x<_;x++)e.update(E[x],r.ARRAY_BUFFER)}}function h(p){const m=[],v=p.index,y=p.attributes.position;let E=0;if(v!==null){const w=v.array;E=v.version;for(let M=0,A=w.length;M<A;M+=3){const R=w[M+0],P=w[M+1],U=w[M+2];m.push(R,P,P,U,U,R)}}else if(y!==void 0){const w=y.array;E=y.version;for(let M=0,A=w.length/3-1;M<A;M+=3){const R=M+0,P=M+1,U=M+2;m.push(R,P,P,U,U,R)}}else return;const x=new(qv(m)?Od:Nd)(m,1);x.version=E;const _=s.get(p);_&&e.remove(_),s.set(p,x)}function d(p){const m=s.get(p);if(m){const v=p.index;v!==null&&m.version<v.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function RE(r,e,t,n){const i=n.isWebGL2;let s;function l(m){s=m}let c,u;function h(m){c=m.type,u=m.bytesPerElement}function d(m,v){r.drawElements(s,v,c,m*u),t.update(v,s,1)}function p(m,v,y){if(y===0)return;let E,x;if(i)E=r,x="drawElementsInstanced";else if(E=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",E===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}E[x](s,v,c,m*u,y),t.update(v,s,y)}this.setMode=l,this.setIndex=h,this.render=d,this.renderInstances=p}function CE(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function PE(r,e){return r[0]-e[0]}function LE(r,e){return Math.abs(e[1])-Math.abs(r[1])}function IE(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,l=new Lt,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,d,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const v=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,y=v!==void 0?v.length:0;let E=s.get(d);if(E===void 0||E.count!==y){let H=function(){$.dispose(),s.delete(d),d.removeEventListener("dispose",H)};E!==void 0&&E.texture.dispose();const w=d.morphAttributes.position!==void 0,M=d.morphAttributes.normal!==void 0,A=d.morphAttributes.color!==void 0,R=d.morphAttributes.position||[],P=d.morphAttributes.normal||[],U=d.morphAttributes.color||[];let F=0;w===!0&&(F=1),M===!0&&(F=2),A===!0&&(F=3);let b=d.attributes.position.count*F,L=1;b>e.maxTextureSize&&(L=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const k=new Float32Array(b*L*4*y),$=new iu(k,b,L,y);$.type=Ui,$.needsUpdate=!0;const ae=F*4;for(let K=0;K<y;K++){const se=R[K],oe=P[K],X=U[K],Y=b*L*4*K;for(let Z=0;Z<se.count;Z++){const z=Z*ae;w===!0&&(l.fromBufferAttribute(se,Z),k[Y+z+0]=l.x,k[Y+z+1]=l.y,k[Y+z+2]=l.z,k[Y+z+3]=0),M===!0&&(l.fromBufferAttribute(oe,Z),k[Y+z+4]=l.x,k[Y+z+5]=l.y,k[Y+z+6]=l.z,k[Y+z+7]=0),A===!0&&(l.fromBufferAttribute(X,Z),k[Y+z+8]=l.x,k[Y+z+9]=l.y,k[Y+z+10]=l.z,k[Y+z+11]=X.itemSize===4?l.w:1)}}E={count:y,texture:$,size:new ue(b,L)},s.set(d,E),d.addEventListener("dispose",H)}let x=0;for(let w=0;w<m.length;w++)x+=m[w];const _=d.morphTargetsRelative?1:1-x;p.getUniforms().setValue(r,"morphTargetBaseInfluence",_),p.getUniforms().setValue(r,"morphTargetInfluences",m),p.getUniforms().setValue(r,"morphTargetsTexture",E.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",E.size)}else{const v=m===void 0?0:m.length;let y=n[d.id];if(y===void 0||y.length!==v){y=[];for(let M=0;M<v;M++)y[M]=[M,0];n[d.id]=y}for(let M=0;M<v;M++){const A=y[M];A[0]=M,A[1]=m[M]}y.sort(LE);for(let M=0;M<8;M++)M<v&&y[M][1]?(c[M][0]=y[M][0],c[M][1]=y[M][1]):(c[M][0]=Number.MAX_SAFE_INTEGER,c[M][1]=0);c.sort(PE);const E=d.morphAttributes.position,x=d.morphAttributes.normal;let _=0;for(let M=0;M<8;M++){const A=c[M],R=A[0],P=A[1];R!==Number.MAX_SAFE_INTEGER&&P?(E&&d.getAttribute("morphTarget"+M)!==E[R]&&d.setAttribute("morphTarget"+M,E[R]),x&&d.getAttribute("morphNormal"+M)!==x[R]&&d.setAttribute("morphNormal"+M,x[R]),i[M]=P,_+=P):(E&&d.hasAttribute("morphTarget"+M)===!0&&d.deleteAttribute("morphTarget"+M),x&&d.hasAttribute("morphNormal"+M)===!0&&d.deleteAttribute("morphNormal"+M),i[M]=0)}const w=d.morphTargetsRelative?1:1-_;p.getUniforms().setValue(r,"morphTargetBaseInfluence",w),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function UE(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,d=u.geometry,p=e.get(u,d);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}const t_=new Qt,n_=new iu,i_=new Dd,r_=new Va,cg=[],ug=[],hg=new Float32Array(16),fg=new Float32Array(9),dg=new Float32Array(4);function Eo(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=cg[i];if(s===void 0&&(s=new Float32Array(i),cg[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function on(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function an(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function su(r,e){let t=ug[e];t===void 0&&(t=new Int32Array(e),ug[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function DE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function NE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(on(t,e))return;r.uniform2fv(this.addr,e),an(t,e)}}function OE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(on(t,e))return;r.uniform3fv(this.addr,e),an(t,e)}}function FE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(on(t,e))return;r.uniform4fv(this.addr,e),an(t,e)}}function zE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(on(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),an(t,e)}else{if(on(t,n))return;dg.set(n),r.uniformMatrix2fv(this.addr,!1,dg),an(t,n)}}function BE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(on(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),an(t,e)}else{if(on(t,n))return;fg.set(n),r.uniformMatrix3fv(this.addr,!1,fg),an(t,n)}}function kE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(on(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),an(t,e)}else{if(on(t,n))return;hg.set(n),r.uniformMatrix4fv(this.addr,!1,hg),an(t,n)}}function HE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function VE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(on(t,e))return;r.uniform2iv(this.addr,e),an(t,e)}}function GE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(on(t,e))return;r.uniform3iv(this.addr,e),an(t,e)}}function WE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(on(t,e))return;r.uniform4iv(this.addr,e),an(t,e)}}function XE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function qE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(on(t,e))return;r.uniform2uiv(this.addr,e),an(t,e)}}function YE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(on(t,e))return;r.uniform3uiv(this.addr,e),an(t,e)}}function ZE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(on(t,e))return;r.uniform4uiv(this.addr,e),an(t,e)}}function JE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||t_,i)}function jE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||i_,i)}function KE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||r_,i)}function QE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||n_,i)}function $E(r){switch(r){case 5126:return DE;case 35664:return NE;case 35665:return OE;case 35666:return FE;case 35674:return zE;case 35675:return BE;case 35676:return kE;case 5124:case 35670:return HE;case 35667:case 35671:return VE;case 35668:case 35672:return GE;case 35669:case 35673:return WE;case 5125:return XE;case 36294:return qE;case 36295:return YE;case 36296:return ZE;case 35678:case 36198:case 36298:case 36306:case 35682:return JE;case 35679:case 36299:case 36307:return jE;case 35680:case 36300:case 36308:case 36293:return KE;case 36289:case 36303:case 36311:case 36292:return QE}}function ew(r,e){r.uniform1fv(this.addr,e)}function tw(r,e){const t=Eo(e,this.size,2);r.uniform2fv(this.addr,t)}function nw(r,e){const t=Eo(e,this.size,3);r.uniform3fv(this.addr,t)}function iw(r,e){const t=Eo(e,this.size,4);r.uniform4fv(this.addr,t)}function rw(r,e){const t=Eo(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function sw(r,e){const t=Eo(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function ow(r,e){const t=Eo(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function aw(r,e){r.uniform1iv(this.addr,e)}function lw(r,e){r.uniform2iv(this.addr,e)}function cw(r,e){r.uniform3iv(this.addr,e)}function uw(r,e){r.uniform4iv(this.addr,e)}function hw(r,e){r.uniform1uiv(this.addr,e)}function fw(r,e){r.uniform2uiv(this.addr,e)}function dw(r,e){r.uniform3uiv(this.addr,e)}function pw(r,e){r.uniform4uiv(this.addr,e)}function mw(r,e,t){const n=this.cache,i=e.length,s=su(t,i);on(n,s)||(r.uniform1iv(this.addr,s),an(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||t_,s[l])}function gw(r,e,t){const n=this.cache,i=e.length,s=su(t,i);on(n,s)||(r.uniform1iv(this.addr,s),an(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||i_,s[l])}function vw(r,e,t){const n=this.cache,i=e.length,s=su(t,i);on(n,s)||(r.uniform1iv(this.addr,s),an(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||r_,s[l])}function _w(r,e,t){const n=this.cache,i=e.length,s=su(t,i);on(n,s)||(r.uniform1iv(this.addr,s),an(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||n_,s[l])}function yw(r){switch(r){case 5126:return ew;case 35664:return tw;case 35665:return nw;case 35666:return iw;case 35674:return rw;case 35675:return sw;case 35676:return ow;case 5124:case 35670:return aw;case 35667:case 35671:return lw;case 35668:case 35672:return cw;case 35669:case 35673:return uw;case 5125:return hw;case 36294:return fw;case 36295:return dw;case 36296:return pw;case 35678:case 36198:case 36298:case 36306:case 35682:return mw;case 35679:case 36299:case 36307:return gw;case 35680:case 36300:case 36308:case 36293:return vw;case 36289:case 36303:case 36311:case 36292:return _w}}class xw{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=$E(t.type)}}class Sw{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=yw(t.type)}}class Mw{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const nf=/(\w+)(\])?(\[|\.)?/g;function pg(r,e){r.seq.push(e),r.map[e.id]=e}function Ew(r,e,t){const n=r.name,i=n.length;for(nf.lastIndex=0;;){const s=nf.exec(n),l=nf.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){pg(t,h===void 0?new xw(c,r,e):new Sw(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new Mw(c),pg(t,p)),t=p}}}class Gc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);Ew(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function mg(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const ww=37297;let Tw=0;function Aw(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function bw(r){const e=Pt.getPrimaries(Pt.workingColorSpace),t=Pt.getPrimaries(r);let n;switch(e===t?n="":e===Ta&&t===wa?n="LinearDisplayP3ToLinearSRGB":e===wa&&t===Ta&&(n="LinearSRGBToLinearDisplayP3"),r){case zi:case Ba:return[n,"LinearTransferOETF"];case sn:case nu:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function gg(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+Aw(r.getShaderSource(e),l)}else return i}function Rw(r,e){const t=bw(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function Cw(r,e){let t;switch(e){case vv:t="Linear";break;case _v:t="Reinhard";break;case yv:t="OptimizedCineon";break;case Md:t="ACESFilmic";break;case xv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Pw(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(la).join(`
`)}function Lw(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Iw(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function la(r){return r!==""}function vg(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function _g(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Uw=/^[ \t]*#include +<([\w\d./]+)>/gm;function dd(r){return r.replace(Uw,Nw)}const Dw=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Nw(r,e){let t=ht[e];if(t===void 0){const n=Dw.get(e);if(n!==void 0)t=ht[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return dd(t)}const Ow=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function yg(r){return r.replace(Ow,Fw)}function Fw(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function xg(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function zw(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Qc?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===ca?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===vi&&(e="SHADOWMAP_TYPE_VSM"),e}function Bw(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case rr:case Rr:e="ENVMAP_TYPE_CUBE";break;case So:e="ENVMAP_TYPE_CUBE_UV";break}return e}function kw(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Rr:e="ENVMAP_MODE_REFRACTION";break}return e}function Hw(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case za:e="ENVMAP_BLENDING_MULTIPLY";break;case mv:e="ENVMAP_BLENDING_MIX";break;case gv:e="ENVMAP_BLENDING_ADD";break}return e}function Vw(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}function Gw(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=zw(t),h=Bw(t),d=kw(t),p=Hw(t),m=Vw(t),v=t.isWebGL2?"":Pw(t),y=Lw(s),E=i.createProgram();let x,_,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(la).join(`
`),x.length>0&&(x+=`
`),_=[v,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(la).join(`
`),_.length>0&&(_+=`
`)):(x=[xg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(la).join(`
`),_=[v,xg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ni?"#define TONE_MAPPING":"",t.toneMapping!==Ni?ht.tonemapping_pars_fragment:"",t.toneMapping!==Ni?Cw("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ht.colorspace_pars_fragment,Rw("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(la).join(`
`)),l=dd(l),l=vg(l,t),l=_g(l,t),c=dd(c),c=vg(c,t),c=_g(c,t),l=yg(l),c=yg(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,_=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===ud?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===ud?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const M=w+x+l,A=w+_+c,R=mg(i,i.VERTEX_SHADER,M),P=mg(i,i.FRAGMENT_SHADER,A);i.attachShader(E,R),i.attachShader(E,P),t.index0AttributeName!==void 0?i.bindAttribLocation(E,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(E,0,"position"),i.linkProgram(E);function U(k){if(r.debug.checkShaderErrors){const $=i.getProgramInfoLog(E).trim(),ae=i.getShaderInfoLog(R).trim(),H=i.getShaderInfoLog(P).trim();let K=!0,se=!0;if(i.getProgramParameter(E,i.LINK_STATUS)===!1)if(K=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,E,R,P);else{const oe=gg(i,R,"vertex"),X=gg(i,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(E,i.VALIDATE_STATUS)+`

Program Info Log: `+$+`
`+oe+`
`+X)}else $!==""?console.warn("THREE.WebGLProgram: Program Info Log:",$):(ae===""||H==="")&&(se=!1);se&&(k.diagnostics={runnable:K,programLog:$,vertexShader:{log:ae,prefix:x},fragmentShader:{log:H,prefix:_}})}i.deleteShader(R),i.deleteShader(P),F=new Gc(i,E),b=Iw(i,E)}let F;this.getUniforms=function(){return F===void 0&&U(this),F};let b;this.getAttributes=function(){return b===void 0&&U(this),b};let L=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return L===!1&&(L=i.getProgramParameter(E,ww)),L},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(E),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Tw++,this.cacheKey=e,this.usedTimes=1,this.program=E,this.vertexShader=R,this.fragmentShader=P,this}let Ww=0;class Xw{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new qw(e),t.set(e,n)),n}}class qw{constructor(e){this.id=Ww++,this.code=e,this.usedTimes=0}}function Yw(r,e,t,n,i,s,l){const c=new us,u=new Xw,h=[],d=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let v=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function E(b){return b===0?"uv":`uv${b}`}function x(b,L,k,$,ae){const H=$.fog,K=ae.geometry,se=b.isMeshStandardMaterial?$.environment:null,oe=(b.isMeshStandardMaterial?t:e).get(b.envMap||se),X=oe&&oe.mapping===So?oe.image.height:null,Y=y[b.type];b.precision!==null&&(v=i.getMaxPrecision(b.precision),v!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",v,"instead."));const Z=K.morphAttributes.position||K.morphAttributes.normal||K.morphAttributes.color,z=Z!==void 0?Z.length:0;let j=0;K.morphAttributes.position!==void 0&&(j=1),K.morphAttributes.normal!==void 0&&(j=2),K.morphAttributes.color!==void 0&&(j=3);let fe,we,Ae,ke;if(Y){const kt=_i[Y];fe=kt.vertexShader,we=kt.fragmentShader}else fe=b.vertexShader,we=b.fragmentShader,u.update(b),Ae=u.getVertexShaderID(b),ke=u.getFragmentShaderID(b);const qe=r.getRenderTarget(),Je=ae.isInstancedMesh===!0,it=!!b.map,_t=!!b.matcap,Be=!!oe,B=!!b.aoMap,pe=!!b.lightMap,ce=!!b.bumpMap,me=!!b.normalMap,he=!!b.displacementMap,Xe=!!b.emissiveMap,Le=!!b.metalnessMap,Oe=!!b.roughnessMap,Qe=b.anisotropy>0,vt=b.clearcoat>0,zt=b.iridescence>0,O=b.sheen>0,C=b.transmission>0,Q=Qe&&!!b.anisotropyMap,ge=vt&&!!b.clearcoatMap,de=vt&&!!b.clearcoatNormalMap,ve=vt&&!!b.clearcoatRoughnessMap,He=zt&&!!b.iridescenceMap,Me=zt&&!!b.iridescenceThicknessMap,Re=O&&!!b.sheenColorMap,nt=O&&!!b.sheenRoughnessMap,Mt=!!b.specularMap,ye=!!b.specularColorMap,Ct=!!b.specularIntensityMap,at=C&&!!b.transmissionMap,et=C&&!!b.thicknessMap,Ze=!!b.gradientMap,De=!!b.alphaMap,xt=b.alphaTest>0,V=!!b.alphaHash,Ce=!!b.extensions,xe=!!K.attributes.uv1,le=!!K.attributes.uv2,Ee=!!K.attributes.uv3;let je=Ni;return b.toneMapped&&(qe===null||qe.isXRRenderTarget===!0)&&(je=r.toneMapping),{isWebGL2:d,shaderID:Y,shaderType:b.type,shaderName:b.name,vertexShader:fe,fragmentShader:we,defines:b.defines,customVertexShaderID:Ae,customFragmentShaderID:ke,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:v,instancing:Je,instancingColor:Je&&ae.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:qe===null?r.outputColorSpace:qe.isXRRenderTarget===!0?qe.texture.colorSpace:zi,map:it,matcap:_t,envMap:Be,envMapMode:Be&&oe.mapping,envMapCubeUVHeight:X,aoMap:B,lightMap:pe,bumpMap:ce,normalMap:me,displacementMap:m&&he,emissiveMap:Xe,normalMapObjectSpace:me&&b.normalMapType===Ov,normalMapTangentSpace:me&&b.normalMapType===Lr,metalnessMap:Le,roughnessMap:Oe,anisotropy:Qe,anisotropyMap:Q,clearcoat:vt,clearcoatMap:ge,clearcoatNormalMap:de,clearcoatRoughnessMap:ve,iridescence:zt,iridescenceMap:He,iridescenceThicknessMap:Me,sheen:O,sheenColorMap:Re,sheenRoughnessMap:nt,specularMap:Mt,specularColorMap:ye,specularIntensityMap:Ct,transmission:C,transmissionMap:at,thicknessMap:et,gradientMap:Ze,opaque:b.transparent===!1&&b.blending===as,alphaMap:De,alphaTest:xt,alphaHash:V,combine:b.combine,mapUv:it&&E(b.map.channel),aoMapUv:B&&E(b.aoMap.channel),lightMapUv:pe&&E(b.lightMap.channel),bumpMapUv:ce&&E(b.bumpMap.channel),normalMapUv:me&&E(b.normalMap.channel),displacementMapUv:he&&E(b.displacementMap.channel),emissiveMapUv:Xe&&E(b.emissiveMap.channel),metalnessMapUv:Le&&E(b.metalnessMap.channel),roughnessMapUv:Oe&&E(b.roughnessMap.channel),anisotropyMapUv:Q&&E(b.anisotropyMap.channel),clearcoatMapUv:ge&&E(b.clearcoatMap.channel),clearcoatNormalMapUv:de&&E(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ve&&E(b.clearcoatRoughnessMap.channel),iridescenceMapUv:He&&E(b.iridescenceMap.channel),iridescenceThicknessMapUv:Me&&E(b.iridescenceThicknessMap.channel),sheenColorMapUv:Re&&E(b.sheenColorMap.channel),sheenRoughnessMapUv:nt&&E(b.sheenRoughnessMap.channel),specularMapUv:Mt&&E(b.specularMap.channel),specularColorMapUv:ye&&E(b.specularColorMap.channel),specularIntensityMapUv:Ct&&E(b.specularIntensityMap.channel),transmissionMapUv:at&&E(b.transmissionMap.channel),thicknessMapUv:et&&E(b.thicknessMap.channel),alphaMapUv:De&&E(b.alphaMap.channel),vertexTangents:!!K.attributes.tangent&&(me||Qe),vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!K.attributes.color&&K.attributes.color.itemSize===4,vertexUv1s:xe,vertexUv2s:le,vertexUv3s:Ee,pointsUvs:ae.isPoints===!0&&!!K.attributes.uv&&(it||De),fog:!!H,useFog:b.fog===!0,fogExp2:H&&H.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:ae.isSkinnedMesh===!0,morphTargets:K.morphAttributes.position!==void 0,morphNormals:K.morphAttributes.normal!==void 0,morphColors:K.morphAttributes.color!==void 0,morphTargetsCount:z,morphTextureStride:j,numDirLights:L.directional.length,numPointLights:L.point.length,numSpotLights:L.spot.length,numSpotLightMaps:L.spotLightMap.length,numRectAreaLights:L.rectArea.length,numHemiLights:L.hemi.length,numDirLightShadows:L.directionalShadowMap.length,numPointLightShadows:L.pointShadowMap.length,numSpotLightShadows:L.spotShadowMap.length,numSpotLightShadowsWithMaps:L.numSpotLightShadowsWithMaps,numLightProbes:L.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&k.length>0,shadowMapType:r.shadowMap.type,toneMapping:je,useLegacyLights:r._useLegacyLights,decodeVideoTexture:it&&b.map.isVideoTexture===!0&&Pt.getTransfer(b.map.colorSpace)===Nt,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Ii,flipSided:b.side===Un,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:Ce&&b.extensions.derivatives===!0,extensionFragDepth:Ce&&b.extensions.fragDepth===!0,extensionDrawBuffers:Ce&&b.extensions.drawBuffers===!0,extensionShaderTextureLOD:Ce&&b.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:b.customProgramCacheKey()}}function _(b){const L=[];if(b.shaderID?L.push(b.shaderID):(L.push(b.customVertexShaderID),L.push(b.customFragmentShaderID)),b.defines!==void 0)for(const k in b.defines)L.push(k),L.push(b.defines[k]);return b.isRawShaderMaterial===!1&&(w(L,b),M(L,b),L.push(r.outputColorSpace)),L.push(b.customProgramCacheKey),L.join()}function w(b,L){b.push(L.precision),b.push(L.outputColorSpace),b.push(L.envMapMode),b.push(L.envMapCubeUVHeight),b.push(L.mapUv),b.push(L.alphaMapUv),b.push(L.lightMapUv),b.push(L.aoMapUv),b.push(L.bumpMapUv),b.push(L.normalMapUv),b.push(L.displacementMapUv),b.push(L.emissiveMapUv),b.push(L.metalnessMapUv),b.push(L.roughnessMapUv),b.push(L.anisotropyMapUv),b.push(L.clearcoatMapUv),b.push(L.clearcoatNormalMapUv),b.push(L.clearcoatRoughnessMapUv),b.push(L.iridescenceMapUv),b.push(L.iridescenceThicknessMapUv),b.push(L.sheenColorMapUv),b.push(L.sheenRoughnessMapUv),b.push(L.specularMapUv),b.push(L.specularColorMapUv),b.push(L.specularIntensityMapUv),b.push(L.transmissionMapUv),b.push(L.thicknessMapUv),b.push(L.combine),b.push(L.fogExp2),b.push(L.sizeAttenuation),b.push(L.morphTargetsCount),b.push(L.morphAttributeCount),b.push(L.numDirLights),b.push(L.numPointLights),b.push(L.numSpotLights),b.push(L.numSpotLightMaps),b.push(L.numHemiLights),b.push(L.numRectAreaLights),b.push(L.numDirLightShadows),b.push(L.numPointLightShadows),b.push(L.numSpotLightShadows),b.push(L.numSpotLightShadowsWithMaps),b.push(L.numLightProbes),b.push(L.shadowMapType),b.push(L.toneMapping),b.push(L.numClippingPlanes),b.push(L.numClipIntersection),b.push(L.depthPacking)}function M(b,L){c.disableAll(),L.isWebGL2&&c.enable(0),L.supportsVertexTextures&&c.enable(1),L.instancing&&c.enable(2),L.instancingColor&&c.enable(3),L.matcap&&c.enable(4),L.envMap&&c.enable(5),L.normalMapObjectSpace&&c.enable(6),L.normalMapTangentSpace&&c.enable(7),L.clearcoat&&c.enable(8),L.iridescence&&c.enable(9),L.alphaTest&&c.enable(10),L.vertexColors&&c.enable(11),L.vertexAlphas&&c.enable(12),L.vertexUv1s&&c.enable(13),L.vertexUv2s&&c.enable(14),L.vertexUv3s&&c.enable(15),L.vertexTangents&&c.enable(16),L.anisotropy&&c.enable(17),L.alphaHash&&c.enable(18),b.push(c.mask),c.disableAll(),L.fog&&c.enable(0),L.useFog&&c.enable(1),L.flatShading&&c.enable(2),L.logarithmicDepthBuffer&&c.enable(3),L.skinning&&c.enable(4),L.morphTargets&&c.enable(5),L.morphNormals&&c.enable(6),L.morphColors&&c.enable(7),L.premultipliedAlpha&&c.enable(8),L.shadowMapEnabled&&c.enable(9),L.useLegacyLights&&c.enable(10),L.doubleSided&&c.enable(11),L.flipSided&&c.enable(12),L.useDepthPacking&&c.enable(13),L.dithering&&c.enable(14),L.transmission&&c.enable(15),L.sheen&&c.enable(16),L.opaque&&c.enable(17),L.pointsUvs&&c.enable(18),L.decodeVideoTexture&&c.enable(19),b.push(c.mask)}function A(b){const L=y[b.type];let k;if(L){const $=_i[L];k=Kv.clone($.uniforms)}else k=b.uniforms;return k}function R(b,L){let k;for(let $=0,ae=h.length;$<ae;$++){const H=h[$];if(H.cacheKey===L){k=H,++k.usedTimes;break}}return k===void 0&&(k=new Gw(r,L,b,s),h.push(k)),k}function P(b){if(--b.usedTimes===0){const L=h.indexOf(b);h[L]=h[h.length-1],h.pop(),b.destroy()}}function U(b){u.remove(b)}function F(){u.dispose()}return{getParameters:x,getProgramCacheKey:_,getUniforms:A,acquireProgram:R,releaseProgram:P,releaseShaderCache:U,programs:h,dispose:F}}function Zw(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Jw(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Sg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Mg(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,v,y,E,x){let _=r[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:v,groupOrder:y,renderOrder:p.renderOrder,z:E,group:x},r[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=v,_.groupOrder=y,_.renderOrder=p.renderOrder,_.z=E,_.group=x),e++,_}function c(p,m,v,y,E,x){const _=l(p,m,v,y,E,x);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):t.push(_)}function u(p,m,v,y,E,x){const _=l(p,m,v,y,E,x);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||Jw),n.length>1&&n.sort(m||Sg),i.length>1&&i.sort(m||Sg)}function d(){for(let p=e,m=r.length;p<m;p++){const v=r[p];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:d,sort:h}}function jw(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new Mg,r.set(n,[l])):i>=s.length?(l=new Mg,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function Kw(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Ue};break;case"SpotLight":t={position:new D,direction:new D,color:new Ue,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Ue,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Ue,groundColor:new Ue};break;case"RectAreaLight":t={color:new Ue,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function Qw(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let $w=0;function eT(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function tT(r,e){const t=new Kw,n=Qw(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let d=0;d<9;d++)i.probe.push(new D);const s=new D,l=new lt,c=new lt;function u(d,p){let m=0,v=0,y=0;for(let $=0;$<9;$++)i.probe[$].set(0,0,0);let E=0,x=0,_=0,w=0,M=0,A=0,R=0,P=0,U=0,F=0,b=0;d.sort(eT);const L=p===!0?Math.PI:1;for(let $=0,ae=d.length;$<ae;$++){const H=d[$],K=H.color,se=H.intensity,oe=H.distance,X=H.shadow&&H.shadow.map?H.shadow.map.texture:null;if(H.isAmbientLight)m+=K.r*se*L,v+=K.g*se*L,y+=K.b*se*L;else if(H.isLightProbe){for(let Y=0;Y<9;Y++)i.probe[Y].addScaledVector(H.sh.coefficients[Y],se);b++}else if(H.isDirectionalLight){const Y=t.get(H);if(Y.color.copy(H.color).multiplyScalar(H.intensity*L),H.castShadow){const Z=H.shadow,z=n.get(H);z.shadowBias=Z.bias,z.shadowNormalBias=Z.normalBias,z.shadowRadius=Z.radius,z.shadowMapSize=Z.mapSize,i.directionalShadow[E]=z,i.directionalShadowMap[E]=X,i.directionalShadowMatrix[E]=H.shadow.matrix,A++}i.directional[E]=Y,E++}else if(H.isSpotLight){const Y=t.get(H);Y.position.setFromMatrixPosition(H.matrixWorld),Y.color.copy(K).multiplyScalar(se*L),Y.distance=oe,Y.coneCos=Math.cos(H.angle),Y.penumbraCos=Math.cos(H.angle*(1-H.penumbra)),Y.decay=H.decay,i.spot[_]=Y;const Z=H.shadow;if(H.map&&(i.spotLightMap[U]=H.map,U++,Z.updateMatrices(H),H.castShadow&&F++),i.spotLightMatrix[_]=Z.matrix,H.castShadow){const z=n.get(H);z.shadowBias=Z.bias,z.shadowNormalBias=Z.normalBias,z.shadowRadius=Z.radius,z.shadowMapSize=Z.mapSize,i.spotShadow[_]=z,i.spotShadowMap[_]=X,P++}_++}else if(H.isRectAreaLight){const Y=t.get(H);Y.color.copy(K).multiplyScalar(se),Y.halfWidth.set(H.width*.5,0,0),Y.halfHeight.set(0,H.height*.5,0),i.rectArea[w]=Y,w++}else if(H.isPointLight){const Y=t.get(H);if(Y.color.copy(H.color).multiplyScalar(H.intensity*L),Y.distance=H.distance,Y.decay=H.decay,H.castShadow){const Z=H.shadow,z=n.get(H);z.shadowBias=Z.bias,z.shadowNormalBias=Z.normalBias,z.shadowRadius=Z.radius,z.shadowMapSize=Z.mapSize,z.shadowCameraNear=Z.camera.near,z.shadowCameraFar=Z.camera.far,i.pointShadow[x]=z,i.pointShadowMap[x]=X,i.pointShadowMatrix[x]=H.shadow.matrix,R++}i.point[x]=Y,x++}else if(H.isHemisphereLight){const Y=t.get(H);Y.skyColor.copy(H.color).multiplyScalar(se*L),Y.groundColor.copy(H.groundColor).multiplyScalar(se*L),i.hemi[M]=Y,M++}}w>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Te.LTC_FLOAT_1,i.rectAreaLTC2=Te.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Te.LTC_HALF_1,i.rectAreaLTC2=Te.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=v,i.ambient[2]=y;const k=i.hash;(k.directionalLength!==E||k.pointLength!==x||k.spotLength!==_||k.rectAreaLength!==w||k.hemiLength!==M||k.numDirectionalShadows!==A||k.numPointShadows!==R||k.numSpotShadows!==P||k.numSpotMaps!==U||k.numLightProbes!==b)&&(i.directional.length=E,i.spot.length=_,i.rectArea.length=w,i.point.length=x,i.hemi.length=M,i.directionalShadow.length=A,i.directionalShadowMap.length=A,i.pointShadow.length=R,i.pointShadowMap.length=R,i.spotShadow.length=P,i.spotShadowMap.length=P,i.directionalShadowMatrix.length=A,i.pointShadowMatrix.length=R,i.spotLightMatrix.length=P+U-F,i.spotLightMap.length=U,i.numSpotLightShadowsWithMaps=F,i.numLightProbes=b,k.directionalLength=E,k.pointLength=x,k.spotLength=_,k.rectAreaLength=w,k.hemiLength=M,k.numDirectionalShadows=A,k.numPointShadows=R,k.numSpotShadows=P,k.numSpotMaps=U,k.numLightProbes=b,i.version=$w++)}function h(d,p){let m=0,v=0,y=0,E=0,x=0;const _=p.matrixWorldInverse;for(let w=0,M=d.length;w<M;w++){const A=d[w];if(A.isDirectionalLight){const R=i.directional[m];R.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(_),m++}else if(A.isSpotLight){const R=i.spot[y];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(_),R.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(_),y++}else if(A.isRectAreaLight){const R=i.rectArea[E];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(_),c.identity(),l.copy(A.matrixWorld),l.premultiply(_),c.extractRotation(l),R.halfWidth.set(A.width*.5,0,0),R.halfHeight.set(0,A.height*.5,0),R.halfWidth.applyMatrix4(c),R.halfHeight.applyMatrix4(c),E++}else if(A.isPointLight){const R=i.point[v];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(_),v++}else if(A.isHemisphereLight){const R=i.hemi[x];R.direction.setFromMatrixPosition(A.matrixWorld),R.direction.transformDirection(_),x++}}}return{setup:u,setupView:h,state:i}}function Eg(r,e){const t=new tT(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function l(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:l,pushShadow:c}}function nT(r,e){let t=new WeakMap;function n(s,l=0){const c=t.get(s);let u;return c===void 0?(u=new Eg(r,e),t.set(s,[u])):l>=c.length?(u=new Eg(r,e),c.push(u)):u=c[l],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class zd extends bn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Dv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Bd extends bn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const iT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,rT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function sT(r,e,t){let n=new ru;const i=new ue,s=new ue,l=new Lt,c=new zd({depthPacking:Nv}),u=new Bd,h={},d=t.maxTextureSize,p={[ir]:Un,[Un]:ir,[Ii]:Ii},m=new Bi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ue},radius:{value:4}},vertexShader:iT,fragmentShader:rT}),v=m.clone();v.defines.HORIZONTAL_PASS=1;const y=new gt;y.setAttribute("position",new Dt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const E=new yn(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Qc;let _=this.type;this.render=function(R,P,U){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||R.length===0)return;const F=r.getRenderTarget(),b=r.getActiveCubeFace(),L=r.getActiveMipmapLevel(),k=r.state;k.setBlending(nr),k.buffers.color.setClear(1,1,1,1),k.buffers.depth.setTest(!0),k.setScissorTest(!1);const $=_!==vi&&this.type===vi,ae=_===vi&&this.type!==vi;for(let H=0,K=R.length;H<K;H++){const se=R[H],oe=se.shadow;if(oe===void 0){console.warn("THREE.WebGLShadowMap:",se,"has no shadow.");continue}if(oe.autoUpdate===!1&&oe.needsUpdate===!1)continue;i.copy(oe.mapSize);const X=oe.getFrameExtents();if(i.multiply(X),s.copy(oe.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(s.x=Math.floor(d/X.x),i.x=s.x*X.x,oe.mapSize.x=s.x),i.y>d&&(s.y=Math.floor(d/X.y),i.y=s.y*X.y,oe.mapSize.y=s.y)),oe.map===null||$===!0||ae===!0){const Z=this.type!==vi?{minFilter:jt,magFilter:jt}:{};oe.map!==null&&oe.map.dispose(),oe.map=new yi(i.x,i.y,Z),oe.map.texture.name=se.name+".shadowMap",oe.camera.updateProjectionMatrix()}r.setRenderTarget(oe.map),r.clear();const Y=oe.getViewportCount();for(let Z=0;Z<Y;Z++){const z=oe.getViewport(Z);l.set(s.x*z.x,s.y*z.y,s.x*z.z,s.y*z.w),k.viewport(l),oe.updateMatrices(se,Z),n=oe.getFrustum(),A(P,U,oe.camera,se,this.type)}oe.isPointLightShadow!==!0&&this.type===vi&&w(oe,U),oe.needsUpdate=!1}_=this.type,x.needsUpdate=!1,r.setRenderTarget(F,b,L)};function w(R,P){const U=e.update(E);m.defines.VSM_SAMPLES!==R.blurSamples&&(m.defines.VSM_SAMPLES=R.blurSamples,v.defines.VSM_SAMPLES=R.blurSamples,m.needsUpdate=!0,v.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new yi(i.x,i.y)),m.uniforms.shadow_pass.value=R.map.texture,m.uniforms.resolution.value=R.mapSize,m.uniforms.radius.value=R.radius,r.setRenderTarget(R.mapPass),r.clear(),r.renderBufferDirect(P,null,U,m,E,null),v.uniforms.shadow_pass.value=R.mapPass.texture,v.uniforms.resolution.value=R.mapSize,v.uniforms.radius.value=R.radius,r.setRenderTarget(R.map),r.clear(),r.renderBufferDirect(P,null,U,v,E,null)}function M(R,P,U,F){let b=null;const L=U.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(L!==void 0)b=L;else if(b=U.isPointLight===!0?u:c,r.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0){const k=b.uuid,$=P.uuid;let ae=h[k];ae===void 0&&(ae={},h[k]=ae);let H=ae[$];H===void 0&&(H=b.clone(),ae[$]=H),b=H}if(b.visible=P.visible,b.wireframe=P.wireframe,F===vi?b.side=P.shadowSide!==null?P.shadowSide:P.side:b.side=P.shadowSide!==null?P.shadowSide:p[P.side],b.alphaMap=P.alphaMap,b.alphaTest=P.alphaTest,b.map=P.map,b.clipShadows=P.clipShadows,b.clippingPlanes=P.clippingPlanes,b.clipIntersection=P.clipIntersection,b.displacementMap=P.displacementMap,b.displacementScale=P.displacementScale,b.displacementBias=P.displacementBias,b.wireframeLinewidth=P.wireframeLinewidth,b.linewidth=P.linewidth,U.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const k=r.properties.get(b);k.light=U}return b}function A(R,P,U,F,b){if(R.visible===!1)return;if(R.layers.test(P.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&b===vi)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(U.matrixWorldInverse,R.matrixWorld);const $=e.update(R),ae=R.material;if(Array.isArray(ae)){const H=$.groups;for(let K=0,se=H.length;K<se;K++){const oe=H[K],X=ae[oe.materialIndex];if(X&&X.visible){const Y=M(R,X,F,b);r.renderBufferDirect(U,null,$,Y,R,oe)}}}else if(ae.visible){const H=M(R,ae,F,b);r.renderBufferDirect(U,null,$,H,R,null)}}const k=R.children;for(let $=0,ae=k.length;$<ae;$++)A(k[$],P,U,F,b)}}function oT(r,e,t){const n=t.isWebGL2;function i(){let V=!1;const Ce=new Lt;let xe=null;const le=new Lt(0,0,0,0);return{setMask:function(Ee){xe!==Ee&&!V&&(r.colorMask(Ee,Ee,Ee,Ee),xe=Ee)},setLocked:function(Ee){V=Ee},setClear:function(Ee,je,St,kt,Rn){Rn===!0&&(Ee*=kt,je*=kt,St*=kt),Ce.set(Ee,je,St,kt),le.equals(Ce)===!1&&(r.clearColor(Ee,je,St,kt),le.copy(Ce))},reset:function(){V=!1,xe=null,le.set(-1,0,0,0)}}}function s(){let V=!1,Ce=null,xe=null,le=null;return{setTest:function(Ee){Ee?it(r.DEPTH_TEST):_t(r.DEPTH_TEST)},setMask:function(Ee){Ce!==Ee&&!V&&(r.depthMask(Ee),Ce=Ee)},setFunc:function(Ee){if(xe!==Ee){switch(Ee){case lv:r.depthFunc(r.NEVER);break;case cv:r.depthFunc(r.ALWAYS);break;case uv:r.depthFunc(r.LESS);break;case ma:r.depthFunc(r.LEQUAL);break;case hv:r.depthFunc(r.EQUAL);break;case fv:r.depthFunc(r.GEQUAL);break;case dv:r.depthFunc(r.GREATER);break;case pv:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}xe=Ee}},setLocked:function(Ee){V=Ee},setClear:function(Ee){le!==Ee&&(r.clearDepth(Ee),le=Ee)},reset:function(){V=!1,Ce=null,xe=null,le=null}}}function l(){let V=!1,Ce=null,xe=null,le=null,Ee=null,je=null,St=null,kt=null,Rn=null;return{setTest:function(It){V||(It?it(r.STENCIL_TEST):_t(r.STENCIL_TEST))},setMask:function(It){Ce!==It&&!V&&(r.stencilMask(It),Ce=It)},setFunc:function(It,gn,$n){(xe!==It||le!==gn||Ee!==$n)&&(r.stencilFunc(It,gn,$n),xe=It,le=gn,Ee=$n)},setOp:function(It,gn,$n){(je!==It||St!==gn||kt!==$n)&&(r.stencilOp(It,gn,$n),je=It,St=gn,kt=$n)},setLocked:function(It){V=It},setClear:function(It){Rn!==It&&(r.clearStencil(It),Rn=It)},reset:function(){V=!1,Ce=null,xe=null,le=null,Ee=null,je=null,St=null,kt=null,Rn=null}}}const c=new i,u=new s,h=new l,d=new WeakMap,p=new WeakMap;let m={},v={},y=new WeakMap,E=[],x=null,_=!1,w=null,M=null,A=null,R=null,P=null,U=null,F=null,b=new Ue(0,0,0),L=0,k=!1,$=null,ae=null,H=null,K=null,se=null;const oe=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let X=!1,Y=0;const Z=r.getParameter(r.VERSION);Z.indexOf("WebGL")!==-1?(Y=parseFloat(/^WebGL (\d)/.exec(Z)[1]),X=Y>=1):Z.indexOf("OpenGL ES")!==-1&&(Y=parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]),X=Y>=2);let z=null,j={};const fe=r.getParameter(r.SCISSOR_BOX),we=r.getParameter(r.VIEWPORT),Ae=new Lt().fromArray(fe),ke=new Lt().fromArray(we);function qe(V,Ce,xe,le){const Ee=new Uint8Array(4),je=r.createTexture();r.bindTexture(V,je),r.texParameteri(V,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(V,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let St=0;St<xe;St++)n&&(V===r.TEXTURE_3D||V===r.TEXTURE_2D_ARRAY)?r.texImage3D(Ce,0,r.RGBA,1,1,le,0,r.RGBA,r.UNSIGNED_BYTE,Ee):r.texImage2D(Ce+St,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Ee);return je}const Je={};Je[r.TEXTURE_2D]=qe(r.TEXTURE_2D,r.TEXTURE_2D,1),Je[r.TEXTURE_CUBE_MAP]=qe(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Je[r.TEXTURE_2D_ARRAY]=qe(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Je[r.TEXTURE_3D]=qe(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),it(r.DEPTH_TEST),u.setFunc(ma),Le(!1),Oe(Lf),it(r.CULL_FACE),he(nr);function it(V){m[V]!==!0&&(r.enable(V),m[V]=!0)}function _t(V){m[V]!==!1&&(r.disable(V),m[V]=!1)}function Be(V,Ce){return v[V]!==Ce?(r.bindFramebuffer(V,Ce),v[V]=Ce,n&&(V===r.DRAW_FRAMEBUFFER&&(v[r.FRAMEBUFFER]=Ce),V===r.FRAMEBUFFER&&(v[r.DRAW_FRAMEBUFFER]=Ce)),!0):!1}function B(V,Ce){let xe=E,le=!1;if(V)if(xe=y.get(Ce),xe===void 0&&(xe=[],y.set(Ce,xe)),V.isWebGLMultipleRenderTargets){const Ee=V.texture;if(xe.length!==Ee.length||xe[0]!==r.COLOR_ATTACHMENT0){for(let je=0,St=Ee.length;je<St;je++)xe[je]=r.COLOR_ATTACHMENT0+je;xe.length=Ee.length,le=!0}}else xe[0]!==r.COLOR_ATTACHMENT0&&(xe[0]=r.COLOR_ATTACHMENT0,le=!0);else xe[0]!==r.BACK&&(xe[0]=r.BACK,le=!0);le&&(t.isWebGL2?r.drawBuffers(xe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(xe))}function pe(V){return x!==V?(r.useProgram(V),x=V,!0):!1}const ce={[wr]:r.FUNC_ADD,[Y0]:r.FUNC_SUBTRACT,[Z0]:r.FUNC_REVERSE_SUBTRACT};if(n)ce[Nf]=r.MIN,ce[Of]=r.MAX;else{const V=e.get("EXT_blend_minmax");V!==null&&(ce[Nf]=V.MIN_EXT,ce[Of]=V.MAX_EXT)}const me={[J0]:r.ZERO,[j0]:r.ONE,[K0]:r.SRC_COLOR,[Xc]:r.SRC_ALPHA,[iv]:r.SRC_ALPHA_SATURATE,[tv]:r.DST_COLOR,[$0]:r.DST_ALPHA,[Q0]:r.ONE_MINUS_SRC_COLOR,[qc]:r.ONE_MINUS_SRC_ALPHA,[nv]:r.ONE_MINUS_DST_COLOR,[ev]:r.ONE_MINUS_DST_ALPHA,[rv]:r.CONSTANT_COLOR,[sv]:r.ONE_MINUS_CONSTANT_COLOR,[ov]:r.CONSTANT_ALPHA,[av]:r.ONE_MINUS_CONSTANT_ALPHA};function he(V,Ce,xe,le,Ee,je,St,kt,Rn,It){if(V===nr){_===!0&&(_t(r.BLEND),_=!1);return}if(_===!1&&(it(r.BLEND),_=!0),V!==q0){if(V!==w||It!==k){if((M!==wr||P!==wr)&&(r.blendEquation(r.FUNC_ADD),M=wr,P=wr),It)switch(V){case as:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case If:r.blendFunc(r.ONE,r.ONE);break;case Uf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Df:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case as:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case If:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Uf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Df:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}A=null,R=null,U=null,F=null,b.set(0,0,0),L=0,w=V,k=It}return}Ee=Ee||Ce,je=je||xe,St=St||le,(Ce!==M||Ee!==P)&&(r.blendEquationSeparate(ce[Ce],ce[Ee]),M=Ce,P=Ee),(xe!==A||le!==R||je!==U||St!==F)&&(r.blendFuncSeparate(me[xe],me[le],me[je],me[St]),A=xe,R=le,U=je,F=St),(kt.equals(b)===!1||Rn!==L)&&(r.blendColor(kt.r,kt.g,kt.b,Rn),b.copy(kt),L=Rn),w=V,k=!1}function Xe(V,Ce){V.side===Ii?_t(r.CULL_FACE):it(r.CULL_FACE);let xe=V.side===Un;Ce&&(xe=!xe),Le(xe),V.blending===as&&V.transparent===!1?he(nr):he(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),u.setFunc(V.depthFunc),u.setTest(V.depthTest),u.setMask(V.depthWrite),c.setMask(V.colorWrite);const le=V.stencilWrite;h.setTest(le),le&&(h.setMask(V.stencilWriteMask),h.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),h.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),vt(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?it(r.SAMPLE_ALPHA_TO_COVERAGE):_t(r.SAMPLE_ALPHA_TO_COVERAGE)}function Le(V){$!==V&&(V?r.frontFace(r.CW):r.frontFace(r.CCW),$=V)}function Oe(V){V!==G0?(it(r.CULL_FACE),V!==ae&&(V===Lf?r.cullFace(r.BACK):V===W0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):_t(r.CULL_FACE),ae=V}function Qe(V){V!==H&&(X&&r.lineWidth(V),H=V)}function vt(V,Ce,xe){V?(it(r.POLYGON_OFFSET_FILL),(K!==Ce||se!==xe)&&(r.polygonOffset(Ce,xe),K=Ce,se=xe)):_t(r.POLYGON_OFFSET_FILL)}function zt(V){V?it(r.SCISSOR_TEST):_t(r.SCISSOR_TEST)}function O(V){V===void 0&&(V=r.TEXTURE0+oe-1),z!==V&&(r.activeTexture(V),z=V)}function C(V,Ce,xe){xe===void 0&&(z===null?xe=r.TEXTURE0+oe-1:xe=z);let le=j[xe];le===void 0&&(le={type:void 0,texture:void 0},j[xe]=le),(le.type!==V||le.texture!==Ce)&&(z!==xe&&(r.activeTexture(xe),z=xe),r.bindTexture(V,Ce||Je[V]),le.type=V,le.texture=Ce)}function Q(){const V=j[z];V!==void 0&&V.type!==void 0&&(r.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function ge(){try{r.compressedTexImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function de(){try{r.compressedTexImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ve(){try{r.texSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function He(){try{r.texSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Me(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Re(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function nt(){try{r.texStorage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Mt(){try{r.texStorage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ye(){try{r.texImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Ct(){try{r.texImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function at(V){Ae.equals(V)===!1&&(r.scissor(V.x,V.y,V.z,V.w),Ae.copy(V))}function et(V){ke.equals(V)===!1&&(r.viewport(V.x,V.y,V.z,V.w),ke.copy(V))}function Ze(V,Ce){let xe=p.get(Ce);xe===void 0&&(xe=new WeakMap,p.set(Ce,xe));let le=xe.get(V);le===void 0&&(le=r.getUniformBlockIndex(Ce,V.name),xe.set(V,le))}function De(V,Ce){const le=p.get(Ce).get(V);d.get(Ce)!==le&&(r.uniformBlockBinding(Ce,le,V.__bindingPointIndex),d.set(Ce,le))}function xt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),m={},z=null,j={},v={},y=new WeakMap,E=[],x=null,_=!1,w=null,M=null,A=null,R=null,P=null,U=null,F=null,b=new Ue(0,0,0),L=0,k=!1,$=null,ae=null,H=null,K=null,se=null,Ae.set(0,0,r.canvas.width,r.canvas.height),ke.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:it,disable:_t,bindFramebuffer:Be,drawBuffers:B,useProgram:pe,setBlending:he,setMaterial:Xe,setFlipSided:Le,setCullFace:Oe,setLineWidth:Qe,setPolygonOffset:vt,setScissorTest:zt,activeTexture:O,bindTexture:C,unbindTexture:Q,compressedTexImage2D:ge,compressedTexImage3D:de,texImage2D:ye,texImage3D:Ct,updateUBOMapping:Ze,uniformBlockBinding:De,texStorage2D:nt,texStorage3D:Mt,texSubImage2D:ve,texSubImage3D:He,compressedTexSubImage2D:Me,compressedTexSubImage3D:Re,scissor:at,viewport:et,reset:xt}}function aT(r,e,t,n,i,s,l){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,d=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,v=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap;let E;const x=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(O,C){return _?new OffscreenCanvas(O,C):Ra("canvas")}function M(O,C,Q,ge){let de=1;if((O.width>ge||O.height>ge)&&(de=ge/Math.max(O.width,O.height)),de<1||C===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const ve=C?Jc:Math.floor,He=ve(de*O.width),Me=ve(de*O.height);E===void 0&&(E=w(He,Me));const Re=Q?w(He,Me):E;return Re.width=He,Re.height=Me,Re.getContext("2d").drawImage(O,0,0,He,Me),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+He+"x"+Me+")."),Re}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function A(O){return hd(O.width)&&hd(O.height)}function R(O){return c?!1:O.wrapS!==An||O.wrapT!==An||O.minFilter!==jt&&O.minFilter!==Kt}function P(O,C){return O.generateMipmaps&&C&&O.minFilter!==jt&&O.minFilter!==Kt}function U(O){r.generateMipmap(O)}function F(O,C,Q,ge,de=!1){if(c===!1)return C;if(O!==null){if(r[O]!==void 0)return r[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let ve=C;if(C===r.RED&&(Q===r.FLOAT&&(ve=r.R32F),Q===r.HALF_FLOAT&&(ve=r.R16F),Q===r.UNSIGNED_BYTE&&(ve=r.R8)),C===r.RED_INTEGER&&(Q===r.UNSIGNED_BYTE&&(ve=r.R8UI),Q===r.UNSIGNED_SHORT&&(ve=r.R16UI),Q===r.UNSIGNED_INT&&(ve=r.R32UI),Q===r.BYTE&&(ve=r.R8I),Q===r.SHORT&&(ve=r.R16I),Q===r.INT&&(ve=r.R32I)),C===r.RG&&(Q===r.FLOAT&&(ve=r.RG32F),Q===r.HALF_FLOAT&&(ve=r.RG16F),Q===r.UNSIGNED_BYTE&&(ve=r.RG8)),C===r.RGBA){const He=de?Ea:Pt.getTransfer(ge);Q===r.FLOAT&&(ve=r.RGBA32F),Q===r.HALF_FLOAT&&(ve=r.RGBA16F),Q===r.UNSIGNED_BYTE&&(ve=He===Nt?r.SRGB8_ALPHA8:r.RGBA8),Q===r.UNSIGNED_SHORT_4_4_4_4&&(ve=r.RGBA4),Q===r.UNSIGNED_SHORT_5_5_5_1&&(ve=r.RGB5_A1)}return(ve===r.R16F||ve===r.R32F||ve===r.RG16F||ve===r.RG32F||ve===r.RGBA16F||ve===r.RGBA32F)&&e.get("EXT_color_buffer_float"),ve}function b(O,C,Q){return P(O,Q)===!0||O.isFramebufferTexture&&O.minFilter!==jt&&O.minFilter!==Kt?Math.log2(Math.max(C.width,C.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?C.mipmaps.length:1}function L(O){return O===jt||O===Yc||O===ua?r.NEAREST:r.LINEAR}function k(O){const C=O.target;C.removeEventListener("dispose",k),ae(C),C.isVideoTexture&&y.delete(C)}function $(O){const C=O.target;C.removeEventListener("dispose",$),K(C)}function ae(O){const C=n.get(O);if(C.__webglInit===void 0)return;const Q=O.source,ge=x.get(Q);if(ge){const de=ge[C.__cacheKey];de.usedTimes--,de.usedTimes===0&&H(O),Object.keys(ge).length===0&&x.delete(Q)}n.remove(O)}function H(O){const C=n.get(O);r.deleteTexture(C.__webglTexture);const Q=O.source,ge=x.get(Q);delete ge[C.__cacheKey],l.memory.textures--}function K(O){const C=O.texture,Q=n.get(O),ge=n.get(C);if(ge.__webglTexture!==void 0&&(r.deleteTexture(ge.__webglTexture),l.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let de=0;de<6;de++){if(Array.isArray(Q.__webglFramebuffer[de]))for(let ve=0;ve<Q.__webglFramebuffer[de].length;ve++)r.deleteFramebuffer(Q.__webglFramebuffer[de][ve]);else r.deleteFramebuffer(Q.__webglFramebuffer[de]);Q.__webglDepthbuffer&&r.deleteRenderbuffer(Q.__webglDepthbuffer[de])}else{if(Array.isArray(Q.__webglFramebuffer))for(let de=0;de<Q.__webglFramebuffer.length;de++)r.deleteFramebuffer(Q.__webglFramebuffer[de]);else r.deleteFramebuffer(Q.__webglFramebuffer);if(Q.__webglDepthbuffer&&r.deleteRenderbuffer(Q.__webglDepthbuffer),Q.__webglMultisampledFramebuffer&&r.deleteFramebuffer(Q.__webglMultisampledFramebuffer),Q.__webglColorRenderbuffer)for(let de=0;de<Q.__webglColorRenderbuffer.length;de++)Q.__webglColorRenderbuffer[de]&&r.deleteRenderbuffer(Q.__webglColorRenderbuffer[de]);Q.__webglDepthRenderbuffer&&r.deleteRenderbuffer(Q.__webglDepthRenderbuffer)}if(O.isWebGLMultipleRenderTargets)for(let de=0,ve=C.length;de<ve;de++){const He=n.get(C[de]);He.__webglTexture&&(r.deleteTexture(He.__webglTexture),l.memory.textures--),n.remove(C[de])}n.remove(C),n.remove(O)}let se=0;function oe(){se=0}function X(){const O=se;return O>=u&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+u),se+=1,O}function Y(O){const C=[];return C.push(O.wrapS),C.push(O.wrapT),C.push(O.wrapR||0),C.push(O.magFilter),C.push(O.minFilter),C.push(O.anisotropy),C.push(O.internalFormat),C.push(O.format),C.push(O.type),C.push(O.generateMipmaps),C.push(O.premultiplyAlpha),C.push(O.flipY),C.push(O.unpackAlignment),C.push(O.colorSpace),C.join()}function Z(O,C){const Q=n.get(O);if(O.isVideoTexture&&vt(O),O.isRenderTargetTexture===!1&&O.version>0&&Q.__version!==O.version){const ge=O.image;if(ge===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ge.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{it(Q,O,C);return}}t.bindTexture(r.TEXTURE_2D,Q.__webglTexture,r.TEXTURE0+C)}function z(O,C){const Q=n.get(O);if(O.version>0&&Q.__version!==O.version){it(Q,O,C);return}t.bindTexture(r.TEXTURE_2D_ARRAY,Q.__webglTexture,r.TEXTURE0+C)}function j(O,C){const Q=n.get(O);if(O.version>0&&Q.__version!==O.version){it(Q,O,C);return}t.bindTexture(r.TEXTURE_3D,Q.__webglTexture,r.TEXTURE0+C)}function fe(O,C){const Q=n.get(O);if(O.version>0&&Q.__version!==O.version){_t(Q,O,C);return}t.bindTexture(r.TEXTURE_CUBE_MAP,Q.__webglTexture,r.TEXTURE0+C)}const we={[_a]:r.REPEAT,[An]:r.CLAMP_TO_EDGE,[ya]:r.MIRRORED_REPEAT},Ae={[jt]:r.NEAREST,[Yc]:r.NEAREST_MIPMAP_NEAREST,[ua]:r.NEAREST_MIPMAP_LINEAR,[Kt]:r.LINEAR,[Ed]:r.LINEAR_MIPMAP_NEAREST,[Cr]:r.LINEAR_MIPMAP_LINEAR},ke={[Fv]:r.NEVER,[Wv]:r.ALWAYS,[zv]:r.LESS,[kv]:r.LEQUAL,[Bv]:r.EQUAL,[Gv]:r.GEQUAL,[Hv]:r.GREATER,[Vv]:r.NOTEQUAL};function qe(O,C,Q){if(Q?(r.texParameteri(O,r.TEXTURE_WRAP_S,we[C.wrapS]),r.texParameteri(O,r.TEXTURE_WRAP_T,we[C.wrapT]),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,we[C.wrapR]),r.texParameteri(O,r.TEXTURE_MAG_FILTER,Ae[C.magFilter]),r.texParameteri(O,r.TEXTURE_MIN_FILTER,Ae[C.minFilter])):(r.texParameteri(O,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(O,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(C.wrapS!==An||C.wrapT!==An)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(O,r.TEXTURE_MAG_FILTER,L(C.magFilter)),r.texParameteri(O,r.TEXTURE_MIN_FILTER,L(C.minFilter)),C.minFilter!==jt&&C.minFilter!==Kt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),C.compareFunction&&(r.texParameteri(O,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(O,r.TEXTURE_COMPARE_FUNC,ke[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const ge=e.get("EXT_texture_filter_anisotropic");if(C.magFilter===jt||C.minFilter!==ua&&C.minFilter!==Cr||C.type===Ui&&e.has("OES_texture_float_linear")===!1||c===!1&&C.type===go&&e.has("OES_texture_half_float_linear")===!1)return;(C.anisotropy>1||n.get(C).__currentAnisotropy)&&(r.texParameterf(O,ge.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy)}}function Je(O,C){let Q=!1;O.__webglInit===void 0&&(O.__webglInit=!0,C.addEventListener("dispose",k));const ge=C.source;let de=x.get(ge);de===void 0&&(de={},x.set(ge,de));const ve=Y(C);if(ve!==O.__cacheKey){de[ve]===void 0&&(de[ve]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,Q=!0),de[ve].usedTimes++;const He=de[O.__cacheKey];He!==void 0&&(de[O.__cacheKey].usedTimes--,He.usedTimes===0&&H(C)),O.__cacheKey=ve,O.__webglTexture=de[ve].texture}return Q}function it(O,C,Q){let ge=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(ge=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(ge=r.TEXTURE_3D);const de=Je(O,C),ve=C.source;t.bindTexture(ge,O.__webglTexture,r.TEXTURE0+Q);const He=n.get(ve);if(ve.version!==He.__version||de===!0){t.activeTexture(r.TEXTURE0+Q);const Me=Pt.getPrimaries(Pt.workingColorSpace),Re=C.colorSpace===Kn?null:Pt.getPrimaries(C.colorSpace),nt=C.colorSpace===Kn||Me===Re?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,nt);const Mt=R(C)&&A(C.image)===!1;let ye=M(C.image,Mt,!1,d);ye=zt(C,ye);const Ct=A(ye)||c,at=s.convert(C.format,C.colorSpace);let et=s.convert(C.type),Ze=F(C.internalFormat,at,et,C.colorSpace,C.isVideoTexture);qe(ge,C,Ct);let De;const xt=C.mipmaps,V=c&&C.isVideoTexture!==!0,Ce=He.__version===void 0||de===!0,xe=b(C,ye,Ct);if(C.isDepthTexture)Ze=r.DEPTH_COMPONENT,c?C.type===Ui?Ze=r.DEPTH_COMPONENT32F:C.type===tr?Ze=r.DEPTH_COMPONENT24:C.type===Tr?Ze=r.DEPTH24_STENCIL8:Ze=r.DEPTH_COMPONENT16:C.type===Ui&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),C.format===Ar&&Ze===r.DEPTH_COMPONENT&&C.type!==eu&&C.type!==tr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),C.type=tr,et=s.convert(C.type)),C.format===fs&&Ze===r.DEPTH_COMPONENT&&(Ze=r.DEPTH_STENCIL,C.type!==Tr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),C.type=Tr,et=s.convert(C.type))),Ce&&(V?t.texStorage2D(r.TEXTURE_2D,1,Ze,ye.width,ye.height):t.texImage2D(r.TEXTURE_2D,0,Ze,ye.width,ye.height,0,at,et,null));else if(C.isDataTexture)if(xt.length>0&&Ct){V&&Ce&&t.texStorage2D(r.TEXTURE_2D,xe,Ze,xt[0].width,xt[0].height);for(let le=0,Ee=xt.length;le<Ee;le++)De=xt[le],V?t.texSubImage2D(r.TEXTURE_2D,le,0,0,De.width,De.height,at,et,De.data):t.texImage2D(r.TEXTURE_2D,le,Ze,De.width,De.height,0,at,et,De.data);C.generateMipmaps=!1}else V?(Ce&&t.texStorage2D(r.TEXTURE_2D,xe,Ze,ye.width,ye.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,ye.width,ye.height,at,et,ye.data)):t.texImage2D(r.TEXTURE_2D,0,Ze,ye.width,ye.height,0,at,et,ye.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){V&&Ce&&t.texStorage3D(r.TEXTURE_2D_ARRAY,xe,Ze,xt[0].width,xt[0].height,ye.depth);for(let le=0,Ee=xt.length;le<Ee;le++)De=xt[le],C.format!==kn?at!==null?V?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,le,0,0,0,De.width,De.height,ye.depth,at,De.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,le,Ze,De.width,De.height,ye.depth,0,De.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):V?t.texSubImage3D(r.TEXTURE_2D_ARRAY,le,0,0,0,De.width,De.height,ye.depth,at,et,De.data):t.texImage3D(r.TEXTURE_2D_ARRAY,le,Ze,De.width,De.height,ye.depth,0,at,et,De.data)}else{V&&Ce&&t.texStorage2D(r.TEXTURE_2D,xe,Ze,xt[0].width,xt[0].height);for(let le=0,Ee=xt.length;le<Ee;le++)De=xt[le],C.format!==kn?at!==null?V?t.compressedTexSubImage2D(r.TEXTURE_2D,le,0,0,De.width,De.height,at,De.data):t.compressedTexImage2D(r.TEXTURE_2D,le,Ze,De.width,De.height,0,De.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):V?t.texSubImage2D(r.TEXTURE_2D,le,0,0,De.width,De.height,at,et,De.data):t.texImage2D(r.TEXTURE_2D,le,Ze,De.width,De.height,0,at,et,De.data)}else if(C.isDataArrayTexture)V?(Ce&&t.texStorage3D(r.TEXTURE_2D_ARRAY,xe,Ze,ye.width,ye.height,ye.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,ye.width,ye.height,ye.depth,at,et,ye.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Ze,ye.width,ye.height,ye.depth,0,at,et,ye.data);else if(C.isData3DTexture)V?(Ce&&t.texStorage3D(r.TEXTURE_3D,xe,Ze,ye.width,ye.height,ye.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,ye.width,ye.height,ye.depth,at,et,ye.data)):t.texImage3D(r.TEXTURE_3D,0,Ze,ye.width,ye.height,ye.depth,0,at,et,ye.data);else if(C.isFramebufferTexture){if(Ce)if(V)t.texStorage2D(r.TEXTURE_2D,xe,Ze,ye.width,ye.height);else{let le=ye.width,Ee=ye.height;for(let je=0;je<xe;je++)t.texImage2D(r.TEXTURE_2D,je,Ze,le,Ee,0,at,et,null),le>>=1,Ee>>=1}}else if(xt.length>0&&Ct){V&&Ce&&t.texStorage2D(r.TEXTURE_2D,xe,Ze,xt[0].width,xt[0].height);for(let le=0,Ee=xt.length;le<Ee;le++)De=xt[le],V?t.texSubImage2D(r.TEXTURE_2D,le,0,0,at,et,De):t.texImage2D(r.TEXTURE_2D,le,Ze,at,et,De);C.generateMipmaps=!1}else V?(Ce&&t.texStorage2D(r.TEXTURE_2D,xe,Ze,ye.width,ye.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,at,et,ye)):t.texImage2D(r.TEXTURE_2D,0,Ze,at,et,ye);P(C,Ct)&&U(ge),He.__version=ve.version,C.onUpdate&&C.onUpdate(C)}O.__version=C.version}function _t(O,C,Q){if(C.image.length!==6)return;const ge=Je(O,C),de=C.source;t.bindTexture(r.TEXTURE_CUBE_MAP,O.__webglTexture,r.TEXTURE0+Q);const ve=n.get(de);if(de.version!==ve.__version||ge===!0){t.activeTexture(r.TEXTURE0+Q);const He=Pt.getPrimaries(Pt.workingColorSpace),Me=C.colorSpace===Kn?null:Pt.getPrimaries(C.colorSpace),Re=C.colorSpace===Kn||He===Me?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Re);const nt=C.isCompressedTexture||C.image[0].isCompressedTexture,Mt=C.image[0]&&C.image[0].isDataTexture,ye=[];for(let le=0;le<6;le++)!nt&&!Mt?ye[le]=M(C.image[le],!1,!0,h):ye[le]=Mt?C.image[le].image:C.image[le],ye[le]=zt(C,ye[le]);const Ct=ye[0],at=A(Ct)||c,et=s.convert(C.format,C.colorSpace),Ze=s.convert(C.type),De=F(C.internalFormat,et,Ze,C.colorSpace),xt=c&&C.isVideoTexture!==!0,V=ve.__version===void 0||ge===!0;let Ce=b(C,Ct,at);qe(r.TEXTURE_CUBE_MAP,C,at);let xe;if(nt){xt&&V&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ce,De,Ct.width,Ct.height);for(let le=0;le<6;le++){xe=ye[le].mipmaps;for(let Ee=0;Ee<xe.length;Ee++){const je=xe[Ee];C.format!==kn?et!==null?xt?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,Ee,0,0,je.width,je.height,et,je.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,Ee,De,je.width,je.height,0,je.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):xt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,Ee,0,0,je.width,je.height,et,Ze,je.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,Ee,De,je.width,je.height,0,et,Ze,je.data)}}}else{xe=C.mipmaps,xt&&V&&(xe.length>0&&Ce++,t.texStorage2D(r.TEXTURE_CUBE_MAP,Ce,De,ye[0].width,ye[0].height));for(let le=0;le<6;le++)if(Mt){xt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,0,0,ye[le].width,ye[le].height,et,Ze,ye[le].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,De,ye[le].width,ye[le].height,0,et,Ze,ye[le].data);for(let Ee=0;Ee<xe.length;Ee++){const St=xe[Ee].image[le].image;xt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,Ee+1,0,0,St.width,St.height,et,Ze,St.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,Ee+1,De,St.width,St.height,0,et,Ze,St.data)}}else{xt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,0,0,et,Ze,ye[le]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,De,et,Ze,ye[le]);for(let Ee=0;Ee<xe.length;Ee++){const je=xe[Ee];xt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,Ee+1,0,0,et,Ze,je.image[le]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+le,Ee+1,De,et,Ze,je.image[le])}}}P(C,at)&&U(r.TEXTURE_CUBE_MAP),ve.__version=de.version,C.onUpdate&&C.onUpdate(C)}O.__version=C.version}function Be(O,C,Q,ge,de,ve){const He=s.convert(Q.format,Q.colorSpace),Me=s.convert(Q.type),Re=F(Q.internalFormat,He,Me,Q.colorSpace);if(!n.get(C).__hasExternalTextures){const Mt=Math.max(1,C.width>>ve),ye=Math.max(1,C.height>>ve);de===r.TEXTURE_3D||de===r.TEXTURE_2D_ARRAY?t.texImage3D(de,ve,Re,Mt,ye,C.depth,0,He,Me,null):t.texImage2D(de,ve,Re,Mt,ye,0,He,Me,null)}t.bindFramebuffer(r.FRAMEBUFFER,O),Qe(C)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,ge,de,n.get(Q).__webglTexture,0,Oe(C)):(de===r.TEXTURE_2D||de>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&de<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,ge,de,n.get(Q).__webglTexture,ve),t.bindFramebuffer(r.FRAMEBUFFER,null)}function B(O,C,Q){if(r.bindRenderbuffer(r.RENDERBUFFER,O),C.depthBuffer&&!C.stencilBuffer){let ge=c===!0?r.DEPTH_COMPONENT24:r.DEPTH_COMPONENT16;if(Q||Qe(C)){const de=C.depthTexture;de&&de.isDepthTexture&&(de.type===Ui?ge=r.DEPTH_COMPONENT32F:de.type===tr&&(ge=r.DEPTH_COMPONENT24));const ve=Oe(C);Qe(C)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ve,ge,C.width,C.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,ve,ge,C.width,C.height)}else r.renderbufferStorage(r.RENDERBUFFER,ge,C.width,C.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,O)}else if(C.depthBuffer&&C.stencilBuffer){const ge=Oe(C);Q&&Qe(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,ge,r.DEPTH24_STENCIL8,C.width,C.height):Qe(C)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ge,r.DEPTH24_STENCIL8,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,O)}else{const ge=C.isWebGLMultipleRenderTargets===!0?C.texture:[C.texture];for(let de=0;de<ge.length;de++){const ve=ge[de],He=s.convert(ve.format,ve.colorSpace),Me=s.convert(ve.type),Re=F(ve.internalFormat,He,Me,ve.colorSpace),nt=Oe(C);Q&&Qe(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,nt,Re,C.width,C.height):Qe(C)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,nt,Re,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,Re,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function pe(O,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,O),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(C.depthTexture).__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),Z(C.depthTexture,0);const ge=n.get(C.depthTexture).__webglTexture,de=Oe(C);if(C.depthTexture.format===Ar)Qe(C)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ge,0,de):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ge,0);else if(C.depthTexture.format===fs)Qe(C)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ge,0,de):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ge,0);else throw new Error("Unknown depthTexture format")}function ce(O){const C=n.get(O),Q=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!C.__autoAllocateDepthBuffer){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");pe(C.__webglFramebuffer,O)}else if(Q){C.__webglDepthbuffer=[];for(let ge=0;ge<6;ge++)t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[ge]),C.__webglDepthbuffer[ge]=r.createRenderbuffer(),B(C.__webglDepthbuffer[ge],O,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer=r.createRenderbuffer(),B(C.__webglDepthbuffer,O,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function me(O,C,Q){const ge=n.get(O);C!==void 0&&Be(ge.__webglFramebuffer,O,O.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),Q!==void 0&&ce(O)}function he(O){const C=O.texture,Q=n.get(O),ge=n.get(C);O.addEventListener("dispose",$),O.isWebGLMultipleRenderTargets!==!0&&(ge.__webglTexture===void 0&&(ge.__webglTexture=r.createTexture()),ge.__version=C.version,l.memory.textures++);const de=O.isWebGLCubeRenderTarget===!0,ve=O.isWebGLMultipleRenderTargets===!0,He=A(O)||c;if(de){Q.__webglFramebuffer=[];for(let Me=0;Me<6;Me++)if(c&&C.mipmaps&&C.mipmaps.length>0){Q.__webglFramebuffer[Me]=[];for(let Re=0;Re<C.mipmaps.length;Re++)Q.__webglFramebuffer[Me][Re]=r.createFramebuffer()}else Q.__webglFramebuffer[Me]=r.createFramebuffer()}else{if(c&&C.mipmaps&&C.mipmaps.length>0){Q.__webglFramebuffer=[];for(let Me=0;Me<C.mipmaps.length;Me++)Q.__webglFramebuffer[Me]=r.createFramebuffer()}else Q.__webglFramebuffer=r.createFramebuffer();if(ve)if(i.drawBuffers){const Me=O.texture;for(let Re=0,nt=Me.length;Re<nt;Re++){const Mt=n.get(Me[Re]);Mt.__webglTexture===void 0&&(Mt.__webglTexture=r.createTexture(),l.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&O.samples>0&&Qe(O)===!1){const Me=ve?C:[C];Q.__webglMultisampledFramebuffer=r.createFramebuffer(),Q.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,Q.__webglMultisampledFramebuffer);for(let Re=0;Re<Me.length;Re++){const nt=Me[Re];Q.__webglColorRenderbuffer[Re]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,Q.__webglColorRenderbuffer[Re]);const Mt=s.convert(nt.format,nt.colorSpace),ye=s.convert(nt.type),Ct=F(nt.internalFormat,Mt,ye,nt.colorSpace,O.isXRRenderTarget===!0),at=Oe(O);r.renderbufferStorageMultisample(r.RENDERBUFFER,at,Ct,O.width,O.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Re,r.RENDERBUFFER,Q.__webglColorRenderbuffer[Re])}r.bindRenderbuffer(r.RENDERBUFFER,null),O.depthBuffer&&(Q.__webglDepthRenderbuffer=r.createRenderbuffer(),B(Q.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(de){t.bindTexture(r.TEXTURE_CUBE_MAP,ge.__webglTexture),qe(r.TEXTURE_CUBE_MAP,C,He);for(let Me=0;Me<6;Me++)if(c&&C.mipmaps&&C.mipmaps.length>0)for(let Re=0;Re<C.mipmaps.length;Re++)Be(Q.__webglFramebuffer[Me][Re],O,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Re);else Be(Q.__webglFramebuffer[Me],O,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0);P(C,He)&&U(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(ve){const Me=O.texture;for(let Re=0,nt=Me.length;Re<nt;Re++){const Mt=Me[Re],ye=n.get(Mt);t.bindTexture(r.TEXTURE_2D,ye.__webglTexture),qe(r.TEXTURE_2D,Mt,He),Be(Q.__webglFramebuffer,O,Mt,r.COLOR_ATTACHMENT0+Re,r.TEXTURE_2D,0),P(Mt,He)&&U(r.TEXTURE_2D)}t.unbindTexture()}else{let Me=r.TEXTURE_2D;if((O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(c?Me=O.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Me,ge.__webglTexture),qe(Me,C,He),c&&C.mipmaps&&C.mipmaps.length>0)for(let Re=0;Re<C.mipmaps.length;Re++)Be(Q.__webglFramebuffer[Re],O,C,r.COLOR_ATTACHMENT0,Me,Re);else Be(Q.__webglFramebuffer,O,C,r.COLOR_ATTACHMENT0,Me,0);P(C,He)&&U(Me),t.unbindTexture()}O.depthBuffer&&ce(O)}function Xe(O){const C=A(O)||c,Q=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let ge=0,de=Q.length;ge<de;ge++){const ve=Q[ge];if(P(ve,C)){const He=O.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,Me=n.get(ve).__webglTexture;t.bindTexture(He,Me),U(He),t.unbindTexture()}}}function Le(O){if(c&&O.samples>0&&Qe(O)===!1){const C=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],Q=O.width,ge=O.height;let de=r.COLOR_BUFFER_BIT;const ve=[],He=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Me=n.get(O),Re=O.isWebGLMultipleRenderTargets===!0;if(Re)for(let nt=0;nt<C.length;nt++)t.bindFramebuffer(r.FRAMEBUFFER,Me.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+nt,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Me.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+nt,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Me.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Me.__webglFramebuffer);for(let nt=0;nt<C.length;nt++){ve.push(r.COLOR_ATTACHMENT0+nt),O.depthBuffer&&ve.push(He);const Mt=Me.__ignoreDepthValues!==void 0?Me.__ignoreDepthValues:!1;if(Mt===!1&&(O.depthBuffer&&(de|=r.DEPTH_BUFFER_BIT),O.stencilBuffer&&(de|=r.STENCIL_BUFFER_BIT)),Re&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Me.__webglColorRenderbuffer[nt]),Mt===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[He]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[He])),Re){const ye=n.get(C[nt]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,ye,0)}r.blitFramebuffer(0,0,Q,ge,0,0,Q,ge,de,r.NEAREST),v&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,ve)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Re)for(let nt=0;nt<C.length;nt++){t.bindFramebuffer(r.FRAMEBUFFER,Me.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+nt,r.RENDERBUFFER,Me.__webglColorRenderbuffer[nt]);const Mt=n.get(C[nt]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Me.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+nt,r.TEXTURE_2D,Mt,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Me.__webglMultisampledFramebuffer)}}function Oe(O){return Math.min(p,O.samples)}function Qe(O){const C=n.get(O);return c&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function vt(O){const C=l.render.frame;y.get(O)!==C&&(y.set(O,C),O.update())}function zt(O,C){const Q=O.colorSpace,ge=O.format,de=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||O.format===Zc||Q!==zi&&Q!==Kn&&(Pt.getTransfer(Q)===Nt?c===!1?e.has("EXT_sRGB")===!0&&ge===kn?(O.format=Zc,O.minFilter=Kt,O.generateMipmaps=!1):C=Ud.sRGBToLinear(C):(ge!==kn||de!==Oi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Q)),C}this.allocateTextureUnit=X,this.resetTextureUnits=oe,this.setTexture2D=Z,this.setTexture2DArray=z,this.setTexture3D=j,this.setTextureCube=fe,this.rebindTextures=me,this.setupRenderTarget=he,this.updateRenderTargetMipmap=Xe,this.updateMultisampleRenderTarget=Le,this.setupDepthRenderbuffer=ce,this.setupFrameBufferTexture=Be,this.useMultisampledRTT=Qe}function s_(r,e,t){const n=t.isWebGL2;function i(s,l=Kn){let c;const u=Pt.getTransfer(l);if(s===Oi)return r.UNSIGNED_BYTE;if(s===Td)return r.UNSIGNED_SHORT_4_4_4_4;if(s===Ad)return r.UNSIGNED_SHORT_5_5_5_1;if(s===Mv)return r.BYTE;if(s===Ev)return r.SHORT;if(s===eu)return r.UNSIGNED_SHORT;if(s===wd)return r.INT;if(s===tr)return r.UNSIGNED_INT;if(s===Ui)return r.FLOAT;if(s===go)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===wv)return r.ALPHA;if(s===kn)return r.RGBA;if(s===Tv)return r.LUMINANCE;if(s===Av)return r.LUMINANCE_ALPHA;if(s===Ar)return r.DEPTH_COMPONENT;if(s===fs)return r.DEPTH_STENCIL;if(s===Zc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===bv)return r.RED;if(s===bd)return r.RED_INTEGER;if(s===Rv)return r.RG;if(s===Rd)return r.RG_INTEGER;if(s===Cd)return r.RGBA_INTEGER;if(s===Fc||s===zc||s===Bc||s===kc)if(u===Nt)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===Fc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===zc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Bc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===kc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===Fc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===zc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Bc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===kc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===zf||s===Bf||s===kf||s===Hf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===zf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Bf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===kf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Hf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Cv)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Vf||s===Gf)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===Vf)return u===Nt?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===Gf)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Wf||s===Xf||s===qf||s===Yf||s===Zf||s===Jf||s===jf||s===Kf||s===Qf||s===$f||s===ed||s===td||s===nd||s===id)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===Wf)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Xf)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===qf)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Yf)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Zf)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Jf)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===jf)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Kf)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Qf)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===$f)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===ed)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===td)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===nd)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===id)return u===Nt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Hc||s===rd||s===sd)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===Hc)return u===Nt?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===rd)return c.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===sd)return c.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===Pv||s===od||s===ad||s===ld)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===Hc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===od)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===ad)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===ld)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Tr?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class o_ extends mn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class co extends Rt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const lT={type:"move"};class rf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new co,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new co,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new co,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const E of e.hand.values()){const x=t.getJointPose(E,n),_=this._getHandJoint(h,E);x!==null&&(_.matrix.fromArray(x.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=x.radius),_.visible=x!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),v=.02,y=.005;h.inputState.pinching&&m>v+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=v-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(lT)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new co;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class a_ extends Qt{constructor(e,t,n,i,s,l,c,u,h,d){if(d=d!==void 0?d:Ar,d!==Ar&&d!==fs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===Ar&&(n=tr),n===void 0&&d===fs&&(n=Tr),super(null,i,s,l,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:jt,this.minFilter=u!==void 0?u:jt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class cT extends or{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,d=null,p=null,m=null,v=null,y=null;const E=t.getContextAttributes();let x=null,_=null;const w=[],M=[],A=new mn;A.layers.enable(1),A.viewport=new Lt;const R=new mn;R.layers.enable(2),R.viewport=new Lt;const P=[A,R],U=new o_;U.layers.enable(1),U.layers.enable(2);let F=null,b=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(z){let j=w[z];return j===void 0&&(j=new rf,w[z]=j),j.getTargetRaySpace()},this.getControllerGrip=function(z){let j=w[z];return j===void 0&&(j=new rf,w[z]=j),j.getGripSpace()},this.getHand=function(z){let j=w[z];return j===void 0&&(j=new rf,w[z]=j),j.getHandSpace()};function L(z){const j=M.indexOf(z.inputSource);if(j===-1)return;const fe=w[j];fe!==void 0&&(fe.update(z.inputSource,z.frame,h||l),fe.dispatchEvent({type:z.type,data:z.inputSource}))}function k(){i.removeEventListener("select",L),i.removeEventListener("selectstart",L),i.removeEventListener("selectend",L),i.removeEventListener("squeeze",L),i.removeEventListener("squeezestart",L),i.removeEventListener("squeezeend",L),i.removeEventListener("end",k),i.removeEventListener("inputsourceschange",$);for(let z=0;z<w.length;z++){const j=M[z];j!==null&&(M[z]=null,w[z].disconnect(j))}F=null,b=null,e.setRenderTarget(x),v=null,m=null,p=null,i=null,_=null,Z.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(z){s=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(z){c=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(z){h=z},this.getBaseLayer=function(){return m!==null?m:v},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(z){if(i=z,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",L),i.addEventListener("selectstart",L),i.addEventListener("selectend",L),i.addEventListener("squeeze",L),i.addEventListener("squeezestart",L),i.addEventListener("squeezeend",L),i.addEventListener("end",k),i.addEventListener("inputsourceschange",$),E.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const j={antialias:i.renderState.layers===void 0?E.antialias:!0,alpha:!0,depth:E.depth,stencil:E.stencil,framebufferScaleFactor:s};v=new XRWebGLLayer(i,t,j),i.updateRenderState({baseLayer:v}),_=new yi(v.framebufferWidth,v.framebufferHeight,{format:kn,type:Oi,colorSpace:e.outputColorSpace,stencilBuffer:E.stencil})}else{let j=null,fe=null,we=null;E.depth&&(we=E.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,j=E.stencil?fs:Ar,fe=E.stencil?Tr:tr);const Ae={colorFormat:t.RGBA8,depthFormat:we,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Ae),i.updateRenderState({layers:[m]}),_=new yi(m.textureWidth,m.textureHeight,{format:kn,type:Oi,depthTexture:new a_(m.textureWidth,m.textureHeight,fe,void 0,void 0,void 0,void 0,void 0,void 0,j),stencilBuffer:E.stencil,colorSpace:e.outputColorSpace,samples:E.antialias?4:0});const ke=e.properties.get(_);ke.__ignoreDepthValues=m.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),Z.setContext(i),Z.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function $(z){for(let j=0;j<z.removed.length;j++){const fe=z.removed[j],we=M.indexOf(fe);we>=0&&(M[we]=null,w[we].disconnect(fe))}for(let j=0;j<z.added.length;j++){const fe=z.added[j];let we=M.indexOf(fe);if(we===-1){for(let ke=0;ke<w.length;ke++)if(ke>=M.length){M.push(fe),we=ke;break}else if(M[ke]===null){M[ke]=fe,we=ke;break}if(we===-1)break}const Ae=w[we];Ae&&Ae.connect(fe)}}const ae=new D,H=new D;function K(z,j,fe){ae.setFromMatrixPosition(j.matrixWorld),H.setFromMatrixPosition(fe.matrixWorld);const we=ae.distanceTo(H),Ae=j.projectionMatrix.elements,ke=fe.projectionMatrix.elements,qe=Ae[14]/(Ae[10]-1),Je=Ae[14]/(Ae[10]+1),it=(Ae[9]+1)/Ae[5],_t=(Ae[9]-1)/Ae[5],Be=(Ae[8]-1)/Ae[0],B=(ke[8]+1)/ke[0],pe=qe*Be,ce=qe*B,me=we/(-Be+B),he=me*-Be;j.matrixWorld.decompose(z.position,z.quaternion,z.scale),z.translateX(he),z.translateZ(me),z.matrixWorld.compose(z.position,z.quaternion,z.scale),z.matrixWorldInverse.copy(z.matrixWorld).invert();const Xe=qe+me,Le=Je+me,Oe=pe-he,Qe=ce+(we-he),vt=it*Je/Le*Xe,zt=_t*Je/Le*Xe;z.projectionMatrix.makePerspective(Oe,Qe,vt,zt,Xe,Le),z.projectionMatrixInverse.copy(z.projectionMatrix).invert()}function se(z,j){j===null?z.matrixWorld.copy(z.matrix):z.matrixWorld.multiplyMatrices(j.matrixWorld,z.matrix),z.matrixWorldInverse.copy(z.matrixWorld).invert()}this.updateCamera=function(z){if(i===null)return;U.near=R.near=A.near=z.near,U.far=R.far=A.far=z.far,(F!==U.near||b!==U.far)&&(i.updateRenderState({depthNear:U.near,depthFar:U.far}),F=U.near,b=U.far);const j=z.parent,fe=U.cameras;se(U,j);for(let we=0;we<fe.length;we++)se(fe[we],j);fe.length===2?K(U,A,R):U.projectionMatrix.copy(A.projectionMatrix),oe(z,U,j)};function oe(z,j,fe){fe===null?z.matrix.copy(j.matrixWorld):(z.matrix.copy(fe.matrixWorld),z.matrix.invert(),z.matrix.multiply(j.matrixWorld)),z.matrix.decompose(z.position,z.quaternion,z.scale),z.updateMatrixWorld(!0),z.projectionMatrix.copy(j.projectionMatrix),z.projectionMatrixInverse.copy(j.projectionMatrixInverse),z.isPerspectiveCamera&&(z.fov=vo*2*Math.atan(1/z.projectionMatrix.elements[5]),z.zoom=1)}this.getCamera=function(){return U},this.getFoveation=function(){if(!(m===null&&v===null))return u},this.setFoveation=function(z){u=z,m!==null&&(m.fixedFoveation=z),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=z)};let X=null;function Y(z,j){if(d=j.getViewerPose(h||l),y=j,d!==null){const fe=d.views;v!==null&&(e.setRenderTargetFramebuffer(_,v.framebuffer),e.setRenderTarget(_));let we=!1;fe.length!==U.cameras.length&&(U.cameras.length=0,we=!0);for(let Ae=0;Ae<fe.length;Ae++){const ke=fe[Ae];let qe=null;if(v!==null)qe=v.getViewport(ke);else{const it=p.getViewSubImage(m,ke);qe=it.viewport,Ae===0&&(e.setRenderTargetTextures(_,it.colorTexture,m.ignoreDepthValues?void 0:it.depthStencilTexture),e.setRenderTarget(_))}let Je=P[Ae];Je===void 0&&(Je=new mn,Je.layers.enable(Ae),Je.viewport=new Lt,P[Ae]=Je),Je.matrix.fromArray(ke.transform.matrix),Je.matrix.decompose(Je.position,Je.quaternion,Je.scale),Je.projectionMatrix.fromArray(ke.projectionMatrix),Je.projectionMatrixInverse.copy(Je.projectionMatrix).invert(),Je.viewport.set(qe.x,qe.y,qe.width,qe.height),Ae===0&&(U.matrix.copy(Je.matrix),U.matrix.decompose(U.position,U.quaternion,U.scale)),we===!0&&U.cameras.push(Je)}}for(let fe=0;fe<w.length;fe++){const we=M[fe],Ae=w[fe];we!==null&&Ae!==void 0&&Ae.update(we,j,h||l)}X&&X(z,j),j.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:j}),y=null}const Z=new e_;Z.setAnimationLoop(Y),this.setAnimationLoop=function(z){X=z},this.dispose=function(){}}}function uT(r,e){function t(x,_){x.matrixAutoUpdate===!0&&x.updateMatrix(),_.value.copy(x.matrix)}function n(x,_){_.color.getRGB(x.fogColor.value,jv(r)),_.isFog?(x.fogNear.value=_.near,x.fogFar.value=_.far):_.isFogExp2&&(x.fogDensity.value=_.density)}function i(x,_,w,M,A){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(x,_):_.isMeshToonMaterial?(s(x,_),p(x,_)):_.isMeshPhongMaterial?(s(x,_),d(x,_)):_.isMeshStandardMaterial?(s(x,_),m(x,_),_.isMeshPhysicalMaterial&&v(x,_,A)):_.isMeshMatcapMaterial?(s(x,_),y(x,_)):_.isMeshDepthMaterial?s(x,_):_.isMeshDistanceMaterial?(s(x,_),E(x,_)):_.isMeshNormalMaterial?s(x,_):_.isLineBasicMaterial?(l(x,_),_.isLineDashedMaterial&&c(x,_)):_.isPointsMaterial?u(x,_,w,M):_.isSpriteMaterial?h(x,_):_.isShadowMaterial?(x.color.value.copy(_.color),x.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(x,_){x.opacity.value=_.opacity,_.color&&x.diffuse.value.copy(_.color),_.emissive&&x.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.bumpMap&&(x.bumpMap.value=_.bumpMap,t(_.bumpMap,x.bumpMapTransform),x.bumpScale.value=_.bumpScale,_.side===Un&&(x.bumpScale.value*=-1)),_.normalMap&&(x.normalMap.value=_.normalMap,t(_.normalMap,x.normalMapTransform),x.normalScale.value.copy(_.normalScale),_.side===Un&&x.normalScale.value.negate()),_.displacementMap&&(x.displacementMap.value=_.displacementMap,t(_.displacementMap,x.displacementMapTransform),x.displacementScale.value=_.displacementScale,x.displacementBias.value=_.displacementBias),_.emissiveMap&&(x.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,x.emissiveMapTransform)),_.specularMap&&(x.specularMap.value=_.specularMap,t(_.specularMap,x.specularMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);const w=e.get(_).envMap;if(w&&(x.envMap.value=w,x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=_.reflectivity,x.ior.value=_.ior,x.refractionRatio.value=_.refractionRatio),_.lightMap){x.lightMap.value=_.lightMap;const M=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=_.lightMapIntensity*M,t(_.lightMap,x.lightMapTransform)}_.aoMap&&(x.aoMap.value=_.aoMap,x.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,x.aoMapTransform))}function l(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform))}function c(x,_){x.dashSize.value=_.dashSize,x.totalSize.value=_.dashSize+_.gapSize,x.scale.value=_.scale}function u(x,_,w,M){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.size.value=_.size*w,x.scale.value=M*.5,_.map&&(x.map.value=_.map,t(_.map,x.uvTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function h(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.rotation.value=_.rotation,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function d(x,_){x.specular.value.copy(_.specular),x.shininess.value=Math.max(_.shininess,1e-4)}function p(x,_){_.gradientMap&&(x.gradientMap.value=_.gradientMap)}function m(x,_){x.metalness.value=_.metalness,_.metalnessMap&&(x.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,x.metalnessMapTransform)),x.roughness.value=_.roughness,_.roughnessMap&&(x.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,x.roughnessMapTransform)),e.get(_).envMap&&(x.envMapIntensity.value=_.envMapIntensity)}function v(x,_,w){x.ior.value=_.ior,_.sheen>0&&(x.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),x.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(x.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,x.sheenColorMapTransform)),_.sheenRoughnessMap&&(x.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,x.sheenRoughnessMapTransform))),_.clearcoat>0&&(x.clearcoat.value=_.clearcoat,x.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(x.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,x.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(x.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Un&&x.clearcoatNormalScale.value.negate())),_.iridescence>0&&(x.iridescence.value=_.iridescence,x.iridescenceIOR.value=_.iridescenceIOR,x.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(x.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,x.iridescenceMapTransform)),_.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),_.transmission>0&&(x.transmission.value=_.transmission,x.transmissionSamplerMap.value=w.texture,x.transmissionSamplerSize.value.set(w.width,w.height),_.transmissionMap&&(x.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,x.transmissionMapTransform)),x.thickness.value=_.thickness,_.thicknessMap&&(x.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=_.attenuationDistance,x.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(x.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(x.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=_.specularIntensity,x.specularColor.value.copy(_.specularColor),_.specularColorMap&&(x.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,x.specularColorMapTransform)),_.specularIntensityMap&&(x.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,_){_.matcap&&(x.matcap.value=_.matcap)}function E(x,_){const w=e.get(_).light;x.referencePosition.value.setFromMatrixPosition(w.matrixWorld),x.nearDistance.value=w.shadow.camera.near,x.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function hT(r,e,t,n){let i={},s={},l=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(w,M){const A=M.program;n.uniformBlockBinding(w,A)}function h(w,M){let A=i[w.id];A===void 0&&(y(w),A=d(w),i[w.id]=A,w.addEventListener("dispose",x));const R=M.program;n.updateUBOMapping(w,R);const P=e.render.frame;s[w.id]!==P&&(m(w),s[w.id]=P)}function d(w){const M=p();w.__bindingPointIndex=M;const A=r.createBuffer(),R=w.__size,P=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,A),r.bufferData(r.UNIFORM_BUFFER,R,P),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,M,A),A}function p(){for(let w=0;w<c;w++)if(l.indexOf(w)===-1)return l.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const M=i[w.id],A=w.uniforms,R=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,M);for(let P=0,U=A.length;P<U;P++){const F=A[P];if(v(F,P,R)===!0){const b=F.__offset,L=Array.isArray(F.value)?F.value:[F.value];let k=0;for(let $=0;$<L.length;$++){const ae=L[$],H=E(ae);typeof ae=="number"?(F.__data[0]=ae,r.bufferSubData(r.UNIFORM_BUFFER,b+k,F.__data)):ae.isMatrix3?(F.__data[0]=ae.elements[0],F.__data[1]=ae.elements[1],F.__data[2]=ae.elements[2],F.__data[3]=ae.elements[0],F.__data[4]=ae.elements[3],F.__data[5]=ae.elements[4],F.__data[6]=ae.elements[5],F.__data[7]=ae.elements[0],F.__data[8]=ae.elements[6],F.__data[9]=ae.elements[7],F.__data[10]=ae.elements[8],F.__data[11]=ae.elements[0]):(ae.toArray(F.__data,k),k+=H.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,b,F.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function v(w,M,A){const R=w.value;if(A[M]===void 0){if(typeof R=="number")A[M]=R;else{const P=Array.isArray(R)?R:[R],U=[];for(let F=0;F<P.length;F++)U.push(P[F].clone());A[M]=U}return!0}else if(typeof R=="number"){if(A[M]!==R)return A[M]=R,!0}else{const P=Array.isArray(A[M])?A[M]:[A[M]],U=Array.isArray(R)?R:[R];for(let F=0;F<P.length;F++){const b=P[F];if(b.equals(U[F])===!1)return b.copy(U[F]),!0}}return!1}function y(w){const M=w.uniforms;let A=0;const R=16;let P=0;for(let U=0,F=M.length;U<F;U++){const b=M[U],L={boundary:0,storage:0},k=Array.isArray(b.value)?b.value:[b.value];for(let $=0,ae=k.length;$<ae;$++){const H=k[$],K=E(H);L.boundary+=K.boundary,L.storage+=K.storage}if(b.__data=new Float32Array(L.storage/Float32Array.BYTES_PER_ELEMENT),b.__offset=A,U>0){P=A%R;const $=R-P;P!==0&&$-L.boundary<0&&(A+=R-P,b.__offset=A)}A+=L.storage}return P=A%R,P>0&&(A+=R-P),w.__size=A,w.__cache={},this}function E(w){const M={boundary:0,storage:0};return typeof w=="number"?(M.boundary=4,M.storage=4):w.isVector2?(M.boundary=8,M.storage=8):w.isVector3||w.isColor?(M.boundary=16,M.storage=12):w.isVector4?(M.boundary=16,M.storage=16):w.isMatrix3?(M.boundary=48,M.storage=48):w.isMatrix4?(M.boundary=64,M.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),M}function x(w){const M=w.target;M.removeEventListener("dispose",x);const A=l.indexOf(M.__bindingPointIndex);l.splice(A,1),r.deleteBuffer(i[M.id]),delete i[M.id],delete s[M.id]}function _(){for(const w in i)r.deleteBuffer(i[w]);l=[],i={},s={}}return{bind:u,update:h,dispose:_}}class kd{constructor(e={}){const{canvas:t=Yv(),context:n=null,depth:i=!0,stencil:s=!0,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=l;const v=new Uint32Array(4),y=new Int32Array(4);let E=null,x=null;const _=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=sn,this._useLegacyLights=!1,this.toneMapping=Ni,this.toneMappingExposure=1;const M=this;let A=!1,R=0,P=0,U=null,F=-1,b=null;const L=new Lt,k=new Lt;let $=null;const ae=new Ue(0);let H=0,K=t.width,se=t.height,oe=1,X=null,Y=null;const Z=new Lt(0,0,K,se),z=new Lt(0,0,K,se);let j=!1;const fe=new ru;let we=!1,Ae=!1,ke=null;const qe=new lt,Je=new ue,it=new D,_t={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Be(){return U===null?oe:1}let B=n;function pe(I,q){for(let ee=0;ee<I.length;ee++){const ne=I[ee],ie=t.getContext(ne,q);if(ie!==null)return ie}return null}try{const I={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Fa}`),t.addEventListener("webglcontextlost",xt,!1),t.addEventListener("webglcontextrestored",V,!1),t.addEventListener("webglcontextcreationerror",Ce,!1),B===null){const q=["webgl2","webgl","experimental-webgl"];if(M.isWebGL1Renderer===!0&&q.shift(),B=pe(q,I),B===null)throw pe(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&B instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),B.getShaderPrecisionFormat===void 0&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let ce,me,he,Xe,Le,Oe,Qe,vt,zt,O,C,Q,ge,de,ve,He,Me,Re,nt,Mt,ye,Ct,at,et;function Ze(){ce=new AE(B),me=new xE(B,ce,e),ce.init(me),Ct=new s_(B,ce,me),he=new oT(B,ce,me),Xe=new CE(B),Le=new Zw,Oe=new aT(B,ce,he,Le,me,Ct,Xe),Qe=new ME(M),vt=new TE(M),zt=new BS(B,me),at=new _E(B,ce,zt,me),O=new bE(B,zt,Xe,at),C=new UE(B,O,zt,Xe),nt=new IE(B,me,Oe),He=new SE(Le),Q=new Yw(M,Qe,vt,ce,me,at,He),ge=new uT(M,Le),de=new jw,ve=new nT(ce,me),Re=new vE(M,Qe,vt,he,C,m,u),Me=new sT(M,C,me),et=new hT(B,Xe,me,he),Mt=new yE(B,ce,Xe,me),ye=new RE(B,ce,Xe,me),Xe.programs=Q.programs,M.capabilities=me,M.extensions=ce,M.properties=Le,M.renderLists=de,M.shadowMap=Me,M.state=he,M.info=Xe}Ze();const De=new cT(M,B);this.xr=De,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const I=ce.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=ce.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return oe},this.setPixelRatio=function(I){I!==void 0&&(oe=I,this.setSize(K,se,!1))},this.getSize=function(I){return I.set(K,se)},this.setSize=function(I,q,ee=!0){if(De.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}K=I,se=q,t.width=Math.floor(I*oe),t.height=Math.floor(q*oe),ee===!0&&(t.style.width=I+"px",t.style.height=q+"px"),this.setViewport(0,0,I,q)},this.getDrawingBufferSize=function(I){return I.set(K*oe,se*oe).floor()},this.setDrawingBufferSize=function(I,q,ee){K=I,se=q,oe=ee,t.width=Math.floor(I*ee),t.height=Math.floor(q*ee),this.setViewport(0,0,I,q)},this.getCurrentViewport=function(I){return I.copy(L)},this.getViewport=function(I){return I.copy(Z)},this.setViewport=function(I,q,ee,ne){I.isVector4?Z.set(I.x,I.y,I.z,I.w):Z.set(I,q,ee,ne),he.viewport(L.copy(Z).multiplyScalar(oe).floor())},this.getScissor=function(I){return I.copy(z)},this.setScissor=function(I,q,ee,ne){I.isVector4?z.set(I.x,I.y,I.z,I.w):z.set(I,q,ee,ne),he.scissor(k.copy(z).multiplyScalar(oe).floor())},this.getScissorTest=function(){return j},this.setScissorTest=function(I){he.setScissorTest(j=I)},this.setOpaqueSort=function(I){X=I},this.setTransparentSort=function(I){Y=I},this.getClearColor=function(I){return I.copy(Re.getClearColor())},this.setClearColor=function(){Re.setClearColor.apply(Re,arguments)},this.getClearAlpha=function(){return Re.getClearAlpha()},this.setClearAlpha=function(){Re.setClearAlpha.apply(Re,arguments)},this.clear=function(I=!0,q=!0,ee=!0){let ne=0;if(I){let ie=!1;if(U!==null){const Ie=U.texture.format;ie=Ie===Cd||Ie===Rd||Ie===bd}if(ie){const Ie=U.texture.type,Ge=Ie===Oi||Ie===tr||Ie===eu||Ie===Tr||Ie===Td||Ie===Ad,Ke=Re.getClearColor(),$e=Re.getClearAlpha(),st=Ke.r,rt=Ke.g,ot=Ke.b;Ge?(v[0]=st,v[1]=rt,v[2]=ot,v[3]=$e,B.clearBufferuiv(B.COLOR,0,v)):(y[0]=st,y[1]=rt,y[2]=ot,y[3]=$e,B.clearBufferiv(B.COLOR,0,y))}else ne|=B.COLOR_BUFFER_BIT}q&&(ne|=B.DEPTH_BUFFER_BIT),ee&&(ne|=B.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),B.clear(ne)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",xt,!1),t.removeEventListener("webglcontextrestored",V,!1),t.removeEventListener("webglcontextcreationerror",Ce,!1),de.dispose(),ve.dispose(),Le.dispose(),Qe.dispose(),vt.dispose(),C.dispose(),at.dispose(),et.dispose(),Q.dispose(),De.dispose(),De.removeEventListener("sessionstart",Rn),De.removeEventListener("sessionend",It),ke&&(ke.dispose(),ke=null),gn.stop()};function xt(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function V(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const I=Xe.autoReset,q=Me.enabled,ee=Me.autoUpdate,ne=Me.needsUpdate,ie=Me.type;Ze(),Xe.autoReset=I,Me.enabled=q,Me.autoUpdate=ee,Me.needsUpdate=ne,Me.type=ie}function Ce(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function xe(I){const q=I.target;q.removeEventListener("dispose",xe),le(q)}function le(I){Ee(I),Le.remove(I)}function Ee(I){const q=Le.get(I).programs;q!==void 0&&(q.forEach(function(ee){Q.releaseProgram(ee)}),I.isShaderMaterial&&Q.releaseShaderCache(I))}this.renderBufferDirect=function(I,q,ee,ne,ie,Ie){q===null&&(q=_t);const Ge=ie.isMesh&&ie.matrixWorld.determinant()<0,Ke=Ru(I,q,ee,ne,ie);he.setMaterial(ne,Ge);let $e=ee.index,st=1;if(ne.wireframe===!0){if($e=O.getWireframeAttribute(ee),$e===void 0)return;st=2}const rt=ee.drawRange,ot=ee.attributes.position;let Ht=rt.start*st,vn=(rt.start+rt.count)*st;Ie!==null&&(Ht=Math.max(Ht,Ie.start*st),vn=Math.min(vn,(Ie.start+Ie.count)*st)),$e!==null?(Ht=Math.max(Ht,0),vn=Math.min(vn,$e.count)):ot!=null&&(Ht=Math.max(Ht,0),vn=Math.min(vn,ot.count));const Ot=vn-Ht;if(Ot<0||Ot===1/0)return;at.setup(ie,ne,Ke,ee,$e);let ln,tt=Mt;if($e!==null&&(ln=zt.get($e),tt=ye,tt.setIndex(ln)),ie.isMesh)ne.wireframe===!0?(he.setLineWidth(ne.wireframeLinewidth*Be()),tt.setMode(B.LINES)):tt.setMode(B.TRIANGLES);else if(ie.isLine){let Fe=ne.linewidth;Fe===void 0&&(Fe=1),he.setLineWidth(Fe*Be()),ie.isLineSegments?tt.setMode(B.LINES):ie.isLineLoop?tt.setMode(B.LINE_LOOP):tt.setMode(B.LINE_STRIP)}else ie.isPoints?tt.setMode(B.POINTS):ie.isSprite&&tt.setMode(B.TRIANGLES);if(ie.isInstancedMesh)tt.renderInstances(Ht,Ot,ie.count);else if(ee.isInstancedBufferGeometry){const Fe=ee._maxInstanceCount!==void 0?ee._maxInstanceCount:1/0,ei=Math.min(ee.instanceCount,Fe);tt.renderInstances(Ht,Ot,ei)}else tt.render(Ht,Ot)};function je(I,q,ee){I.transparent===!0&&I.side===Ii&&I.forceSinglePass===!1?(I.side=Un,I.needsUpdate=!0,Ss(I,q,ee),I.side=ir,I.needsUpdate=!0,Ss(I,q,ee),I.side=Ii):Ss(I,q,ee)}this.compile=function(I,q,ee=null){ee===null&&(ee=I),x=ve.get(ee),x.init(),w.push(x),ee.traverseVisible(function(ie){ie.isLight&&ie.layers.test(q.layers)&&(x.pushLight(ie),ie.castShadow&&x.pushShadow(ie))}),I!==ee&&I.traverseVisible(function(ie){ie.isLight&&ie.layers.test(q.layers)&&(x.pushLight(ie),ie.castShadow&&x.pushShadow(ie))}),x.setupLights(M._useLegacyLights);const ne=new Set;return I.traverse(function(ie){const Ie=ie.material;if(Ie)if(Array.isArray(Ie))for(let Ge=0;Ge<Ie.length;Ge++){const Ke=Ie[Ge];je(Ke,ee,ie),ne.add(Ke)}else je(Ie,ee,ie),ne.add(Ie)}),w.pop(),x=null,ne},this.compileAsync=function(I,q,ee=null){const ne=this.compile(I,q,ee);return new Promise(ie=>{function Ie(){if(ne.forEach(function(Ge){Le.get(Ge).currentProgram.isReady()&&ne.delete(Ge)}),ne.size===0){ie(I);return}setTimeout(Ie,10)}ce.get("KHR_parallel_shader_compile")!==null?Ie():setTimeout(Ie,10)})};let St=null;function kt(I){St&&St(I)}function Rn(){gn.stop()}function It(){gn.start()}const gn=new e_;gn.setAnimationLoop(kt),typeof self<"u"&&gn.setContext(self),this.setAnimationLoop=function(I){St=I,De.setAnimationLoop(I),I===null?gn.stop():gn.start()},De.addEventListener("sessionstart",Rn),De.addEventListener("sessionend",It),this.render=function(I,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),De.enabled===!0&&De.isPresenting===!0&&(De.cameraAutoUpdate===!0&&De.updateCamera(q),q=De.getCamera()),I.isScene===!0&&I.onBeforeRender(M,I,q,U),x=ve.get(I,w.length),x.init(),w.push(x),qe.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),fe.setFromProjectionMatrix(qe),Ae=this.localClippingEnabled,we=He.init(this.clippingPlanes,Ae),E=de.get(I,_.length),E.init(),_.push(E),$n(I,q,0,M.sortObjects),E.finish(),M.sortObjects===!0&&E.sort(X,Y),this.info.render.frame++,we===!0&&He.beginShadows();const ee=x.state.shadowsArray;if(Me.render(ee,I,q),we===!0&&He.endShadows(),this.info.autoReset===!0&&this.info.reset(),Re.render(E,I),x.setupLights(M._useLegacyLights),q.isArrayCamera){const ne=q.cameras;for(let ie=0,Ie=ne.length;ie<Ie;ie++){const Ge=ne[ie];Ao(E,I,Ge,Ge.viewport)}}else Ao(E,I,q);U!==null&&(Oe.updateMultisampleRenderTarget(U),Oe.updateRenderTargetMipmap(U)),I.isScene===!0&&I.onAfterRender(M,I,q),at.resetDefaultState(),F=-1,b=null,w.pop(),w.length>0?x=w[w.length-1]:x=null,_.pop(),_.length>0?E=_[_.length-1]:E=null};function $n(I,q,ee,ne){if(I.visible===!1)return;if(I.layers.test(q.layers)){if(I.isGroup)ee=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(q);else if(I.isLight)x.pushLight(I),I.castShadow&&x.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||fe.intersectsSprite(I)){ne&&it.setFromMatrixPosition(I.matrixWorld).applyMatrix4(qe);const Ge=C.update(I),Ke=I.material;Ke.visible&&E.push(I,Ge,Ke,ee,it.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||fe.intersectsObject(I))){const Ge=C.update(I),Ke=I.material;if(ne&&(I.boundingSphere!==void 0?(I.boundingSphere===null&&I.computeBoundingSphere(),it.copy(I.boundingSphere.center)):(Ge.boundingSphere===null&&Ge.computeBoundingSphere(),it.copy(Ge.boundingSphere.center)),it.applyMatrix4(I.matrixWorld).applyMatrix4(qe)),Array.isArray(Ke)){const $e=Ge.groups;for(let st=0,rt=$e.length;st<rt;st++){const ot=$e[st],Ht=Ke[ot.materialIndex];Ht&&Ht.visible&&E.push(I,Ge,Ht,ee,it.z,ot)}}else Ke.visible&&E.push(I,Ge,Ke,ee,it.z,null)}}const Ie=I.children;for(let Ge=0,Ke=Ie.length;Ge<Ke;Ge++)$n(Ie[Ge],q,ee,ne)}function Ao(I,q,ee,ne){const ie=I.opaque,Ie=I.transmissive,Ge=I.transparent;x.setupLightsView(ee),we===!0&&He.setGlobalState(M.clippingPlanes,ee),Ie.length>0&&bo(ie,Ie,q,ee),ne&&he.viewport(L.copy(ne)),ie.length>0&&xs(ie,q,ee),Ie.length>0&&xs(Ie,q,ee),Ge.length>0&&xs(Ge,q,ee),he.buffers.depth.setTest(!0),he.buffers.depth.setMask(!0),he.buffers.color.setMask(!0),he.setPolygonOffset(!1)}function bo(I,q,ee,ne){if((ee.isScene===!0?ee.overrideMaterial:null)!==null)return;const Ie=me.isWebGL2;ke===null&&(ke=new yi(1,1,{generateMipmaps:!0,type:ce.has("EXT_color_buffer_half_float")?go:Oi,minFilter:Cr,samples:Ie?4:0})),M.getDrawingBufferSize(Je),Ie?ke.setSize(Je.x,Je.y):ke.setSize(Jc(Je.x),Jc(Je.y));const Ge=M.getRenderTarget();M.setRenderTarget(ke),M.getClearColor(ae),H=M.getClearAlpha(),H<1&&M.setClearColor(16777215,.5),M.clear();const Ke=M.toneMapping;M.toneMapping=Ni,xs(I,ee,ne),Oe.updateMultisampleRenderTarget(ke),Oe.updateRenderTargetMipmap(ke);let $e=!1;for(let st=0,rt=q.length;st<rt;st++){const ot=q[st],Ht=ot.object,vn=ot.geometry,Ot=ot.material,ln=ot.group;if(Ot.side===Ii&&Ht.layers.test(ne.layers)){const tt=Ot.side;Ot.side=Un,Ot.needsUpdate=!0,ar(Ht,ee,ne,vn,Ot,ln),Ot.side=tt,Ot.needsUpdate=!0,$e=!0}}$e===!0&&(Oe.updateMultisampleRenderTarget(ke),Oe.updateRenderTargetMipmap(ke)),M.setRenderTarget(Ge),M.setClearColor(ae,H),M.toneMapping=Ke}function xs(I,q,ee){const ne=q.isScene===!0?q.overrideMaterial:null;for(let ie=0,Ie=I.length;ie<Ie;ie++){const Ge=I[ie],Ke=Ge.object,$e=Ge.geometry,st=ne===null?Ge.material:ne,rt=Ge.group;Ke.layers.test(ee.layers)&&ar(Ke,q,ee,$e,st,rt)}}function ar(I,q,ee,ne,ie,Ie){I.onBeforeRender(M,q,ee,ne,ie,Ie),I.modelViewMatrix.multiplyMatrices(ee.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),ie.onBeforeRender(M,q,ee,ne,I,Ie),ie.transparent===!0&&ie.side===Ii&&ie.forceSinglePass===!1?(ie.side=Un,ie.needsUpdate=!0,M.renderBufferDirect(ee,q,ne,ie,I,Ie),ie.side=ir,ie.needsUpdate=!0,M.renderBufferDirect(ee,q,ne,ie,I,Ie),ie.side=Ii):M.renderBufferDirect(ee,q,ne,ie,I,Ie),I.onAfterRender(M,q,ee,ne,ie,Ie)}function Ss(I,q,ee){q.isScene!==!0&&(q=_t);const ne=Le.get(I),ie=x.state.lights,Ie=x.state.shadowsArray,Ge=ie.state.version,Ke=Q.getParameters(I,ie.state,Ie,q,ee),$e=Q.getProgramCacheKey(Ke);let st=ne.programs;ne.environment=I.isMeshStandardMaterial?q.environment:null,ne.fog=q.fog,ne.envMap=(I.isMeshStandardMaterial?vt:Qe).get(I.envMap||ne.environment),st===void 0&&(I.addEventListener("dispose",xe),st=new Map,ne.programs=st);let rt=st.get($e);if(rt!==void 0){if(ne.currentProgram===rt&&ne.lightsStateVersion===Ge)return Ka(I,Ke),rt}else Ke.uniforms=Q.getUniforms(I),I.onBuild(ee,Ke,M),I.onBeforeCompile(Ke,M),rt=Q.acquireProgram(Ke,$e),st.set($e,rt),ne.uniforms=Ke.uniforms;const ot=ne.uniforms;return(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(ot.clippingPlanes=He.uniform),Ka(I,Ke),ne.needsLights=Pu(I),ne.lightsStateVersion=Ge,ne.needsLights&&(ot.ambientLightColor.value=ie.state.ambient,ot.lightProbe.value=ie.state.probe,ot.directionalLights.value=ie.state.directional,ot.directionalLightShadows.value=ie.state.directionalShadow,ot.spotLights.value=ie.state.spot,ot.spotLightShadows.value=ie.state.spotShadow,ot.rectAreaLights.value=ie.state.rectArea,ot.ltc_1.value=ie.state.rectAreaLTC1,ot.ltc_2.value=ie.state.rectAreaLTC2,ot.pointLights.value=ie.state.point,ot.pointLightShadows.value=ie.state.pointShadow,ot.hemisphereLights.value=ie.state.hemi,ot.directionalShadowMap.value=ie.state.directionalShadowMap,ot.directionalShadowMatrix.value=ie.state.directionalShadowMatrix,ot.spotShadowMap.value=ie.state.spotShadowMap,ot.spotLightMatrix.value=ie.state.spotLightMatrix,ot.spotLightMap.value=ie.state.spotLightMap,ot.pointShadowMap.value=ie.state.pointShadowMap,ot.pointShadowMatrix.value=ie.state.pointShadowMatrix),ne.currentProgram=rt,ne.uniformsList=null,rt}function ja(I){if(I.uniformsList===null){const q=I.currentProgram.getUniforms();I.uniformsList=Gc.seqWithValue(q.seq,I.uniforms)}return I.uniformsList}function Ka(I,q){const ee=Le.get(I);ee.outputColorSpace=q.outputColorSpace,ee.instancing=q.instancing,ee.instancingColor=q.instancingColor,ee.skinning=q.skinning,ee.morphTargets=q.morphTargets,ee.morphNormals=q.morphNormals,ee.morphColors=q.morphColors,ee.morphTargetsCount=q.morphTargetsCount,ee.numClippingPlanes=q.numClippingPlanes,ee.numIntersection=q.numClipIntersection,ee.vertexAlphas=q.vertexAlphas,ee.vertexTangents=q.vertexTangents,ee.toneMapping=q.toneMapping}function Ru(I,q,ee,ne,ie){q.isScene!==!0&&(q=_t),Oe.resetTextureUnits();const Ie=q.fog,Ge=ne.isMeshStandardMaterial?q.environment:null,Ke=U===null?M.outputColorSpace:U.isXRRenderTarget===!0?U.texture.colorSpace:zi,$e=(ne.isMeshStandardMaterial?vt:Qe).get(ne.envMap||Ge),st=ne.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,rt=!!ee.attributes.tangent&&(!!ne.normalMap||ne.anisotropy>0),ot=!!ee.morphAttributes.position,Ht=!!ee.morphAttributes.normal,vn=!!ee.morphAttributes.color;let Ot=Ni;ne.toneMapped&&(U===null||U.isXRRenderTarget===!0)&&(Ot=M.toneMapping);const ln=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,tt=ln!==void 0?ln.length:0,Fe=Le.get(ne),ei=x.state.lights;if(we===!0&&(Ae===!0||I!==b)){const un=I===b&&ne.id===F;He.setState(ne,I,un)}let yt=!1;ne.version===Fe.__version?(Fe.needsLights&&Fe.lightsStateVersion!==ei.state.version||Fe.outputColorSpace!==Ke||ie.isInstancedMesh&&Fe.instancing===!1||!ie.isInstancedMesh&&Fe.instancing===!0||ie.isSkinnedMesh&&Fe.skinning===!1||!ie.isSkinnedMesh&&Fe.skinning===!0||ie.isInstancedMesh&&Fe.instancingColor===!0&&ie.instanceColor===null||ie.isInstancedMesh&&Fe.instancingColor===!1&&ie.instanceColor!==null||Fe.envMap!==$e||ne.fog===!0&&Fe.fog!==Ie||Fe.numClippingPlanes!==void 0&&(Fe.numClippingPlanes!==He.numPlanes||Fe.numIntersection!==He.numIntersection)||Fe.vertexAlphas!==st||Fe.vertexTangents!==rt||Fe.morphTargets!==ot||Fe.morphNormals!==Ht||Fe.morphColors!==vn||Fe.toneMapping!==Ot||me.isWebGL2===!0&&Fe.morphTargetsCount!==tt)&&(yt=!0):(yt=!0,Fe.__version=ne.version);let Wt=Fe.currentProgram;yt===!0&&(Wt=Ss(ne,q,ie));let Ei=!1,ti=!1,cn=!1;const $t=Wt.getUniforms(),wi=Fe.uniforms;if(he.useProgram(Wt.program)&&(Ei=!0,ti=!0,cn=!0),ne.id!==F&&(F=ne.id,ti=!0),Ei||b!==I){$t.setValue(B,"projectionMatrix",I.projectionMatrix),$t.setValue(B,"viewMatrix",I.matrixWorldInverse);const un=$t.map.cameraPosition;un!==void 0&&un.setValue(B,it.setFromMatrixPosition(I.matrixWorld)),me.logarithmicDepthBuffer&&$t.setValue(B,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),(ne.isMeshPhongMaterial||ne.isMeshToonMaterial||ne.isMeshLambertMaterial||ne.isMeshBasicMaterial||ne.isMeshStandardMaterial||ne.isShaderMaterial)&&$t.setValue(B,"isOrthographic",I.isOrthographicCamera===!0),b!==I&&(b=I,ti=!0,cn=!0)}if(ie.isSkinnedMesh){$t.setOptional(B,ie,"bindMatrix"),$t.setOptional(B,ie,"bindMatrixInverse");const un=ie.skeleton;un&&(me.floatVertexTextures?(un.boneTexture===null&&un.computeBoneTexture(),$t.setValue(B,"boneTexture",un.boneTexture,Oe),$t.setValue(B,"boneTextureSize",un.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Ms=ee.morphAttributes;if((Ms.position!==void 0||Ms.normal!==void 0||Ms.color!==void 0&&me.isWebGL2===!0)&&nt.update(ie,ee,Wt),(ti||Fe.receiveShadow!==ie.receiveShadow)&&(Fe.receiveShadow=ie.receiveShadow,$t.setValue(B,"receiveShadow",ie.receiveShadow)),ne.isMeshGouraudMaterial&&ne.envMap!==null&&(wi.envMap.value=$e,wi.flipEnvMap.value=$e.isCubeTexture&&$e.isRenderTargetTexture===!1?-1:1),ti&&($t.setValue(B,"toneMappingExposure",M.toneMappingExposure),Fe.needsLights&&Cu(wi,cn),Ie&&ne.fog===!0&&ge.refreshFogUniforms(wi,Ie),ge.refreshMaterialUniforms(wi,ne,oe,se,ke),Gc.upload(B,ja(Fe),wi,Oe)),ne.isShaderMaterial&&ne.uniformsNeedUpdate===!0&&(Gc.upload(B,ja(Fe),wi,Oe),ne.uniformsNeedUpdate=!1),ne.isSpriteMaterial&&$t.setValue(B,"center",ie.center),$t.setValue(B,"modelViewMatrix",ie.modelViewMatrix),$t.setValue(B,"normalMatrix",ie.normalMatrix),$t.setValue(B,"modelMatrix",ie.matrixWorld),ne.isShaderMaterial||ne.isRawShaderMaterial){const un=ne.uniformsGroups;for(let Es=0,Wn=un.length;Es<Wn;Es++)if(me.isWebGL2){const Qa=un[Es];et.update(Qa,Wt),et.bind(Qa,Wt)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Wt}function Cu(I,q){I.ambientLightColor.needsUpdate=q,I.lightProbe.needsUpdate=q,I.directionalLights.needsUpdate=q,I.directionalLightShadows.needsUpdate=q,I.pointLights.needsUpdate=q,I.pointLightShadows.needsUpdate=q,I.spotLights.needsUpdate=q,I.spotLightShadows.needsUpdate=q,I.rectAreaLights.needsUpdate=q,I.hemisphereLights.needsUpdate=q}function Pu(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return U},this.setRenderTargetTextures=function(I,q,ee){Le.get(I.texture).__webglTexture=q,Le.get(I.depthTexture).__webglTexture=ee;const ne=Le.get(I);ne.__hasExternalTextures=!0,ne.__hasExternalTextures&&(ne.__autoAllocateDepthBuffer=ee===void 0,ne.__autoAllocateDepthBuffer||ce.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ne.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(I,q){const ee=Le.get(I);ee.__webglFramebuffer=q,ee.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(I,q=0,ee=0){U=I,R=q,P=ee;let ne=!0,ie=null,Ie=!1,Ge=!1;if(I){const $e=Le.get(I);$e.__useDefaultFramebuffer!==void 0?(he.bindFramebuffer(B.FRAMEBUFFER,null),ne=!1):$e.__webglFramebuffer===void 0?Oe.setupRenderTarget(I):$e.__hasExternalTextures&&Oe.rebindTextures(I,Le.get(I.texture).__webglTexture,Le.get(I.depthTexture).__webglTexture);const st=I.texture;(st.isData3DTexture||st.isDataArrayTexture||st.isCompressedArrayTexture)&&(Ge=!0);const rt=Le.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(Array.isArray(rt[q])?ie=rt[q][ee]:ie=rt[q],Ie=!0):me.isWebGL2&&I.samples>0&&Oe.useMultisampledRTT(I)===!1?ie=Le.get(I).__webglMultisampledFramebuffer:Array.isArray(rt)?ie=rt[ee]:ie=rt,L.copy(I.viewport),k.copy(I.scissor),$=I.scissorTest}else L.copy(Z).multiplyScalar(oe).floor(),k.copy(z).multiplyScalar(oe).floor(),$=j;if(he.bindFramebuffer(B.FRAMEBUFFER,ie)&&me.drawBuffers&&ne&&he.drawBuffers(I,ie),he.viewport(L),he.scissor(k),he.setScissorTest($),Ie){const $e=Le.get(I.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+q,$e.__webglTexture,ee)}else if(Ge){const $e=Le.get(I.texture),st=q||0;B.framebufferTextureLayer(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,$e.__webglTexture,ee||0,st)}F=-1},this.readRenderTargetPixels=function(I,q,ee,ne,ie,Ie,Ge){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ke=Le.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Ge!==void 0&&(Ke=Ke[Ge]),Ke){he.bindFramebuffer(B.FRAMEBUFFER,Ke);try{const $e=I.texture,st=$e.format,rt=$e.type;if(st!==kn&&Ct.convert(st)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ot=rt===go&&(ce.has("EXT_color_buffer_half_float")||me.isWebGL2&&ce.has("EXT_color_buffer_float"));if(rt!==Oi&&Ct.convert(rt)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_TYPE)&&!(rt===Ui&&(me.isWebGL2||ce.has("OES_texture_float")||ce.has("WEBGL_color_buffer_float")))&&!ot){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=I.width-ne&&ee>=0&&ee<=I.height-ie&&B.readPixels(q,ee,ne,ie,Ct.convert(st),Ct.convert(rt),Ie)}finally{const $e=U!==null?Le.get(U).__webglFramebuffer:null;he.bindFramebuffer(B.FRAMEBUFFER,$e)}}},this.copyFramebufferToTexture=function(I,q,ee=0){const ne=Math.pow(2,-ee),ie=Math.floor(q.image.width*ne),Ie=Math.floor(q.image.height*ne);Oe.setTexture2D(q,0),B.copyTexSubImage2D(B.TEXTURE_2D,ee,0,0,I.x,I.y,ie,Ie),he.unbindTexture()},this.copyTextureToTexture=function(I,q,ee,ne=0){const ie=q.image.width,Ie=q.image.height,Ge=Ct.convert(ee.format),Ke=Ct.convert(ee.type);Oe.setTexture2D(ee,0),B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,ee.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,ee.unpackAlignment),q.isDataTexture?B.texSubImage2D(B.TEXTURE_2D,ne,I.x,I.y,ie,Ie,Ge,Ke,q.image.data):q.isCompressedTexture?B.compressedTexSubImage2D(B.TEXTURE_2D,ne,I.x,I.y,q.mipmaps[0].width,q.mipmaps[0].height,Ge,q.mipmaps[0].data):B.texSubImage2D(B.TEXTURE_2D,ne,I.x,I.y,Ge,Ke,q.image),ne===0&&ee.generateMipmaps&&B.generateMipmap(B.TEXTURE_2D),he.unbindTexture()},this.copyTextureToTexture3D=function(I,q,ee,ne,ie=0){if(M.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ie=I.max.x-I.min.x+1,Ge=I.max.y-I.min.y+1,Ke=I.max.z-I.min.z+1,$e=Ct.convert(ne.format),st=Ct.convert(ne.type);let rt;if(ne.isData3DTexture)Oe.setTexture3D(ne,0),rt=B.TEXTURE_3D;else if(ne.isDataArrayTexture)Oe.setTexture2DArray(ne,0),rt=B.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,ne.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ne.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,ne.unpackAlignment);const ot=B.getParameter(B.UNPACK_ROW_LENGTH),Ht=B.getParameter(B.UNPACK_IMAGE_HEIGHT),vn=B.getParameter(B.UNPACK_SKIP_PIXELS),Ot=B.getParameter(B.UNPACK_SKIP_ROWS),ln=B.getParameter(B.UNPACK_SKIP_IMAGES),tt=ee.isCompressedTexture?ee.mipmaps[0]:ee.image;B.pixelStorei(B.UNPACK_ROW_LENGTH,tt.width),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,tt.height),B.pixelStorei(B.UNPACK_SKIP_PIXELS,I.min.x),B.pixelStorei(B.UNPACK_SKIP_ROWS,I.min.y),B.pixelStorei(B.UNPACK_SKIP_IMAGES,I.min.z),ee.isDataTexture||ee.isData3DTexture?B.texSubImage3D(rt,ie,q.x,q.y,q.z,Ie,Ge,Ke,$e,st,tt.data):ee.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),B.compressedTexSubImage3D(rt,ie,q.x,q.y,q.z,Ie,Ge,Ke,$e,tt.data)):B.texSubImage3D(rt,ie,q.x,q.y,q.z,Ie,Ge,Ke,$e,st,tt),B.pixelStorei(B.UNPACK_ROW_LENGTH,ot),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Ht),B.pixelStorei(B.UNPACK_SKIP_PIXELS,vn),B.pixelStorei(B.UNPACK_SKIP_ROWS,Ot),B.pixelStorei(B.UNPACK_SKIP_IMAGES,ln),ie===0&&ne.generateMipmaps&&B.generateMipmap(rt),he.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?Oe.setTextureCube(I,0):I.isData3DTexture?Oe.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?Oe.setTexture2DArray(I,0):Oe.setTexture2D(I,0),he.unbindTexture()},this.resetState=function(){R=0,P=0,U=null,he.reset(),at.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Di}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===nu?"display-p3":"srgb",t.unpackColorSpace=Pt.workingColorSpace===Ba?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===sn?br:Ld}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===br?sn:zi}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class l_ extends kd{}l_.prototype.isWebGL1Renderer=!0;class ou{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ue(e),this.density=t}clone(){return new ou(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class au{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ue(e),this.near=t,this.far=n}clone(){return new au(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let Hd=class extends Rt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}};class lu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Aa,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Qn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Qn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Qn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ln=new D;class ds{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.applyMatrix4(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.applyNormalMatrix(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.transformDirection(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}setX(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Hn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Hn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Hn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Hn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array),s=ft(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Dt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ds(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Vd extends bn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ue(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Ks;const Ko=new D,Qs=new D,$s=new D,eo=new ue,Qo=new ue,c_=new lt,dc=new D,$o=new D,pc=new D,wg=new ue,sf=new ue,Tg=new ue;class u_ extends Rt{constructor(e=new Vd){if(super(),this.isSprite=!0,this.type="Sprite",Ks===void 0){Ks=new gt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new lu(t,5);Ks.setIndex([0,1,2,0,2,3]),Ks.setAttribute("position",new ds(n,3,0,!1)),Ks.setAttribute("uv",new ds(n,2,3,!1))}this.geometry=Ks,this.material=e,this.center=new ue(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Qs.setFromMatrixScale(this.matrixWorld),c_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),$s.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Qs.multiplyScalar(-$s.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;mc(dc.set(-.5,-.5,0),$s,l,Qs,i,s),mc($o.set(.5,-.5,0),$s,l,Qs,i,s),mc(pc.set(.5,.5,0),$s,l,Qs,i,s),wg.set(0,0),sf.set(1,0),Tg.set(1,1);let c=e.ray.intersectTriangle(dc,$o,pc,!1,Ko);if(c===null&&(mc($o.set(-.5,.5,0),$s,l,Qs,i,s),sf.set(0,1),c=e.ray.intersectTriangle(dc,pc,$o,!1,Ko),c===null))return;const u=e.ray.origin.distanceTo(Ko);u<e.near||u>e.far||t.push({distance:u,point:Ko.clone(),uv:Bn.getInterpolation(Ko,dc,$o,pc,wg,sf,Tg,new ue),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function mc(r,e,t,n,i,s){eo.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Qo.x=s*eo.x-i*eo.y,Qo.y=i*eo.x+s*eo.y):Qo.copy(eo),r.copy(e),r.x+=Qo.x,r.y+=Qo.y,r.applyMatrix4(c_)}const gc=new D,Ag=new D;class h_ extends Rt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){gc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(gc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){gc.setFromMatrixPosition(e.matrixWorld),Ag.setFromMatrixPosition(this.matrixWorld);const n=gc.distanceTo(Ag)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const bg=new D,Rg=new Lt,Cg=new Lt,fT=new D,Pg=new lt,vc=new D,of=new xi,Lg=new lt,af=new Mo;class f_ extends yn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Ff,this.bindMatrix=new lt,this.bindMatrixInverse=new lt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new ki),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,vc),this.boundingBox.expandByPoint(vc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new xi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,vc),this.boundingSphere.expandByPoint(vc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),of.copy(this.boundingSphere),of.applyMatrix4(i),e.ray.intersectsSphere(of)!==!1&&(Lg.copy(i).invert(),af.copy(e.ray).applyMatrix4(Lg),!(this.boundingBox!==null&&af.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,af)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Lt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Ff?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Sv?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Rg.fromBufferAttribute(i.attributes.skinIndex,e),Cg.fromBufferAttribute(i.attributes.skinWeight,e),bg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=Cg.getComponent(s);if(l!==0){const c=Rg.getComponent(s);Pg.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(fT.copy(bg).applyMatrix4(Pg),l)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Gd extends Rt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class po extends Qt{constructor(e=null,t=1,n=1,i,s,l,c,u,h=jt,d=jt,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Ig=new lt,dT=new lt;class cu{constructor(e=[],t=[]){this.uuid=Qn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new lt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new lt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:dT;Ig.multiplyMatrices(c,t[s]),Ig.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new cu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Xv(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new po(t,e,e,kn,Ui);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new Gd),this.bones.push(l),this.boneInverses.push(new lt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class yo extends Dt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const to=new lt,Ug=new lt,_c=[],Dg=new ki,pT=new lt,ea=new yn,ta=new xi;class d_ extends yn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new yo(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,pT)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new ki),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,to),Dg.copy(e.boundingBox).applyMatrix4(to),this.boundingBox.union(Dg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new xi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,to),ta.copy(e.boundingSphere).applyMatrix4(to),this.boundingSphere.union(ta)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ea.geometry=this.geometry,ea.material=this.material,ea.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ta.copy(this.boundingSphere),ta.applyMatrix4(n),e.ray.intersectsSphere(ta)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,to),Ug.multiplyMatrices(n,to),ea.matrixWorld=Ug,ea.raycast(e,_c);for(let l=0,c=_c.length;l<c;l++){const u=_c[l];u.instanceId=s,u.object=this,t.push(u)}_c.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new yo(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Dn extends bn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ue(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ng=new D,Og=new D,Fg=new lt,lf=new Mo,yc=new xi;class Pr extends Rt{constructor(e=new gt,t=new Dn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Ng.fromBufferAttribute(t,i-1),Og.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Ng.distanceTo(Og);e.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),yc.copy(n.boundingSphere),yc.applyMatrix4(i),yc.radius+=s,e.ray.intersectsSphere(yc)===!1)return;Fg.copy(i).invert(),lf.copy(e.ray).applyMatrix4(Fg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new D,d=new D,p=new D,m=new D,v=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const _=Math.max(0,l.start),w=Math.min(y.count,l.start+l.count);for(let M=_,A=w-1;M<A;M+=v){const R=y.getX(M),P=y.getX(M+1);if(h.fromBufferAttribute(x,R),d.fromBufferAttribute(x,P),lf.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const F=e.ray.origin.distanceTo(m);F<e.near||F>e.far||t.push({distance:F,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,l.start),w=Math.min(x.count,l.start+l.count);for(let M=_,A=w-1;M<A;M+=v){if(h.fromBufferAttribute(x,M),d.fromBufferAttribute(x,M+1),lf.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(m);P<e.near||P>e.far||t.push({distance:P,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const zg=new D,Bg=new D;class Hi extends Pr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)zg.fromBufferAttribute(t,i),Bg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+zg.distanceTo(Bg);e.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class p_ extends Pr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class uu extends bn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ue(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const kg=new lt,pd=new Mo,xc=new xi,Sc=new D;let m_=class extends Rt{constructor(e=new gt,t=new uu){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),xc.copy(n.boundingSphere),xc.applyMatrix4(i),xc.radius+=s,e.ray.intersectsSphere(xc)===!1)return;kg.copy(i).invert(),pd.copy(e.ray).applyMatrix4(kg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),v=Math.min(h.count,l.start+l.count);for(let y=m,E=v;y<E;y++){const x=h.getX(y);Sc.fromBufferAttribute(p,x),Hg(Sc,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),v=Math.min(p.count,l.start+l.count);for(let y=m,E=v;y<E;y++)Sc.fromBufferAttribute(p,y),Hg(Sc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}};function Hg(r,e,t,n,i,s,l){const c=pd.distanceSqToPoint(r);if(c<t){const u=new D;pd.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class mT extends Qt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:Kt,this.magFilter=s!==void 0?s:Kt,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class gT extends Qt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=jt,this.minFilter=jt,this.generateMipmaps=!1,this.needsUpdate=!0}}class hu extends Qt{constructor(e,t,n,i,s,l,c,u,h,d,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class vT extends hu{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=An}}class _T extends hu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,rr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class yT extends Qt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Si{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const d=n[i],m=n[i+1]-d,v=(l-d)/m;return(i+v)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new ue:new D);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],l=[],c=new D,u=new lt;for(let v=0;v<=e;v++){const y=v/e;i[v]=this.getTangentAt(y,new D)}s[0]=new D,l[0]=new D;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let v=1;v<=e;v++){if(s[v]=s[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Yt(i[v-1].dot(i[v]),-1,1));s[v].applyMatrix4(u.makeRotationAxis(c,y))}l[v].crossVectors(i[v],s[v])}if(t===!0){let v=Math.acos(Yt(s[0].dot(s[e]),-1,1));v/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(v=-v);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],v*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class fu extends Si{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new ue,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,v=h-this.aY;u=m*d-v*p+this.aX,h=m*p+v*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class g_ extends fu{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Wd(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,d,p){let m=(l-s)/h-(c-s)/(h+d)+(c-l)/d,v=(c-l)/d-(u-l)/(d+p)+(u-c)/p;m*=d,v*=d,i(l,c,m,v)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const Mc=new D,cf=new Wd,uf=new Wd,hf=new Wd;class v_ extends Si{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%s]:(Mc.subVectors(i[0],i[1]).add(i[0]),h=Mc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?d=i[(c+2)%s]:(Mc.subVectors(i[s-1],i[s-2]).add(i[s-1]),d=Mc),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),v),E=Math.pow(p.distanceToSquared(m),v),x=Math.pow(m.distanceToSquared(d),v);E<1e-4&&(E=1),y<1e-4&&(y=E),x<1e-4&&(x=E),cf.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,y,E,x),uf.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,y,E,x),hf.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,y,E,x)}else this.curveType==="catmullrom"&&(cf.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),uf.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),hf.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(cf.calc(u),uf.calc(u),hf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Vg(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function xT(r,e){const t=1-r;return t*t*e}function ST(r,e){return 2*(1-r)*r*e}function MT(r,e){return r*r*e}function da(r,e,t,n){return xT(r,e)+ST(r,t)+MT(r,n)}function ET(r,e){const t=1-r;return t*t*t*e}function wT(r,e){const t=1-r;return 3*t*t*r*e}function TT(r,e){return 3*(1-r)*r*r*e}function AT(r,e){return r*r*r*e}function pa(r,e,t,n,i){return ET(r,e)+wT(r,t)+TT(r,n)+AT(r,i)}class Xd extends Si{constructor(e=new ue,t=new ue,n=new ue,i=new ue){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(pa(e,i.x,s.x,l.x,c.x),pa(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class __ extends Si{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(pa(e,i.x,s.x,l.x,c.x),pa(e,i.y,s.y,l.y,c.y),pa(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class qd extends Si{constructor(e=new ue,t=new ue){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ue){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ue){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class y_ extends Si{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Yd extends Si{constructor(e=new ue,t=new ue,n=new ue){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(da(e,i.x,s.x,l.x),da(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Zd extends Si{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(da(e,i.x,s.x,l.x),da(e,i.y,s.y,l.y),da(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Jd extends Si{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ue){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],d=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(Vg(c,u.x,h.x,d.x,p.x),Vg(c,u.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ue().fromArray(i))}return this}}var jc=Object.freeze({__proto__:null,ArcCurve:g_,CatmullRomCurve3:v_,CubicBezierCurve:Xd,CubicBezierCurve3:__,EllipseCurve:fu,LineCurve:qd,LineCurve3:y_,QuadraticBezierCurve:Yd,QuadraticBezierCurve3:Zd,SplineCurve:Jd});class x_ extends Si{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new jc[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new jc[i.type]().fromJSON(i))}return this}}class Ca extends x_{constructor(e){super(),this.type="Path",this.currentPoint=new ue,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new qd(this.currentPoint.clone(),new ue(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Yd(this.currentPoint.clone(),new ue(e,t),new ue(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new Xd(this.currentPoint.clone(),new ue(e,t),new ue(n,i),new ue(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Jd(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new fu(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Xa extends gt{constructor(e=[new ue(0,-.5),new ue(.5,0),new ue(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Yt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],d=1/t,p=new D,m=new ue,v=new D,y=new D,E=new D;let x=0,_=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:x=e[w+1].x-e[w].x,_=e[w+1].y-e[w].y,v.x=_*1,v.y=-x,v.z=_*0,E.copy(v),v.normalize(),u.push(v.x,v.y,v.z);break;case e.length-1:u.push(E.x,E.y,E.z);break;default:x=e[w+1].x-e[w].x,_=e[w+1].y-e[w].y,v.x=_*1,v.y=-x,v.z=_*0,y.copy(v),v.x+=E.x,v.y+=E.y,v.z+=E.z,v.normalize(),u.push(v.x,v.y,v.z),E.copy(y)}for(let w=0;w<=t;w++){const M=n+w*d*i,A=Math.sin(M),R=Math.cos(M);for(let P=0;P<=e.length-1;P++){p.x=e[P].x*A,p.y=e[P].y,p.z=e[P].x*R,l.push(p.x,p.y,p.z),m.x=w/t,m.y=P/(e.length-1),c.push(m.x,m.y);const U=u[3*P+0]*A,F=u[3*P+1],b=u[3*P+0]*R;h.push(U,F,b)}}for(let w=0;w<t;w++)for(let M=0;M<e.length-1;M++){const A=M+w*e.length,R=A,P=A+e.length,U=A+e.length+1,F=A+1;s.push(R,P,F),s.push(U,F,P)}this.setIndex(s),this.setAttribute("position",new ze(l,3)),this.setAttribute("uv",new ze(c,2)),this.setAttribute("normal",new ze(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xa(e.points,e.segments,e.phiStart,e.phiLength)}}class du extends Xa{constructor(e=1,t=1,n=4,i=8){const s=new Ca;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new du(e.radius,e.length,e.capSegments,e.radialSegments)}}class pu extends gt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new D,d=new ue;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const v=n+p/t*i;h.x=e*Math.cos(v),h.y=e*Math.sin(v),l.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(l[m]/e+1)/2,d.y=(l[m+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new ze(l,3)),this.setAttribute("normal",new ze(c,3)),this.setAttribute("uv",new ze(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class wo extends gt{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const d=[],p=[],m=[],v=[];let y=0;const E=[],x=n/2;let _=0;w(),l===!1&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(d),this.setAttribute("position",new ze(p,3)),this.setAttribute("normal",new ze(m,3)),this.setAttribute("uv",new ze(v,2));function w(){const A=new D,R=new D;let P=0;const U=(t-e)/n;for(let F=0;F<=s;F++){const b=[],L=F/s,k=L*(t-e)+e;for(let $=0;$<=i;$++){const ae=$/i,H=ae*u+c,K=Math.sin(H),se=Math.cos(H);R.x=k*K,R.y=-L*n+x,R.z=k*se,p.push(R.x,R.y,R.z),A.set(K,U,se).normalize(),m.push(A.x,A.y,A.z),v.push(ae,1-L),b.push(y++)}E.push(b)}for(let F=0;F<i;F++)for(let b=0;b<s;b++){const L=E[b][F],k=E[b+1][F],$=E[b+1][F+1],ae=E[b][F+1];d.push(L,k,ae),d.push(k,$,ae),P+=6}h.addGroup(_,P,0),_+=P}function M(A){const R=y,P=new ue,U=new D;let F=0;const b=A===!0?e:t,L=A===!0?1:-1;for(let $=1;$<=i;$++)p.push(0,x*L,0),m.push(0,L,0),v.push(.5,.5),y++;const k=y;for(let $=0;$<=i;$++){const H=$/i*u+c,K=Math.cos(H),se=Math.sin(H);U.x=b*se,U.y=x*L,U.z=b*K,p.push(U.x,U.y,U.z),m.push(0,L,0),P.x=K*.5+.5,P.y=se*.5*L+.5,v.push(P.x,P.y),y++}for(let $=0;$<i;$++){const ae=R+$,H=k+$;A===!0?d.push(H,H+1,ae):d.push(H+1,H,ae),F+=3}h.addGroup(_,F,A===!0?1:2),_+=F}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wo(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class mu extends wo{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new mu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ur extends gt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),d(),this.setAttribute("position",new ze(s,3)),this.setAttribute("normal",new ze(s.slice(),3)),this.setAttribute("uv",new ze(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const M=new D,A=new D,R=new D;for(let P=0;P<t.length;P+=3)v(t[P+0],M),v(t[P+1],A),v(t[P+2],R),u(M,A,R,w)}function u(w,M,A,R){const P=R+1,U=[];for(let F=0;F<=P;F++){U[F]=[];const b=w.clone().lerp(A,F/P),L=M.clone().lerp(A,F/P),k=P-F;for(let $=0;$<=k;$++)$===0&&F===P?U[F][$]=b:U[F][$]=b.clone().lerp(L,$/k)}for(let F=0;F<P;F++)for(let b=0;b<2*(P-F)-1;b++){const L=Math.floor(b/2);b%2===0?(m(U[F][L+1]),m(U[F+1][L]),m(U[F][L])):(m(U[F][L+1]),m(U[F+1][L+1]),m(U[F+1][L]))}}function h(w){const M=new D;for(let A=0;A<s.length;A+=3)M.x=s[A+0],M.y=s[A+1],M.z=s[A+2],M.normalize().multiplyScalar(w),s[A+0]=M.x,s[A+1]=M.y,s[A+2]=M.z}function d(){const w=new D;for(let M=0;M<s.length;M+=3){w.x=s[M+0],w.y=s[M+1],w.z=s[M+2];const A=x(w)/2/Math.PI+.5,R=_(w)/Math.PI+.5;l.push(A,1-R)}y(),p()}function p(){for(let w=0;w<l.length;w+=6){const M=l[w+0],A=l[w+2],R=l[w+4],P=Math.max(M,A,R),U=Math.min(M,A,R);P>.9&&U<.1&&(M<.2&&(l[w+0]+=1),A<.2&&(l[w+2]+=1),R<.2&&(l[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function v(w,M){const A=w*3;M.x=e[A+0],M.y=e[A+1],M.z=e[A+2]}function y(){const w=new D,M=new D,A=new D,R=new D,P=new ue,U=new ue,F=new ue;for(let b=0,L=0;b<s.length;b+=9,L+=6){w.set(s[b+0],s[b+1],s[b+2]),M.set(s[b+3],s[b+4],s[b+5]),A.set(s[b+6],s[b+7],s[b+8]),P.set(l[L+0],l[L+1]),U.set(l[L+2],l[L+3]),F.set(l[L+4],l[L+5]),R.copy(w).add(M).add(A).divideScalar(3);const k=x(R);E(P,L+0,w,k),E(U,L+2,M,k),E(F,L+4,A,k)}}function E(w,M,A,R){R<0&&w.x===1&&(l[M]=w.x-1),A.x===0&&A.z===0&&(l[M]=R/2/Math.PI+.5)}function x(w){return Math.atan2(w.z,-w.x)}function _(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ur(e.vertices,e.indices,e.radius,e.details)}}class gu extends Ur{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new gu(e.radius,e.detail)}}const Ec=new D,wc=new D,ff=new D,Tc=new Bn;class S_ extends gt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(cs*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},v=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:E,b:x,c:_}=Tc;if(E.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),_.fromBufferAttribute(c,h[2]),Tc.getNormal(ff),p[0]=`${Math.round(E.x*i)},${Math.round(E.y*i)},${Math.round(E.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const M=(w+1)%3,A=p[w],R=p[M],P=Tc[d[w]],U=Tc[d[M]],F=`${A}_${R}`,b=`${R}_${A}`;b in m&&m[b]?(ff.dot(m[b].normal)<=s&&(v.push(P.x,P.y,P.z),v.push(U.x,U.y,U.z)),m[b]=null):F in m||(m[F]={index0:h[w],index1:h[M],normal:ff.clone()})}}for(const y in m)if(m[y]){const{index0:E,index1:x}=m[y];Ec.fromBufferAttribute(c,E),wc.fromBufferAttribute(c,x),v.push(Ec.x,Ec.y,Ec.z),v.push(wc.x,wc.y,wc.z)}this.setAttribute("position",new ze(v,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class hs extends Ca{constructor(e){super(e),this.uuid=Qn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ca().fromJSON(i))}return this}}const bT={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=M_(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,d,p,m,v;if(n&&(s=IT(r,e,s,t)),r.length>80*t){c=h=r[0],u=d=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>d&&(d=m);v=Math.max(h-c,d-u),v=v!==0?32767/v:0}return Pa(s,l,t,c,u,v,0),l}};function M_(r,e,t,n,i){let s,l;if(i===GT(r,e,t,n)>0)for(s=e;s<t;s+=n)l=Gg(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=Gg(s,r[s],r[s+1],l);return l&&vu(l,l.next)&&(Ia(l),l=l.next),l}function ps(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(vu(t,t.next)||Gt(t.prev,t,t.next)===0)){if(Ia(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Pa(r,e,t,n,i,s,l){if(!r)return;!l&&s&&FT(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?CT(r,n,i,s):RT(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Ia(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=PT(ps(r),e,t),Pa(r,e,t,n,i,s,2)):l===2&&LT(r,e,t,n,i,s):Pa(ps(r),e,t,n,i,s,1);break}}}function RT(r){const e=r.prev,t=r,n=r.next;if(Gt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,d=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,v=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=v&&uo(i,c,s,u,l,h,y.x,y.y)&&Gt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function CT(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Gt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,d=i.y,p=s.y,m=l.y,v=c<u?c<h?c:h:u<h?u:h,y=d<p?d<m?d:m:p<m?p:m,E=c>u?c>h?c:h:u>h?u:h,x=d>p?d>m?d:m:p>m?p:m,_=md(v,y,e,t,n),w=md(E,x,e,t,n);let M=r.prevZ,A=r.nextZ;for(;M&&M.z>=_&&A&&A.z<=w;){if(M.x>=v&&M.x<=E&&M.y>=y&&M.y<=x&&M!==i&&M!==l&&uo(c,d,u,p,h,m,M.x,M.y)&&Gt(M.prev,M,M.next)>=0||(M=M.prevZ,A.x>=v&&A.x<=E&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&uo(c,d,u,p,h,m,A.x,A.y)&&Gt(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;M&&M.z>=_;){if(M.x>=v&&M.x<=E&&M.y>=y&&M.y<=x&&M!==i&&M!==l&&uo(c,d,u,p,h,m,M.x,M.y)&&Gt(M.prev,M,M.next)>=0)return!1;M=M.prevZ}for(;A&&A.z<=w;){if(A.x>=v&&A.x<=E&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&uo(c,d,u,p,h,m,A.x,A.y)&&Gt(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function PT(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!vu(i,s)&&E_(i,n,n.next,s)&&La(i,s)&&La(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Ia(n),Ia(n.next),n=r=s),n=n.next}while(n!==r);return ps(n)}function LT(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&kT(l,c)){let u=w_(l,c);l=ps(l,l.next),u=ps(u,u.next),Pa(l,e,t,n,i,s,0),Pa(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function IT(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=M_(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(BT(h));for(i.sort(UT),s=0;s<i.length;s++)t=DT(i[s],t);return t}function UT(r,e){return r.x-e.x}function DT(r,e){const t=NT(r,e);if(!t)return e;const n=w_(t,r);return ps(n,n.next),ps(t,t.next)}function NT(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&uo(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),La(t,r)&&(p<d||p===d&&(t.x>i.x||t.x===i.x&&OT(i,t)))&&(i=t,d=p)),t=t.next;while(t!==c);return i}function OT(r,e){return Gt(r.prev,r,e.prev)<0&&Gt(e.next,r,r.next)<0}function FT(r,e,t,n){let i=r;do i.z===0&&(i.z=md(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,zT(i)}function zT(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function md(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function BT(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function uo(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function kT(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!HT(r,e)&&(La(r,e)&&La(e,r)&&VT(r,e)&&(Gt(r.prev,r,e.prev)||Gt(r,e.prev,e))||vu(r,e)&&Gt(r.prev,r,r.next)>0&&Gt(e.prev,e,e.next)>0)}function Gt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function vu(r,e){return r.x===e.x&&r.y===e.y}function E_(r,e,t,n){const i=bc(Gt(r,e,t)),s=bc(Gt(r,e,n)),l=bc(Gt(t,n,r)),c=bc(Gt(t,n,e));return!!(i!==s&&l!==c||i===0&&Ac(r,t,e)||s===0&&Ac(r,n,e)||l===0&&Ac(t,r,n)||c===0&&Ac(t,e,n))}function Ac(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function bc(r){return r>0?1:r<0?-1:0}function HT(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&E_(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function La(r,e){return Gt(r.prev,r,r.next)<0?Gt(r,e,r.next)>=0&&Gt(r,r.prev,e)>=0:Gt(r,e,r.prev)<0||Gt(r,r.next,e)<0}function VT(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function w_(r,e){const t=new gd(r.i,r.x,r.y),n=new gd(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Gg(r,e,t,n){const i=new gd(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Ia(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function gd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function GT(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class Fi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Fi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Wg(e),Xg(n,e);let l=e.length;t.forEach(Wg);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,Xg(n,t[u]);const c=bT.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function Wg(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Xg(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class _u extends gt{constructor(e=new hs([new ue(.5,.5),new ue(-.5,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new ze(i,3)),this.setAttribute("uv",new ze(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:v-.1,E=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:WT;let M,A=!1,R,P,U,F;_&&(M=_.getSpacedPoints(d),A=!0,m=!1,R=_.computeFrenetFrames(d,!1),P=new D,U=new D,F=new D),m||(x=0,v=0,y=0,E=0);const b=c.extractPoints(h);let L=b.shape;const k=b.holes;if(!Fi.isClockWise(L)){L=L.reverse();for(let B=0,pe=k.length;B<pe;B++){const ce=k[B];Fi.isClockWise(ce)&&(k[B]=ce.reverse())}}const ae=Fi.triangulateShape(L,k),H=L;for(let B=0,pe=k.length;B<pe;B++){const ce=k[B];L=L.concat(ce)}function K(B,pe,ce){return pe||console.error("THREE.ExtrudeGeometry: vec does not exist"),B.clone().addScaledVector(pe,ce)}const se=L.length,oe=ae.length;function X(B,pe,ce){let me,he,Xe;const Le=B.x-pe.x,Oe=B.y-pe.y,Qe=ce.x-B.x,vt=ce.y-B.y,zt=Le*Le+Oe*Oe,O=Le*vt-Oe*Qe;if(Math.abs(O)>Number.EPSILON){const C=Math.sqrt(zt),Q=Math.sqrt(Qe*Qe+vt*vt),ge=pe.x-Oe/C,de=pe.y+Le/C,ve=ce.x-vt/Q,He=ce.y+Qe/Q,Me=((ve-ge)*vt-(He-de)*Qe)/(Le*vt-Oe*Qe);me=ge+Le*Me-B.x,he=de+Oe*Me-B.y;const Re=me*me+he*he;if(Re<=2)return new ue(me,he);Xe=Math.sqrt(Re/2)}else{let C=!1;Le>Number.EPSILON?Qe>Number.EPSILON&&(C=!0):Le<-Number.EPSILON?Qe<-Number.EPSILON&&(C=!0):Math.sign(Oe)===Math.sign(vt)&&(C=!0),C?(me=-Oe,he=Le,Xe=Math.sqrt(zt)):(me=Le,he=Oe,Xe=Math.sqrt(zt/2))}return new ue(me/Xe,he/Xe)}const Y=[];for(let B=0,pe=H.length,ce=pe-1,me=B+1;B<pe;B++,ce++,me++)ce===pe&&(ce=0),me===pe&&(me=0),Y[B]=X(H[B],H[ce],H[me]);const Z=[];let z,j=Y.concat();for(let B=0,pe=k.length;B<pe;B++){const ce=k[B];z=[];for(let me=0,he=ce.length,Xe=he-1,Le=me+1;me<he;me++,Xe++,Le++)Xe===he&&(Xe=0),Le===he&&(Le=0),z[me]=X(ce[me],ce[Xe],ce[Le]);Z.push(z),j=j.concat(z)}for(let B=0;B<x;B++){const pe=B/x,ce=v*Math.cos(pe*Math.PI/2),me=y*Math.sin(pe*Math.PI/2)+E;for(let he=0,Xe=H.length;he<Xe;he++){const Le=K(H[he],Y[he],me);qe(Le.x,Le.y,-ce)}for(let he=0,Xe=k.length;he<Xe;he++){const Le=k[he];z=Z[he];for(let Oe=0,Qe=Le.length;Oe<Qe;Oe++){const vt=K(Le[Oe],z[Oe],me);qe(vt.x,vt.y,-ce)}}}const fe=y+E;for(let B=0;B<se;B++){const pe=m?K(L[B],j[B],fe):L[B];A?(U.copy(R.normals[0]).multiplyScalar(pe.x),P.copy(R.binormals[0]).multiplyScalar(pe.y),F.copy(M[0]).add(U).add(P),qe(F.x,F.y,F.z)):qe(pe.x,pe.y,0)}for(let B=1;B<=d;B++)for(let pe=0;pe<se;pe++){const ce=m?K(L[pe],j[pe],fe):L[pe];A?(U.copy(R.normals[B]).multiplyScalar(ce.x),P.copy(R.binormals[B]).multiplyScalar(ce.y),F.copy(M[B]).add(U).add(P),qe(F.x,F.y,F.z)):qe(ce.x,ce.y,p/d*B)}for(let B=x-1;B>=0;B--){const pe=B/x,ce=v*Math.cos(pe*Math.PI/2),me=y*Math.sin(pe*Math.PI/2)+E;for(let he=0,Xe=H.length;he<Xe;he++){const Le=K(H[he],Y[he],me);qe(Le.x,Le.y,p+ce)}for(let he=0,Xe=k.length;he<Xe;he++){const Le=k[he];z=Z[he];for(let Oe=0,Qe=Le.length;Oe<Qe;Oe++){const vt=K(Le[Oe],z[Oe],me);A?qe(vt.x,vt.y+M[d-1].y,M[d-1].x+ce):qe(vt.x,vt.y,p+ce)}}}we(),Ae();function we(){const B=i.length/3;if(m){let pe=0,ce=se*pe;for(let me=0;me<oe;me++){const he=ae[me];Je(he[2]+ce,he[1]+ce,he[0]+ce)}pe=d+x*2,ce=se*pe;for(let me=0;me<oe;me++){const he=ae[me];Je(he[0]+ce,he[1]+ce,he[2]+ce)}}else{for(let pe=0;pe<oe;pe++){const ce=ae[pe];Je(ce[2],ce[1],ce[0])}for(let pe=0;pe<oe;pe++){const ce=ae[pe];Je(ce[0]+se*d,ce[1]+se*d,ce[2]+se*d)}}n.addGroup(B,i.length/3-B,0)}function Ae(){const B=i.length/3;let pe=0;ke(H,pe),pe+=H.length;for(let ce=0,me=k.length;ce<me;ce++){const he=k[ce];ke(he,pe),pe+=he.length}n.addGroup(B,i.length/3-B,1)}function ke(B,pe){let ce=B.length;for(;--ce>=0;){const me=ce;let he=ce-1;he<0&&(he=B.length-1);for(let Xe=0,Le=d+x*2;Xe<Le;Xe++){const Oe=se*Xe,Qe=se*(Xe+1),vt=pe+me+Oe,zt=pe+he+Oe,O=pe+he+Qe,C=pe+me+Qe;it(vt,zt,O,C)}}}function qe(B,pe,ce){u.push(B),u.push(pe),u.push(ce)}function Je(B,pe,ce){_t(B),_t(pe),_t(ce);const me=i.length/3,he=w.generateTopUV(n,i,me-3,me-2,me-1);Be(he[0]),Be(he[1]),Be(he[2])}function it(B,pe,ce,me){_t(B),_t(pe),_t(me),_t(pe),_t(ce),_t(me);const he=i.length/3,Xe=w.generateSideWallUV(n,i,he-6,he-3,he-2,he-1);Be(Xe[0]),Be(Xe[1]),Be(Xe[3]),Be(Xe[1]),Be(Xe[2]),Be(Xe[3])}function _t(B){i.push(u[B*3+0]),i.push(u[B*3+1]),i.push(u[B*3+2])}function Be(B){s.push(B.x),s.push(B.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return XT(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new jc[i.type]().fromJSON(i)),new _u(n,e.options)}}const WT={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new ue(s,l),new ue(c,u),new ue(h,d)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],v=e[i*3+1],y=e[i*3+2],E=e[s*3],x=e[s*3+1],_=e[s*3+2];return Math.abs(c-d)<Math.abs(l-h)?[new ue(l,1-u),new ue(h,1-p),new ue(m,1-y),new ue(E,1-_)]:[new ue(c,1-u),new ue(d,1-p),new ue(v,1-y),new ue(x,1-_)]}};function XT(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class yu extends Ur{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new yu(e.radius,e.detail)}}class qa extends Ur{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new qa(e.radius,e.detail)}}class xu extends gt{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let p=e;const m=(t-e)/i,v=new D,y=new ue;for(let E=0;E<=i;E++){for(let x=0;x<=n;x++){const _=s+x/n*l;v.x=p*Math.cos(_),v.y=p*Math.sin(_),u.push(v.x,v.y,v.z),h.push(0,0,1),y.x=(v.x/t+1)/2,y.y=(v.y/t+1)/2,d.push(y.x,y.y)}p+=m}for(let E=0;E<i;E++){const x=E*(n+1);for(let _=0;_<n;_++){const w=_+x,M=w,A=w+n+1,R=w+n+2,P=w+1;c.push(M,A,P),c.push(A,R,P)}}this.setIndex(c),this.setAttribute("position",new ze(u,3)),this.setAttribute("normal",new ze(h,3)),this.setAttribute("uv",new ze(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Su extends gt{constructor(e=new hs([new ue(0,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new ze(i,3)),this.setAttribute("normal",new ze(s,3)),this.setAttribute("uv",new ze(l,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let v=m.shape;const y=m.holes;Fi.isClockWise(v)===!1&&(v=v.reverse());for(let x=0,_=y.length;x<_;x++){const w=y[x];Fi.isClockWise(w)===!0&&(y[x]=w.reverse())}const E=Fi.triangulateShape(v,y);for(let x=0,_=y.length;x<_;x++){const w=y[x];v=v.concat(w)}for(let x=0,_=v.length;x<_;x++){const w=v[x];i.push(w.x,w.y,0),s.push(0,0,1),l.push(w.x,w.y)}for(let x=0,_=E.length;x<_;x++){const w=E[x],M=w[0]+p,A=w[1]+p,R=w[2]+p;n.push(M,A,R),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return qT(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new Su(n,e.curveSegments)}}function qT(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Ya extends gt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const d=[],p=new D,m=new D,v=[],y=[],E=[],x=[];for(let _=0;_<=n;_++){const w=[],M=_/n;let A=0;_===0&&l===0?A=.5/t:_===n&&u===Math.PI&&(A=-.5/t);for(let R=0;R<=t;R++){const P=R/t;p.x=-e*Math.cos(i+P*s)*Math.sin(l+M*c),p.y=e*Math.cos(l+M*c),p.z=e*Math.sin(i+P*s)*Math.sin(l+M*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),E.push(m.x,m.y,m.z),x.push(P+A,1-M),w.push(h++)}d.push(w)}for(let _=0;_<n;_++)for(let w=0;w<t;w++){const M=d[_][w+1],A=d[_][w],R=d[_+1][w],P=d[_+1][w+1];(_!==0||l>0)&&v.push(M,A,P),(_!==n-1||u<Math.PI)&&v.push(A,R,P)}this.setIndex(v),this.setAttribute("position",new ze(y,3)),this.setAttribute("normal",new ze(E,3)),this.setAttribute("uv",new ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ya(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Mu extends Ur{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mu(e.radius,e.detail)}}class Eu extends gt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],d=new D,p=new D,m=new D;for(let v=0;v<=n;v++)for(let y=0;y<=i;y++){const E=y/i*s,x=v/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(E),p.y=(e+t*Math.cos(x))*Math.sin(E),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),d.x=e*Math.cos(E),d.y=e*Math.sin(E),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(v/n)}for(let v=1;v<=n;v++)for(let y=1;y<=i;y++){const E=(i+1)*v+y-1,x=(i+1)*(v-1)+y-1,_=(i+1)*(v-1)+y,w=(i+1)*v+y;l.push(E,x,w),l.push(x,_,w)}this.setIndex(l),this.setAttribute("position",new ze(c,3)),this.setAttribute("normal",new ze(u,3)),this.setAttribute("uv",new ze(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Eu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class wu extends gt{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],p=new D,m=new D,v=new D,y=new D,E=new D,x=new D,_=new D;for(let M=0;M<=n;++M){const A=M/n*s*Math.PI*2;w(A,s,l,e,v),w(A+.01,s,l,e,y),x.subVectors(y,v),_.addVectors(y,v),E.crossVectors(x,_),_.crossVectors(E,x),E.normalize(),_.normalize();for(let R=0;R<=i;++R){const P=R/i*Math.PI*2,U=-t*Math.cos(P),F=t*Math.sin(P);p.x=v.x+(U*_.x+F*E.x),p.y=v.y+(U*_.y+F*E.y),p.z=v.z+(U*_.z+F*E.z),u.push(p.x,p.y,p.z),m.subVectors(p,v).normalize(),h.push(m.x,m.y,m.z),d.push(M/n),d.push(R/i)}}for(let M=1;M<=n;M++)for(let A=1;A<=i;A++){const R=(i+1)*(M-1)+(A-1),P=(i+1)*M+(A-1),U=(i+1)*M+A,F=(i+1)*(M-1)+A;c.push(R,P,F),c.push(P,U,F)}this.setIndex(c),this.setAttribute("position",new ze(u,3)),this.setAttribute("normal",new ze(h,3)),this.setAttribute("uv",new ze(d,2));function w(M,A,R,P,U){const F=Math.cos(M),b=Math.sin(M),L=R/A*M,k=Math.cos(L);U.x=P*(2+k)*.5*F,U.y=P*(2+k)*b*.5,U.z=P*Math.sin(L)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Tu extends gt{constructor(e=new Zd(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new D,u=new D,h=new ue;let d=new D;const p=[],m=[],v=[],y=[];E(),this.setIndex(y),this.setAttribute("position",new ze(p,3)),this.setAttribute("normal",new ze(m,3)),this.setAttribute("uv",new ze(v,2));function E(){for(let M=0;M<t;M++)x(M);x(s===!1?t:0),w(),_()}function x(M){d=e.getPointAt(M/t,d);const A=l.normals[M],R=l.binormals[M];for(let P=0;P<=i;P++){const U=P/i*Math.PI*2,F=Math.sin(U),b=-Math.cos(U);u.x=b*A.x+F*R.x,u.y=b*A.y+F*R.y,u.z=b*A.z+F*R.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function _(){for(let M=1;M<=t;M++)for(let A=1;A<=i;A++){const R=(i+1)*(M-1)+(A-1),P=(i+1)*M+(A-1),U=(i+1)*M+A,F=(i+1)*(M-1)+A;y.push(R,P,F),y.push(P,U,F)}}function w(){for(let M=0;M<=t;M++)for(let A=0;A<=i;A++)h.x=M/t,h.y=A/i,v.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Tu(new jc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class T_ extends gt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,s=new D;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const p=u[h],m=p.start,v=p.count;for(let y=m,E=m+v;y<E;y+=3)for(let x=0;x<3;x++){const _=c.getX(y+x),w=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,_),s.fromBufferAttribute(l,w),qg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,d),s.fromBufferAttribute(l,p),qg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ze(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function qg(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Yg=Object.freeze({__proto__:null,BoxGeometry:vs,CapsuleGeometry:du,CircleGeometry:pu,ConeGeometry:mu,CylinderGeometry:wo,DodecahedronGeometry:gu,EdgesGeometry:S_,ExtrudeGeometry:_u,IcosahedronGeometry:yu,LatheGeometry:Xa,OctahedronGeometry:qa,PlaneGeometry:Ga,PolyhedronGeometry:Ur,RingGeometry:xu,ShapeGeometry:Su,SphereGeometry:Ya,TetrahedronGeometry:Mu,TorusGeometry:Eu,TorusKnotGeometry:wu,TubeGeometry:Tu,WireframeGeometry:T_});class A_ extends bn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ue(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class b_ extends Bi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class jd extends bn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ue(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Lr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class R_ extends jd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ue(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Yt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ue(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ue(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ue(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class C_ extends bn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ue(16777215),this.specular=new Ue(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Lr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=za,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class P_ extends bn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ue(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Lr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class L_ extends bn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Lr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class I_ extends bn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Lr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=za,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class U_ extends bn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ue(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Lr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class D_ extends Dn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function os(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function N_(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function O_(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function vd(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function Kd(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function YT(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],d=h.getValueSize(),p=[],m=[];for(let v=0;v<h.times.length;++v){const y=h.times[v]*i;if(!(y<t||y>=n)){p.push(h.times[v]);for(let E=0;E<d;++E)m.push(h.values[v*d+E])}}p.length!==0&&(h.times=os(p,h.times.constructor),h.values=os(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function ZT(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(h===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const v=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=v/3);const y=c.times.length-1;let E;if(s<=c.times[0]){const _=d,w=p-d;E=c.values.slice(_,w)}else if(s>=c.times[y]){const _=y*p+d,w=_+p-d;E=c.values.slice(_,w)}else{const _=c.createInterpolant(),w=d,M=p-d;_.evaluate(s),E=_.resultBuffer.slice(w,M)}u==="quaternion"&&new Vn().fromArray(E).normalize().conjugate().toArray(E);const x=h.times.length;for(let _=0;_<x;++_){const w=_*v+m;if(u==="quaternion")Vn.multiplyQuaternionsFlat(h.values,w,E,0,h.values,w);else{const M=v-m*2;for(let A=0;A<M;++A)h.values[w+A]-=E[A]}}}return r.blendMode=Pd,r}const JT={convertArray:os,isTypedArray:N_,getKeyframeOrder:O_,sortedArray:vd,flattenJSON:Kd,subclip:YT,makeClipAdditive:ZT};class Za{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class F_ extends Za{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:is,endingEnd:is}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case rs:s=e,c=2*t-n;break;case Ma:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case rs:l=e,u=2*n-t;break;case Ma:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*d,this._offsetNext=l*d}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,v=this._weightNext,y=(n-t)/(i-t),E=y*y,x=E*y,_=-m*x+2*m*E-m*y,w=(1+m)*x+(-1.5-2*m)*E+(-.5+m)*y+1,M=(-1-v)*x+(1.5+v)*E+.5*y,A=v*x-v*E;for(let R=0;R!==c;++R)s[R]=_*l[d+R]+w*l[h+R]+M*l[u+R]+A*l[p+R];return s}}class Qd extends Za{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*d;return s}}class z_ extends Za{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Mi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=os(t,this.TimeBufferType),this.values=os(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:os(e.times,Array),values:os(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new z_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Qd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new F_(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case xa:t=this.InterpolantFactoryMethodDiscrete;break;case Sa:t=this.InterpolantFactoryMethodLinear;break;case Vc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return xa;case this.InterpolantFactoryMethodLinear:return Sa;case this.InterpolantFactoryMethodSmooth:return Vc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&N_(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Vc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,v=p+n;for(let y=0;y!==n;++y){const E=t[p+y];if(E!==t[m+y]||E!==t[v+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let v=0;v!==n;++v)t[m+v]=t[p+v]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Mi.prototype.TimeBufferType=Float32Array;Mi.prototype.ValueBufferType=Float32Array;Mi.prototype.DefaultInterpolation=Sa;class _s extends Mi{}_s.prototype.ValueTypeName="bool";_s.prototype.ValueBufferType=Array;_s.prototype.DefaultInterpolation=xa;_s.prototype.InterpolantFactoryMethodLinear=void 0;_s.prototype.InterpolantFactoryMethodSmooth=void 0;class $d extends Mi{}$d.prototype.ValueTypeName="color";class Ua extends Mi{}Ua.prototype.ValueTypeName="number";class B_ extends Za{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Vn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class To extends Mi{InterpolantFactoryMethodLinear(e){return new B_(this.times,this.values,this.getValueSize(),e)}}To.prototype.ValueTypeName="quaternion";To.prototype.DefaultInterpolation=Sa;To.prototype.InterpolantFactoryMethodSmooth=void 0;class ys extends Mi{}ys.prototype.ValueTypeName="string";ys.prototype.ValueBufferType=Array;ys.prototype.DefaultInterpolation=xa;ys.prototype.InterpolantFactoryMethodLinear=void 0;ys.prototype.InterpolantFactoryMethodSmooth=void 0;class Da extends Mi{}Da.prototype.ValueTypeName="vector";class Na{constructor(e,t=-1,n,i=tu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Qn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(KT(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(Mi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const d=O_(u);u=vd(u,1,d),h=vd(h,1,d),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new Ua(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(s);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,v,y,E){if(v.length!==0){const x=[],_=[];Kd(v,x,_,y),x.length!==0&&E.push(new p(m,x,_))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const v={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let E=0;E<m[y].morphTargets.length;E++)v[m[y].morphTargets[E]]=-1;for(const E in v){const x=[],_=[];for(let w=0;w!==m[y].morphTargets.length;++w){const M=m[y];x.push(M.time),_.push(M.morphTarget===E?1:0)}i.push(new Ua(".morphTargetInfluence["+E+"]",x,_))}u=v.length*l}else{const v=".bones["+t[p].name+"]";n(Da,v+".position",m,"pos",i),n(To,v+".quaternion",m,"rot",i),n(Da,v+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function jT(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ua;case"vector":case"vector2":case"vector3":case"vector4":return Da;case"color":return $d;case"quaternion":return To;case"bool":case"boolean":return _s;case"string":return ys}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function KT(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=jT(r.type);if(r.times===void 0){const t=[],n=[];Kd(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const ms={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class ep{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,s===!1&&i.onStart!==void 0&&i.onStart(d,l,c),s=!0},this.itemEnd=function(d){l++,i.onProgress!==void 0&&i.onProgress(d,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const v=h[p],y=h[p+1];if(v.global&&(v.lastIndex=0),v.test(d))return y}return null}}}const k_=new ep;class Gn{constructor(e){this.manager=e!==void 0?e:k_,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Gn.DEFAULT_MATERIAL_NAME="__DEFAULT";const $i={};class QT extends Error{constructor(e,t){super(e),this.response=t}}class sr extends Gn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ms.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if($i[e]!==void 0){$i[e].push({onLoad:t,onProgress:n,onError:i});return}$i[e]=[],$i[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=$i[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),v=m?parseInt(m):0,y=v!==0;let E=0;const x=new ReadableStream({start(_){w();function w(){p.read().then(({done:M,value:A})=>{if(M)_.close();else{E+=A.byteLength;const R=new ProgressEvent("progress",{lengthComputable:y,loaded:E,total:v});for(let P=0,U=d.length;P<U;P++){const F=d[P];F.onProgress&&F.onProgress(R)}_.enqueue(A),w()}})}}});return new Response(x)}else throw new QT(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,v=new TextDecoder(m);return h.arrayBuffer().then(y=>v.decode(y))}}}).then(h=>{ms.add(e,h);const d=$i[e];delete $i[e];for(let p=0,m=d.length;p<m;p++){const v=d[p];v.onLoad&&v.onLoad(h)}}).catch(h=>{const d=$i[e];if(d===void 0)throw this.manager.itemError(e),h;delete $i[e];for(let p=0,m=d.length;p<m;p++){const v=d[p];v.onError&&v.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class $T extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new sr(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Na.parse(e[n]);t.push(i)}return t}}class eA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new hu,u=new sr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function d(p){u.load(e[p],function(m){const v=s.parse(m,!0);l[p]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},h+=1,h===6&&(v.mipmapCount===1&&(c.minFilter=Kt),c.image=l,c.format=v.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const v=m.mipmaps.length/m.mipmapCount;for(let y=0;y<v;y++){l[y]={mipmaps:[]};for(let E=0;E<m.mipmapCount;E++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+E]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=Kt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Oa extends Gn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ms.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=Ra("img");function u(){d(),ms.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){d(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class tA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=new Va;s.colorSpace=sn;const l=new Oa(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(d){s.images[h]=d,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class nA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new po,c=new sr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(d){if(i!==void 0)i(d);else{console.error(d);return}}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:An,l.wrapT=h.wrapT!==void 0?h.wrapT:An,l.magFilter=h.magFilter!==void 0?h.magFilter:Kt,l.minFilter=h.minFilter!==void 0?h.minFilter:Kt,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?l.colorSpace=h.colorSpace:h.encoding!==void 0&&(l.encoding=h.encoding),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Cr),h.mipmapCount===1&&(l.minFilter=Kt),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class iA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=new Qt,l=new Oa(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Dr extends Rt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ue(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class H_ extends Dr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ue(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const df=new lt,Zg=new D,Jg=new D;class tp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ue(512,512),this.map=null,this.mapPass=null,this.matrix=new lt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ru,this._frameExtents=new ue(1,1),this._viewportCount=1,this._viewports=[new Lt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Zg.setFromMatrixPosition(e.matrixWorld),t.position.copy(Zg),Jg.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Jg),t.updateMatrixWorld(),df.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(df),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(df)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class rA extends tp{constructor(){super(new mn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=vo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class V_ extends Dr{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.target=new Rt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new rA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const jg=new lt,na=new D,pf=new D;class sA extends tp{constructor(){super(new mn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ue(4,2),this._viewportCount=6,this._viewports=[new Lt(2,1,1,1),new Lt(0,1,1,1),new Lt(3,1,1,1),new Lt(1,1,1,1),new Lt(3,0,1,1),new Lt(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),na.setFromMatrixPosition(e.matrixWorld),n.position.copy(na),pf.copy(n.position),pf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(pf),n.updateMatrixWorld(),i.makeTranslation(-na.x,-na.y,-na.z),jg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(jg)}}class G_ extends Dr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new sA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class oA extends tp{constructor(){super(new Wa(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class W_ extends Dr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.target=new Rt,this.shadow=new oA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class X_ extends Dr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class q_ extends Dr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Y_{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Z_ extends Dr{constructor(e=new Y_,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Au extends Gn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new sr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Au.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Ue().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new Ue().setHex(l.value);break;case"v2":i.uniforms[s].value=new ue().fromArray(l.value);break;case"v3":i.uniforms[s].value=new D().fromArray(l.value);break;case"v4":i.uniforms[s].value=new Lt().fromArray(l.value);break;case"m3":i.uniforms[s].value=new pt().fromArray(l.value);break;case"m4":i.uniforms[s].value=new lt().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new ue().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ue().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:A_,SpriteMaterial:Vd,RawShaderMaterial:b_,ShaderMaterial:Bi,PointsMaterial:uu,MeshPhysicalMaterial:R_,MeshStandardMaterial:jd,MeshPhongMaterial:C_,MeshToonMaterial:P_,MeshNormalMaterial:L_,MeshLambertMaterial:I_,MeshDepthMaterial:zd,MeshDistanceMaterial:Bd,MeshBasicMaterial:Ir,MeshMatcapMaterial:U_,LineDashedMaterial:D_,LineBasicMaterial:Dn,Material:bn};return new t[e]}}class _d{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class J_ extends gt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class j_ extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new sr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(v,y){if(t[y]!==void 0)return t[y];const x=v.interleavedBuffers[y],_=s(v,x.buffer),w=ao(x.type,_),M=new lu(w,x.stride);return M.uuid=x.uuid,t[y]=M,M}function s(v,y){if(n[y]!==void 0)return n[y];const x=v.arrayBuffers[y],_=new Uint32Array(x).buffer;return n[y]=_,_}const l=e.isInstancedBufferGeometry?new J_:new gt,c=e.data.index;if(c!==void 0){const v=ao(c.type,c.array);l.setIndex(new Dt(v,1))}const u=e.data.attributes;for(const v in u){const y=u[v];let E;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);E=new ds(x,y.itemSize,y.offset,y.normalized)}else{const x=ao(y.type,y.array),_=y.isInstancedBufferAttribute?yo:Dt;E=new _(x,y.itemSize,y.normalized)}y.name!==void 0&&(E.name=y.name),y.usage!==void 0&&E.setUsage(y.usage),y.updateRange!==void 0&&(E.updateRange.offset=y.updateRange.offset,E.updateRange.count=y.updateRange.count),l.setAttribute(v,E)}const h=e.data.morphAttributes;if(h)for(const v in h){const y=h[v],E=[];for(let x=0,_=y.length;x<_;x++){const w=y[x];let M;if(w.isInterleavedBufferAttribute){const A=i(e.data,w.data);M=new ds(A,w.itemSize,w.offset,w.normalized)}else{const A=ao(w.type,w.array);M=new Dt(A,w.itemSize,w.normalized)}w.name!==void 0&&(M.name=w.name),E.push(M)}l.morphAttributes[v]=E}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let v=0,y=p.length;v!==y;++v){const E=p[v];l.addGroup(E.start,E.count,E.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const v=new D;m.center!==void 0&&v.fromArray(m.center),l.boundingSphere=new xi(v,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class aA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?_d.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new sr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?_d.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new sr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new hs().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new cu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new j_;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in Yg?c=Yg[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Au;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Na.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(d)}else return u.data?{data:ao(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new ep(t);s=new Oa(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const v=[];for(let y=0,E=m.length;y<E;y++){const x=m[y],_=c(x);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new po(_.data,_.width,_.height)))}i[p.uuid]=new ss(v)}else{const v=c(p.url);i[p.uuid]=new ss(v)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:ao(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new Oa(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const v=h[p],y=await s(v);y!==null&&(y instanceof HTMLImageElement?d.push(y):d.push(new po(y.data,y.width,y.height)))}n[u.uuid]=new ss(d)}else{const d=await s(u.url);n[u.uuid]=new ss(d)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new Va,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new po:d=new Qt,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,lA)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],Kg),d.wrapT=n(c.wrap[1],Kg)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.encoding!==void 0&&(d.encoding=c.encoding),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,Qg)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,Qg)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const v=[];for(let y=0,E=m.length;y<E;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),v.push(n[x])}return v}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":l=new Hd,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Ue(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new au(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new ou(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":l=new mn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Wa(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new X_(e.color,e.intensity);break;case"DirectionalLight":l=new W_(e.color,e.intensity);break;case"PointLight":l=new G_(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new q_(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new V_(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new H_(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new Z_().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),l=new f_(d,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),l=new yn(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const m=e.count,v=e.instanceMatrix,y=e.instanceColor;l=new d_(d,p,m),l.instanceMatrix=new yo(new Float32Array(v.array),16),y!==void 0&&(l.instanceColor=new yo(new Float32Array(y.array),y.itemSize));break;case"LOD":l=new h_;break;case"Line":l=new Pr(c(e.geometry),u(e.material));break;case"LineLoop":l=new p_(c(e.geometry),u(e.material));break;case"LineSegments":l=new Hi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new m_(c(e.geometry),u(e.material));break;case"Sprite":l=new u_(u(e.material));break;case"Group":l=new co;break;case"Bone":l=new Gd;break;default:l=new Rt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let v=0;v<m.length;v++)l.add(this.parseObject(m[v],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let v=0;v<m.length;v++){const y=m[v];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let v=0;v<m.length;v++){const y=m[v],E=l.getObjectByProperty("uuid",y.object);E!==void 0&&l.addLevel(E,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const lA={UVMapping:$c,CubeReflectionMapping:rr,CubeRefractionMapping:Rr,EquirectangularReflectionMapping:ga,EquirectangularRefractionMapping:va,CubeUVReflectionMapping:So},Kg={RepeatWrapping:_a,ClampToEdgeWrapping:An,MirroredRepeatWrapping:ya},Qg={NearestFilter:jt,NearestMipmapNearestFilter:Yc,NearestMipmapLinearFilter:ua,LinearFilter:Kt,LinearMipmapNearestFilter:Ed,LinearMipmapLinearFilter:Cr};class cA extends Gn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ms.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(u){ms.add(e,u),t&&t(u),s.manager.itemEnd(e)}).catch(function(u){i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let Rc;class np{static getContext(){return Rc===void 0&&(Rc=new(window.AudioContext||window.webkitAudioContext)),Rc}static setContext(e){Rc=e}}class uA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new sr(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);np.getContext().decodeAudioData(h,function(p){t(p)},c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const $g=new lt,e0=new lt,Zr=new lt;class hA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new mn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new mn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Zr.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(cs*t.fov*.5)/t.zoom;let c,u;e0.elements[12]=-i,$g.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,Zr.elements[0]=2*t.near/(u-c),Zr.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Zr),c=-l*t.aspect-s,u=l*t.aspect-s,Zr.elements[0]=2*t.near/(u-c),Zr.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Zr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(e0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply($g)}}class ip{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=t0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=t0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function t0(){return(typeof performance>"u"?Date:performance).now()}const Jr=new D,n0=new Vn,fA=new D,jr=new D;class dA extends Rt{constructor(){super(),this.type="AudioListener",this.context=np.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new ip}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Jr,n0,fA),jr.set(0,0,-1).applyQuaternion(n0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Jr.x,i),t.positionY.linearRampToValueAtTime(Jr.y,i),t.positionZ.linearRampToValueAtTime(Jr.z,i),t.forwardX.linearRampToValueAtTime(jr.x,i),t.forwardY.linearRampToValueAtTime(jr.y,i),t.forwardZ.linearRampToValueAtTime(jr.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Jr.x,Jr.y,Jr.z),t.setOrientation(jr.x,jr.y,jr.z,n.x,n.y,n.z)}}class K_ extends Rt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Kr=new D,i0=new Vn,pA=new D,Qr=new D;class mA extends K_{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Kr,i0,pA),Qr.set(0,0,1).applyQuaternion(i0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Kr.x,n),t.positionY.linearRampToValueAtTime(Kr.y,n),t.positionZ.linearRampToValueAtTime(Kr.z,n),t.orientationX.linearRampToValueAtTime(Qr.x,n),t.orientationY.linearRampToValueAtTime(Qr.y,n),t.orientationZ.linearRampToValueAtTime(Qr.z,n)}else t.setPosition(Kr.x,Kr.y,Kr.z),t.setOrientation(Qr.x,Qr.y,Qr.z)}}class gA{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Q_{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Vn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Vn.multiplyQuaternionsFlat(e,l,e,t,e,n),Vn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const rp="\\[\\]\\.:\\/",vA=new RegExp("["+rp+"]","g"),sp="[^"+rp+"]",_A="[^"+rp.replace("\\.","")+"]",yA=/((?:WC+[\/:])*)/.source.replace("WC",sp),xA=/(WCOD+)?/.source.replace("WCOD",_A),SA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",sp),MA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",sp),EA=new RegExp("^"+yA+xA+SA+MA+"$"),wA=["material","materials","bones","map"];class TA{constructor(e,t,n){const i=n||Et.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Et{constructor(e,t,n){this.path=t,this.parsedPath=n||Et.parseTrackName(t),this.node=Et.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Et.Composite(e,t,n):new Et(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(vA,"")}static parseTrackName(e){const t=EA.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);wA.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Et.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Et.Composite=TA;Et.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Et.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Et.prototype.GetterByBindingType=[Et.prototype._getValue_direct,Et.prototype._getValue_array,Et.prototype._getValue_arrayElement,Et.prototype._getValue_toArray];Et.prototype.SetterByBindingTypeAndVersioning=[[Et.prototype._setValue_direct,Et.prototype._setValue_direct_setNeedsUpdate,Et.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Et.prototype._setValue_array,Et.prototype._setValue_array_setNeedsUpdate,Et.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Et.prototype._setValue_arrayElement,Et.prototype._setValue_arrayElement_setNeedsUpdate,Et.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Et.prototype._setValue_fromArray,Et.prototype._setValue_fromArray_setNeedsUpdate,Et.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class AA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Qn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],v=m.uuid;let y=t[v];if(y===void 0){y=u++,t[v]=y,e.push(m);for(let E=0,x=l;E!==x;++E)s[E].push(new Et(m,n[E],i[E]))}else if(y<h){c=e[y];const E=--h,x=e[E];t[x.uuid]=y,e[y]=x,t[v]=E,e[E]=m;for(let _=0,w=l;_!==w;++_){const M=s[_],A=M[E];let R=M[y];M[y]=A,R===void 0&&(R=new Et(m,n[_],i[_])),M[E]=R}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,d=t[h];if(d!==void 0&&d>=s){const p=s++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=u;for(let v=0,y=i;v!==y;++v){const E=n[v],x=E[p],_=E[d];E[d]=x,E[p]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<s){const m=--s,v=e[m],y=--l,E=e[y];t[v.uuid]=p,e[p]=v,t[E.uuid]=m,e[m]=E,e.pop();for(let x=0,_=i;x!==_;++x){const w=n[x],M=w[m],A=w[y];w[p]=M,w[m]=A,w.pop()}}else{const m=--l,v=e[m];m>0&&(t[v.uuid]=p),e[p]=v,e.pop();for(let y=0,E=i;y!==E;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=d,v=u.length;m!==v;++m){const y=u[m];p[m]=new Et(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class $_{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:is,endingEnd:is};for(let h=0;h!==l;++h){const d=s[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Iv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Pd:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulateAdditive(c);break;case tu:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===Uv;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===Lv){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=rs,i.endingEnd=rs):(e?i.endingStart=this.zeroSlopeAtStart?rs:is:i.endingStart=Ma,t?i.endingEnd=this.zeroSlopeAtEnd?rs:is:i.endingEnd=Ma)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const bA=new Float32Array(1);class RA extends or{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let p=0;p!==s;++p){const m=i[p],v=m.name;let y=d[v];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,v));continue}const E=t&&t._propertyBindings[p].binding.parsedPath;y=new Q_(Et.create(n,v,E),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,v),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Qd(new Float32Array(2),new Float32Array(2),1,bA),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?Na.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=tu),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const d=new $_(this,l,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,s),d}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Na.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class op{constructor(e){this.value=e}clone(){return new op(this.value.clone===void 0?this.value:this.value.clone())}}let CA=0;class PA extends or{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:CA++}),this.name="",this.usage=Aa,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class LA extends lu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class IA{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class ey{constructor(e,t,n=0,i=1/0){this.ray=new Mo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new us,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return yd(e,this,n,t),n.sort(r0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)yd(e[i],this,n,t);return n.sort(r0),n}}function r0(r,e){return r.distance-e.distance}function yd(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)yd(i[s],e,t,!0)}}class UA{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Yt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class DA{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const s0=new ue;class NA{constructor(e=new ue(1/0,1/0),t=new ue(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=s0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,s0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const o0=new D,Cc=new D;class OA{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){o0.subVectors(e,this.start),Cc.subVectors(this.end,this.start);const n=Cc.dot(Cc);let s=Cc.dot(o0)/n;return t&&(s=Yt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const a0=new D;class FA extends Rt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new gt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new ze(i,3));const s=new Dn({fog:!1,toneMapped:!1});this.cone=new Hi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),a0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(a0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Sr=new D,Pc=new lt,mf=new lt;class zA extends Hi{constructor(e){const t=ty(e),n=new gt,i=[],s=[],l=new Ue(0,0,1),c=new Ue(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new ze(i,3)),n.setAttribute("color",new ze(s,3));const u=new Dn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");mf.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Pc.multiplyMatrices(mf,c.matrixWorld),Sr.setFromMatrixPosition(Pc),i.setXYZ(l,Sr.x,Sr.y,Sr.z),Pc.multiplyMatrices(mf,c.parent.matrixWorld),Sr.setFromMatrixPosition(Pc),i.setXYZ(l+1,Sr.x,Sr.y,Sr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function ty(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,ty(r.children[t]));return e}class BA extends yn{constructor(e,t,n){const i=new Ya(t,4,2),s=new Ir({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const kA=new D,l0=new Ue,c0=new Ue;class HA extends Rt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new qa(t);i.rotateY(Math.PI*.5),this.material=new Ir({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new Dt(l,3)),this.add(new yn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");l0.copy(this.light.color),c0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?l0:c0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(kA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class VA extends Hi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ue(n),i=new Ue(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,v=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const E=m===s?n:i;E.toArray(h,v),v+=3,E.toArray(h,v),v+=3,E.toArray(h,v),v+=3,E.toArray(h,v),v+=3}const d=new gt;d.setAttribute("position",new ze(u,3)),d.setAttribute("color",new ze(h,3));const p=new Dn({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class GA extends Hi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new Ue(s),l=new Ue(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),v=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(v,0,y);const E=p&1?s:l;u.push(E.r,E.g,E.b),u.push(E.r,E.g,E.b)}for(let p=0;p<n;p++){const m=p&1?s:l,v=e-e/n*p;for(let y=0;y<i;y++){let E=y/i*(Math.PI*2),x=Math.sin(E)*v,_=Math.cos(E)*v;c.push(x,0,_),u.push(m.r,m.g,m.b),E=(y+1)/i*(Math.PI*2),x=Math.sin(E)*v,_=Math.cos(E)*v,c.push(x,0,_),u.push(m.r,m.g,m.b)}}const h=new gt;h.setAttribute("position",new ze(c,3)),h.setAttribute("color",new ze(u,3));const d=new Dn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const u0=new D,Lc=new D,h0=new D;class WA extends Rt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new gt;i.setAttribute("position",new ze([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Dn({fog:!1,toneMapped:!1});this.lightPlane=new Pr(i,s),this.add(this.lightPlane),i=new gt,i.setAttribute("position",new ze([0,0,0,0,0,1],3)),this.targetLine=new Pr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),u0.setFromMatrixPosition(this.light.matrixWorld),Lc.setFromMatrixPosition(this.light.target.matrixWorld),h0.subVectors(Lc,u0),this.lightPlane.lookAt(Lc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Lc),this.targetLine.scale.z=h0.length()}}const Ic=new D,qt=new Ha;class XA extends Hi{constructor(e){const t=new gt,n=new Dn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,E){u(y),u(E)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new ze(i,3)),t.setAttribute("color",new ze(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new Ue(16755200),d=new Ue(16711680),p=new Ue(43775),m=new Ue(16777215),v=new Ue(3355443);this.setColors(h,d,p,m,v)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;qt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Jt("c",t,e,qt,0,0,-1),Jt("t",t,e,qt,0,0,1),Jt("n1",t,e,qt,-n,-i,-1),Jt("n2",t,e,qt,n,-i,-1),Jt("n3",t,e,qt,-n,i,-1),Jt("n4",t,e,qt,n,i,-1),Jt("f1",t,e,qt,-n,-i,1),Jt("f2",t,e,qt,n,-i,1),Jt("f3",t,e,qt,-n,i,1),Jt("f4",t,e,qt,n,i,1),Jt("u1",t,e,qt,n*.7,i*1.1,-1),Jt("u2",t,e,qt,-n*.7,i*1.1,-1),Jt("u3",t,e,qt,0,i*2,-1),Jt("cf1",t,e,qt,-n,0,1),Jt("cf2",t,e,qt,n,0,1),Jt("cf3",t,e,qt,0,-i,1),Jt("cf4",t,e,qt,0,i,1),Jt("cn1",t,e,qt,-n,0,-1),Jt("cn2",t,e,qt,n,0,-1),Jt("cn3",t,e,qt,0,-i,-1),Jt("cn4",t,e,qt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Jt(r,e,t,n,i,s,l){Ic.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],Ic.x,Ic.y,Ic.z)}}const Uc=new ki;class qA extends Hi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),s=new gt;s.setIndex(new Dt(n,1)),s.setAttribute("position",new Dt(i,3)),super(s,new Dn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Uc.setFromObject(this.object),Uc.isEmpty())return;const t=Uc.min,n=Uc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class YA extends Hi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new gt;s.setIndex(new Dt(n,1)),s.setAttribute("position",new ze(i,3)),super(s,new Dn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class ZA extends Pr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new gt;l.setAttribute("position",new ze(s,3)),l.computeBoundingSphere(),super(l,new Dn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new gt;u.setAttribute("position",new ze(c,3)),u.computeBoundingSphere(),this.add(new yn(u,new Ir({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const f0=new D;let Dc,gf;class JA extends Rt{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Dc===void 0&&(Dc=new gt,Dc.setAttribute("position",new ze([0,0,0,0,1,0],3)),gf=new wo(0,.5,1,5,1),gf.translate(0,-.5,0)),this.position.copy(t),this.line=new Pr(Dc,new Dn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new yn(gf,new Ir({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{f0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(f0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class jA extends Hi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new gt;i.setAttribute("position",new ze(t,3)),i.setAttribute("color",new ze(n,3));const s=new Dn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Ue,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class KA{constructor(){this.type="ShapePath",this.color=new Ue,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ca,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const w=[];for(let M=0,A=_.length;M<A;M++){const R=_[M],P=new hs;P.curves=R.curves,w.push(P)}return w}function n(_,w){const M=w.length;let A=!1;for(let R=M-1,P=0;P<M;R=P++){let U=w[R],F=w[P],b=F.x-U.x,L=F.y-U.y;if(Math.abs(L)>Number.EPSILON){if(L<0&&(U=w[P],b=-b,F=w[R],L=-L),_.y<U.y||_.y>F.y)continue;if(_.y===U.y){if(_.x===U.x)return!0}else{const k=L*(_.x-U.x)-b*(_.y-U.y);if(k===0)return!0;if(k<0)continue;A=!A}}else{if(_.y!==U.y)continue;if(F.x<=_.x&&_.x<=U.x||U.x<=_.x&&_.x<=F.x)return!0}}return A}const i=Fi.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new hs,u.curves=c.curves,h.push(u),h;let d=!i(s[0].getPoints());d=e?!d:d;const p=[],m=[];let v=[],y=0,E;m[y]=void 0,v[y]=[];for(let _=0,w=s.length;_<w;_++)c=s[_],E=c.getPoints(),l=i(E),l=e?!l:l,l?(!d&&m[y]&&y++,m[y]={s:new hs,p:E},m[y].s.curves=c.curves,d&&y++,v[y]=[]):v[y].push({h:c,p:E[0]});if(!m[0])return t(s);if(m.length>1){let _=!1,w=0;for(let M=0,A=m.length;M<A;M++)p[M]=[];for(let M=0,A=m.length;M<A;M++){const R=v[M];for(let P=0;P<R.length;P++){const U=R[P];let F=!0;for(let b=0;b<m.length;b++)n(U.p,m[b].p)&&(M!==b&&w++,F?(F=!1,p[b].push(U)):_=!0);F&&p[M].push(U)}}w>0&&_===!1&&(v=p)}let x;for(let _=0,w=m.length;_<w;_++){u=m[_].s,h.push(u),x=v[_];for(let M=0,A=x.length;M<A;M++)u.holes.push(x[M].h)}return h}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Fa}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Fa);const QA=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Md,AddEquation:wr,AddOperation:gv,AdditiveAnimationBlendMode:Pd,AdditiveBlending:If,AlphaFormat:wv,AlwaysCompare:Wv,AlwaysDepth:cv,AlwaysStencilFunc:cd,AmbientLight:X_,AnimationAction:$_,AnimationClip:Na,AnimationLoader:$T,AnimationMixer:RA,AnimationObjectGroup:AA,AnimationUtils:JT,ArcCurve:g_,ArrayCamera:o_,ArrowHelper:JA,AttachedBindMode:Ff,Audio:K_,AudioAnalyser:gA,AudioContext:np,AudioListener:dA,AudioLoader:uA,AxesHelper:jA,BackSide:Un,BasicDepthPacking:Dv,BasicShadowMap:X0,Bone:Gd,BooleanKeyframeTrack:_s,Box2:NA,Box3:ki,Box3Helper:YA,BoxGeometry:vs,BoxHelper:qA,BufferAttribute:Dt,BufferGeometry:gt,BufferGeometryLoader:j_,ByteType:Mv,Cache:ms,Camera:Ha,CameraHelper:XA,CanvasTexture:yT,CapsuleGeometry:du,CatmullRomCurve3:v_,CineonToneMapping:yv,CircleGeometry:pu,ClampToEdgeWrapping:An,Clock:ip,Color:Ue,ColorKeyframeTrack:$d,ColorManagement:Pt,CompressedArrayTexture:vT,CompressedCubeTexture:_T,CompressedTexture:hu,CompressedTextureLoader:eA,ConeGeometry:mu,ConstantAlphaFactor:ov,ConstantColorFactor:rv,CubeCamera:Qv,CubeReflectionMapping:rr,CubeRefractionMapping:Rr,CubeTexture:Va,CubeTextureLoader:tA,CubeUVReflectionMapping:So,CubicBezierCurve:Xd,CubicBezierCurve3:__,CubicInterpolant:F_,CullFaceBack:Lf,CullFaceFront:W0,CullFaceFrontBack:gx,CullFaceNone:G0,Curve:Si,CurvePath:x_,CustomBlending:q0,CustomToneMapping:xv,CylinderGeometry:wo,Cylindrical:DA,Data3DTexture:Dd,DataArrayTexture:iu,DataTexture:po,DataTextureLoader:nA,DataUtils:wS,DecrementStencilOp:Rx,DecrementWrapStencilOp:Px,DefaultLoadingManager:k_,DepthFormat:Ar,DepthStencilFormat:fs,DepthTexture:a_,DetachedBindMode:Sv,DirectionalLight:W_,DirectionalLightHelper:WA,DiscreteInterpolant:z_,DisplayP3ColorSpace:nu,DodecahedronGeometry:gu,DoubleSide:Ii,DstAlphaFactor:$0,DstColorFactor:tv,DynamicCopyUsage:Wx,DynamicDrawUsage:ls,DynamicReadUsage:Hx,EdgesGeometry:S_,EllipseCurve:fu,EqualCompare:Bv,EqualDepth:hv,EqualStencilFunc:Dx,EquirectangularReflectionMapping:ga,EquirectangularRefractionMapping:va,Euler:ka,EventDispatcher:or,ExtrudeGeometry:_u,FileLoader:sr,Float16BufferAttribute:PS,Float32BufferAttribute:ze,Float64BufferAttribute:LS,FloatType:Ui,Fog:au,FogExp2:ou,FramebufferTexture:gT,FrontSide:ir,Frustum:ru,GLBufferAttribute:IA,GLSL1:qx,GLSL3:ud,GreaterCompare:Hv,GreaterDepth:dv,GreaterEqualCompare:Gv,GreaterEqualDepth:fv,GreaterEqualStencilFunc:zx,GreaterStencilFunc:Ox,GridHelper:VA,Group:co,HalfFloatType:go,HemisphereLight:H_,HemisphereLightHelper:HA,IcosahedronGeometry:yu,ImageBitmapLoader:cA,ImageLoader:Oa,ImageUtils:Ud,IncrementStencilOp:bx,IncrementWrapStencilOp:Cx,InstancedBufferAttribute:yo,InstancedBufferGeometry:J_,InstancedInterleavedBuffer:LA,InstancedMesh:d_,Int16BufferAttribute:RS,Int32BufferAttribute:CS,Int8BufferAttribute:TS,IntType:wd,InterleavedBuffer:lu,InterleavedBufferAttribute:ds,Interpolant:Za,InterpolateDiscrete:xa,InterpolateLinear:Sa,InterpolateSmooth:Vc,InvertStencilOp:Lx,KeepStencilOp:es,KeyframeTrack:Mi,LOD:h_,LatheGeometry:Xa,Layers:us,LessCompare:zv,LessDepth:uv,LessEqualCompare:kv,LessEqualDepth:ma,LessEqualStencilFunc:Nx,LessStencilFunc:Ux,Light:Dr,LightProbe:Z_,Line:Pr,Line3:OA,LineBasicMaterial:Dn,LineCurve:qd,LineCurve3:y_,LineDashedMaterial:D_,LineLoop:p_,LineSegments:Hi,LinearDisplayP3ColorSpace:Ba,LinearEncoding:Ld,LinearFilter:Kt,LinearInterpolant:Qd,LinearMipMapLinearFilter:Sx,LinearMipMapNearestFilter:xx,LinearMipmapLinearFilter:Cr,LinearMipmapNearestFilter:Ed,LinearSRGBColorSpace:zi,LinearToneMapping:vv,LinearTransfer:Ea,Loader:Gn,LoaderUtils:_d,LoadingManager:ep,LoopOnce:Lv,LoopPingPong:Uv,LoopRepeat:Iv,LuminanceAlphaFormat:Av,LuminanceFormat:Tv,MOUSE:px,Material:bn,MaterialLoader:Au,MathUtils:oS,Matrix3:pt,Matrix4:lt,MaxEquation:Of,Mesh:yn,MeshBasicMaterial:Ir,MeshDepthMaterial:zd,MeshDistanceMaterial:Bd,MeshLambertMaterial:I_,MeshMatcapMaterial:U_,MeshNormalMaterial:L_,MeshPhongMaterial:C_,MeshPhysicalMaterial:R_,MeshStandardMaterial:jd,MeshToonMaterial:P_,MinEquation:Nf,MirroredRepeatWrapping:ya,MixOperation:mv,MultiplyBlending:Df,MultiplyOperation:za,NearestFilter:jt,NearestMipMapLinearFilter:yx,NearestMipMapNearestFilter:_x,NearestMipmapLinearFilter:ua,NearestMipmapNearestFilter:Yc,NeverCompare:Fv,NeverDepth:lv,NeverStencilFunc:Ix,NoBlending:nr,NoColorSpace:Kn,NoToneMapping:Ni,NormalAnimationBlendMode:tu,NormalBlending:as,NotEqualCompare:Vv,NotEqualDepth:pv,NotEqualStencilFunc:Fx,NumberKeyframeTrack:Ua,Object3D:Rt,ObjectLoader:aA,ObjectSpaceNormalMap:Ov,OctahedronGeometry:qa,OneFactor:j0,OneMinusConstantAlphaFactor:av,OneMinusConstantColorFactor:sv,OneMinusDstAlphaFactor:ev,OneMinusDstColorFactor:nv,OneMinusSrcAlphaFactor:qc,OneMinusSrcColorFactor:Q0,OrthographicCamera:Wa,P3Primaries:Ta,PCFShadowMap:Qc,PCFSoftShadowMap:ca,PMREMGenerator:fd,Path:Ca,PerspectiveCamera:mn,Plane:Er,PlaneGeometry:Ga,PlaneHelper:ZA,PointLight:G_,PointLightHelper:BA,Points:m_,PointsMaterial:uu,PolarGridHelper:GA,PolyhedronGeometry:Ur,PositionalAudio:mA,PropertyBinding:Et,PropertyMixer:Q_,QuadraticBezierCurve:Yd,QuadraticBezierCurve3:Zd,Quaternion:Vn,QuaternionKeyframeTrack:To,QuaternionLinearInterpolant:B_,RED_GREEN_RGTC2_Format:ad,RED_RGTC1_Format:Pv,REVISION:Fa,RGBADepthPacking:Nv,RGBAFormat:kn,RGBAIntegerFormat:Cd,RGBA_ASTC_10x10_Format:td,RGBA_ASTC_10x5_Format:Qf,RGBA_ASTC_10x6_Format:$f,RGBA_ASTC_10x8_Format:ed,RGBA_ASTC_12x10_Format:nd,RGBA_ASTC_12x12_Format:id,RGBA_ASTC_4x4_Format:Wf,RGBA_ASTC_5x4_Format:Xf,RGBA_ASTC_5x5_Format:qf,RGBA_ASTC_6x5_Format:Yf,RGBA_ASTC_6x6_Format:Zf,RGBA_ASTC_8x5_Format:Jf,RGBA_ASTC_8x6_Format:jf,RGBA_ASTC_8x8_Format:Kf,RGBA_BPTC_Format:Hc,RGBA_ETC2_EAC_Format:Gf,RGBA_PVRTC_2BPPV1_Format:Hf,RGBA_PVRTC_4BPPV1_Format:kf,RGBA_S3TC_DXT1_Format:zc,RGBA_S3TC_DXT3_Format:Bc,RGBA_S3TC_DXT5_Format:kc,RGB_BPTC_SIGNED_Format:rd,RGB_BPTC_UNSIGNED_Format:sd,RGB_ETC1_Format:Cv,RGB_ETC2_Format:Vf,RGB_PVRTC_2BPPV1_Format:Bf,RGB_PVRTC_4BPPV1_Format:zf,RGB_S3TC_DXT1_Format:Fc,RGFormat:Rv,RGIntegerFormat:Rd,RawShaderMaterial:b_,Ray:Mo,Raycaster:ey,Rec709Primaries:wa,RectAreaLight:q_,RedFormat:bv,RedIntegerFormat:bd,ReinhardToneMapping:_v,RenderTarget:Zv,RepeatWrapping:_a,ReplaceStencilOp:Ax,ReverseSubtractEquation:Z0,RingGeometry:xu,SIGNED_RED_GREEN_RGTC2_Format:ld,SIGNED_RED_RGTC1_Format:od,SRGBColorSpace:sn,SRGBTransfer:Nt,Scene:Hd,ShaderChunk:ht,ShaderLib:_i,ShaderMaterial:Bi,ShadowMaterial:A_,Shape:hs,ShapeGeometry:Su,ShapePath:KA,ShapeUtils:Fi,ShortType:Ev,Skeleton:cu,SkeletonHelper:zA,SkinnedMesh:f_,Source:ss,Sphere:xi,SphereGeometry:Ya,Spherical:UA,SphericalHarmonics3:Y_,SplineCurve:Jd,SpotLight:V_,SpotLightHelper:FA,Sprite:u_,SpriteMaterial:Vd,SrcAlphaFactor:Xc,SrcAlphaSaturateFactor:iv,SrcColorFactor:K0,StaticCopyUsage:Gx,StaticDrawUsage:Aa,StaticReadUsage:kx,StereoCamera:hA,StreamCopyUsage:Xx,StreamDrawUsage:Bx,StreamReadUsage:Vx,StringKeyframeTrack:ys,SubtractEquation:Y0,SubtractiveBlending:Uf,TOUCH:mx,TangentSpaceNormalMap:Lr,TetrahedronGeometry:Mu,Texture:Qt,TextureLoader:iA,TorusGeometry:Eu,TorusKnotGeometry:wu,Triangle:Bn,TriangleFanDrawMode:wx,TriangleStripDrawMode:Ex,TrianglesDrawMode:Mx,TubeGeometry:Tu,TwoPassDoubleSide:vx,UVMapping:$c,Uint16BufferAttribute:Nd,Uint32BufferAttribute:Od,Uint8BufferAttribute:AS,Uint8ClampedBufferAttribute:bS,Uniform:op,UniformsGroup:PA,UniformsLib:Te,UniformsUtils:Kv,UnsignedByteType:Oi,UnsignedInt248Type:Tr,UnsignedIntType:tr,UnsignedShort4444Type:Td,UnsignedShort5551Type:Ad,UnsignedShortType:eu,VSMShadowMap:vi,Vector2:ue,Vector3:D,Vector4:Lt,VectorKeyframeTrack:Da,VideoTexture:mT,WebGL1Renderer:l_,WebGL3DRenderTarget:fS,WebGLArrayRenderTarget:hS,WebGLCoordinateSystem:Di,WebGLCubeRenderTarget:$v,WebGLMultipleRenderTargets:dS,WebGLRenderTarget:yi,WebGLRenderer:kd,WebGLUtils:s_,WebGPUCoordinateSystem:ba,WireframeGeometry:T_,WrapAroundEnding:Ma,ZeroCurvatureEnding:is,ZeroFactor:J0,ZeroSlopeEnding:rs,ZeroStencilOp:Tx,_SRGBAFormat:Zc,createCanvasElement:Yv,sRGBEncoding:br},Symbol.toStringTag,{value:"Module"}));var vf={exports:{}},Mr={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var d0;function $A(){return d0||(d0=1,Mr.ConcurrentRoot=1,Mr.ContinuousEventPriority=4,Mr.DefaultEventPriority=16,Mr.DiscreteEventPriority=1,Mr.IdleEventPriority=536870912,Mr.LegacyRoot=0),Mr}var p0;function eb(){return p0||(p0=1,vf.exports=$A()),vf.exports}var ho=eb();function tb(r){let e;const t=new Set,n=(h,d)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=d?p:Object.assign({},e,p),t.forEach(v=>v(e,m))}},i=()=>e,s=(h,d=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=d(e);function v(){const y=d(e);if(!p(m,y)){const E=m;h(m=y,E)}}return t.add(v),()=>t.delete(v)},u={setState:n,getState:i,subscribe:(h,d,p)=>d||p?s(h,d,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const nb=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),m0=nb?Se.useEffect:Se.useLayoutEffect;function ib(r){const e=typeof r=="function"?tb(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=Se.useReducer(x=>x+1,0),l=e.getState(),c=Se.useRef(l),u=Se.useRef(n),h=Se.useRef(i),d=Se.useRef(!1),p=Se.useRef();p.current===void 0&&(p.current=n(l));let m,v=!1;(c.current!==l||u.current!==n||h.current!==i||d.current)&&(m=n(l),v=!i(p.current,m)),m0(()=>{v&&(p.current=m),c.current=l,u.current=n,h.current=i,d.current=!1});const y=Se.useRef(l);m0(()=>{const x=()=>{try{const w=e.getState(),M=u.current(w);h.current(p.current,M)||(c.current=w,p.current=M,s())}catch{d.current=!0,s()}},_=e.subscribe(x);return e.getState()!==y.current&&x(),_},[]);const E=v?m:p.current;return Se.useDebugValue(E),E};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var _f={exports:{}},yf={exports:{}},xf={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var g0;function rb(){return g0||(g0=1,function(r){function e(X,Y){var Z=X.length;X.push(Y);e:for(;0<Z;){var z=Z-1>>>1,j=X[z];if(0<i(j,Y))X[z]=Y,X[Z]=j,Z=z;else break e}}function t(X){return X.length===0?null:X[0]}function n(X){if(X.length===0)return null;var Y=X[0],Z=X.pop();if(Z!==Y){X[0]=Z;e:for(var z=0,j=X.length,fe=j>>>1;z<fe;){var we=2*(z+1)-1,Ae=X[we],ke=we+1,qe=X[ke];if(0>i(Ae,Z))ke<j&&0>i(qe,Ae)?(X[z]=qe,X[ke]=Z,z=ke):(X[z]=Ae,X[we]=Z,z=we);else if(ke<j&&0>i(qe,Z))X[z]=qe,X[ke]=Z,z=ke;else break e}}return Y}function i(X,Y){var Z=X.sortIndex-Y.sortIndex;return Z!==0?Z:X.id-Y.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],d=1,p=null,m=3,v=!1,y=!1,E=!1,x=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function M(X){for(var Y=t(h);Y!==null;){if(Y.callback===null)n(h);else if(Y.startTime<=X)n(h),Y.sortIndex=Y.expirationTime,e(u,Y);else break;Y=t(h)}}function A(X){if(E=!1,M(X),!y)if(t(u)!==null)y=!0,se(R);else{var Y=t(h);Y!==null&&oe(A,Y.startTime-X)}}function R(X,Y){y=!1,E&&(E=!1,_(F),F=-1),v=!0;var Z=m;try{for(M(Y),p=t(u);p!==null&&(!(p.expirationTime>Y)||X&&!k());){var z=p.callback;if(typeof z=="function"){p.callback=null,m=p.priorityLevel;var j=z(p.expirationTime<=Y);Y=r.unstable_now(),typeof j=="function"?p.callback=j:p===t(u)&&n(u),M(Y)}else n(u);p=t(u)}if(p!==null)var fe=!0;else{var we=t(h);we!==null&&oe(A,we.startTime-Y),fe=!1}return fe}finally{p=null,m=Z,v=!1}}var P=!1,U=null,F=-1,b=5,L=-1;function k(){return!(r.unstable_now()-L<b)}function $(){if(U!==null){var X=r.unstable_now();L=X;var Y=!0;try{Y=U(!0,X)}finally{Y?ae():(P=!1,U=null)}}else P=!1}var ae;if(typeof w=="function")ae=function(){w($)};else if(typeof MessageChannel<"u"){var H=new MessageChannel,K=H.port2;H.port1.onmessage=$,ae=function(){K.postMessage(null)}}else ae=function(){x($,0)};function se(X){U=X,P||(P=!0,ae())}function oe(X,Y){F=x(function(){X(r.unstable_now())},Y)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(X){X.callback=null},r.unstable_continueExecution=function(){y||v||(y=!0,se(R))},r.unstable_forceFrameRate=function(X){0>X||125<X?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<X?Math.floor(1e3/X):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(X){switch(m){case 1:case 2:case 3:var Y=3;break;default:Y=m}var Z=m;m=Y;try{return X()}finally{m=Z}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(X,Y){switch(X){case 1:case 2:case 3:case 4:case 5:break;default:X=3}var Z=m;m=X;try{return Y()}finally{m=Z}},r.unstable_scheduleCallback=function(X,Y,Z){var z=r.unstable_now();switch(typeof Z=="object"&&Z!==null?(Z=Z.delay,Z=typeof Z=="number"&&0<Z?z+Z:z):Z=z,X){case 1:var j=-1;break;case 2:j=250;break;case 5:j=1073741823;break;case 4:j=1e4;break;default:j=5e3}return j=Z+j,X={id:d++,callback:Y,priorityLevel:X,startTime:Z,expirationTime:j,sortIndex:-1},Z>z?(X.sortIndex=Z,e(h,X),t(u)===null&&X===t(h)&&(E?(_(F),F=-1):E=!0,oe(A,Z-z))):(X.sortIndex=j,e(u,X),y||v||(y=!0,se(R))),X},r.unstable_shouldYield=k,r.unstable_wrapCallback=function(X){var Y=m;return function(){var Z=m;m=Y;try{return X.apply(this,arguments)}finally{m=Z}}}}(xf)),xf}var v0;function ny(){return v0||(v0=1,yf.exports=rb()),yf.exports}/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Sf,_0;function sb(){return _0||(_0=1,Sf=function(e){var t={},n=hx(),i=ny(),s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,f=1;f<arguments.length;f++)a+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),y=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),M=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),R=Symbol.iterator;function P(o){return o===null||typeof o!="object"?null:(o=R&&o[R]||o["@@iterator"],typeof o=="function"?o:null)}function U(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case d:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case _:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case v:return(o._context.displayName||"Context")+".Provider";case E:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case w:return a=o.displayName||null,a!==null?a:U(o.type)||"Memo";case M:a=o._payload,o=o._init;try{return U(o(a))}catch{}}return null}function F(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function b(o){var a=o,f=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,(a.flags&4098)!==0&&(f=a.return),o=a.return;while(o)}return a.tag===3?f:null}function L(o){if(b(o)!==o)throw Error(l(188))}function k(o){var a=o.alternate;if(!a){if(a=b(o),a===null)throw Error(l(188));return a!==o?null:o}for(var f=o,g=a;;){var S=f.return;if(S===null)break;var T=S.alternate;if(T===null){if(g=S.return,g!==null){f=g;continue}break}if(S.child===T.child){for(T=S.child;T;){if(T===f)return L(S),o;if(T===g)return L(S),a;T=T.sibling}throw Error(l(188))}if(f.return!==g.return)f=S,g=T;else{for(var N=!1,G=S.child;G;){if(G===f){N=!0,f=S,g=T;break}if(G===g){N=!0,g=S,f=T;break}G=G.sibling}if(!N){for(G=T.child;G;){if(G===f){N=!0,f=T,g=S;break}if(G===g){N=!0,g=T,f=S;break}G=G.sibling}if(!N)throw Error(l(189))}}if(f.alternate!==g)throw Error(l(190))}if(f.tag!==3)throw Error(l(188));return f.stateNode.current===f?o:a}function $(o){return o=k(o),o!==null?ae(o):null}function ae(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=ae(o);if(a!==null)return a;o=o.sibling}return null}function H(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=H(o);if(a!==null)return a}o=o.sibling}return null}var K=Array.isArray,se=e.getPublicInstance,oe=e.getRootHostContext,X=e.getChildHostContext,Y=e.prepareForCommit,Z=e.resetAfterCommit,z=e.createInstance,j=e.appendInitialChild,fe=e.finalizeInitialChildren,we=e.prepareUpdate,Ae=e.shouldSetTextContent,ke=e.createTextInstance,qe=e.scheduleTimeout,Je=e.cancelTimeout,it=e.noTimeout,_t=e.isPrimaryRenderer,Be=e.supportsMutation,B=e.supportsPersistence,pe=e.supportsHydration,ce=e.getInstanceFromNode,me=e.preparePortalMount,he=e.getCurrentEventPriority,Xe=e.detachDeletedInstance,Le=e.supportsMicrotasks,Oe=e.scheduleMicrotask,Qe=e.supportsTestSelectors,vt=e.findFiberRoot,zt=e.getBoundingRect,O=e.getTextContent,C=e.isHiddenSubtree,Q=e.matchAccessibilityRole,ge=e.setFocusIfFocusable,de=e.setupIntersectionObserver,ve=e.appendChild,He=e.appendChildToContainer,Me=e.commitTextUpdate,Re=e.commitMount,nt=e.commitUpdate,Mt=e.insertBefore,ye=e.insertInContainerBefore,Ct=e.removeChild,at=e.removeChildFromContainer,et=e.resetTextContent,Ze=e.hideInstance,De=e.hideTextInstance,xt=e.unhideInstance,V=e.unhideTextInstance,Ce=e.clearContainer,xe=e.cloneInstance,le=e.createContainerChildSet,Ee=e.appendChildToContainerChildSet,je=e.finalizeContainerChildren,St=e.replaceContainerChildren,kt=e.cloneHiddenInstance,Rn=e.cloneHiddenTextInstance,It=e.canHydrateInstance,gn=e.canHydrateTextInstance,$n=e.canHydrateSuspenseInstance,Ao=e.isSuspenseInstancePending,bo=e.isSuspenseInstanceFallback,xs=e.registerSuspenseInstanceRetry,ar=e.getNextHydratableSibling,Ss=e.getFirstHydratableChild,ja=e.getFirstHydratableChildWithinContainer,Ka=e.getFirstHydratableChildWithinSuspenseInstance,Ru=e.hydrateInstance,Cu=e.hydrateTextInstance,Pu=e.hydrateSuspenseInstance,I=e.getNextHydratableInstanceAfterSuspenseInstance,q=e.commitHydratedContainer,ee=e.commitHydratedSuspenseInstance,ne=e.clearSuspenseBoundary,ie=e.clearSuspenseBoundaryFromContainer,Ie=e.shouldDeleteUnhydratedTailInstances,Ge=e.didNotMatchHydratedContainerTextInstance,Ke=e.didNotMatchHydratedTextInstance,$e;function st(o){if($e===void 0)try{throw Error()}catch(f){var a=f.stack.trim().match(/\n( *(at )?)/);$e=a&&a[1]||""}return`
`+$e+o}var rt=!1;function ot(o,a){if(!o||rt)return"";rt=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(_e){var g=_e}Reflect.construct(o,[],a)}else{try{a.call()}catch(_e){g=_e}o.call(a.prototype)}else{try{throw Error()}catch(_e){g=_e}o()}}catch(_e){if(_e&&g&&typeof _e.stack=="string"){for(var S=_e.stack.split(`
`),T=g.stack.split(`
`),N=S.length-1,G=T.length-1;1<=N&&0<=G&&S[N]!==T[G];)G--;for(;1<=N&&0<=G;N--,G--)if(S[N]!==T[G]){if(N!==1||G!==1)do if(N--,G--,0>G||S[N]!==T[G]){var re=`
`+S[N].replace(" at new "," at ");return o.displayName&&re.includes("<anonymous>")&&(re=re.replace("<anonymous>",o.displayName)),re}while(1<=N&&0<=G);break}}}finally{rt=!1,Error.prepareStackTrace=f}return(o=o?o.displayName||o.name:"")?st(o):""}var Ht=Object.prototype.hasOwnProperty,vn=[],Ot=-1;function ln(o){return{current:o}}function tt(o){0>Ot||(o.current=vn[Ot],vn[Ot]=null,Ot--)}function Fe(o,a){Ot++,vn[Ot]=o.current,o.current=a}var ei={},yt=ln(ei),Wt=ln(!1),Ei=ei;function ti(o,a){var f=o.type.contextTypes;if(!f)return ei;var g=o.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===a)return g.__reactInternalMemoizedMaskedChildContext;var S={},T;for(T in f)S[T]=a[T];return g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=S),S}function cn(o){return o=o.childContextTypes,o!=null}function $t(){tt(Wt),tt(yt)}function wi(o,a,f){if(yt.current!==ei)throw Error(l(168));Fe(yt,a),Fe(Wt,f)}function Ms(o,a,f){var g=o.stateNode;if(a=a.childContextTypes,typeof g.getChildContext!="function")return f;g=g.getChildContext();for(var S in g)if(!(S in a))throw Error(l(108,F(o)||"Unknown",S));return s({},f,g)}function un(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||ei,Ei=yt.current,Fe(yt,o),Fe(Wt,Wt.current),!0}function Es(o,a,f){var g=o.stateNode;if(!g)throw Error(l(169));f?(o=Ms(o,a,Ei),g.__reactInternalMemoizedMergedChildContext=o,tt(Wt),tt(yt),Fe(yt,o)):tt(Wt),Fe(Wt,f)}var Wn=Math.clz32?Math.clz32:My,Qa=Math.log,Sy=Math.LN2;function My(o){return o>>>=0,o===0?32:31-(Qa(o)/Sy|0)|0}var $a=64,el=4194304;function Ro(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function tl(o,a){var f=o.pendingLanes;if(f===0)return 0;var g=0,S=o.suspendedLanes,T=o.pingedLanes,N=f&268435455;if(N!==0){var G=N&~S;G!==0?g=Ro(G):(T&=N,T!==0&&(g=Ro(T)))}else N=f&~S,N!==0?g=Ro(N):T!==0&&(g=Ro(T));if(g===0)return 0;if(a!==0&&a!==g&&(a&S)===0&&(S=g&-g,T=a&-a,S>=T||S===16&&(T&4194240)!==0))return a;if((g&4)!==0&&(g|=f&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=g;0<a;)f=31-Wn(a),S=1<<f,g|=o[f],a&=~S;return g}function Ey(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function wy(o,a){for(var f=o.suspendedLanes,g=o.pingedLanes,S=o.expirationTimes,T=o.pendingLanes;0<T;){var N=31-Wn(T),G=1<<N,re=S[N];re===-1?((G&f)===0||(G&g)!==0)&&(S[N]=Ey(G,a)):re<=a&&(o.expiredLanes|=G),T&=~G}}function Lu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Iu(o){for(var a=[],f=0;31>f;f++)a.push(o);return a}function Co(o,a,f){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-Wn(a),o[a]=f}function Ty(o,a){var f=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var g=o.eventTimes;for(o=o.expirationTimes;0<f;){var S=31-Wn(f),T=1<<S;a[S]=0,g[S]=-1,o[S]=-1,f&=~T}}function Uu(o,a){var f=o.entangledLanes|=a;for(o=o.entanglements;f;){var g=31-Wn(f),S=1<<g;S&a|o[g]&a&&(o[g]|=a),f&=~S}}var Tt=0;function cp(o){return o&=-o,1<o?4<o?(o&268435455)!==0?16:536870912:4:1}var Du=i.unstable_scheduleCallback,up=i.unstable_cancelCallback,Ay=i.unstable_shouldYield,by=i.unstable_requestPaint,hn=i.unstable_now,Nu=i.unstable_ImmediatePriority,Ry=i.unstable_UserBlockingPriority,Ou=i.unstable_NormalPriority,Cy=i.unstable_IdlePriority,nl=null,Ti=null;function Py(o){if(Ti&&typeof Ti.onCommitFiberRoot=="function")try{Ti.onCommitFiberRoot(nl,o,void 0,(o.current.flags&128)===128)}catch{}}function Ly(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var Ai=typeof Object.is=="function"?Object.is:Ly,Vi=null,il=!1,Fu=!1;function hp(o){Vi===null?Vi=[o]:Vi.push(o)}function Iy(o){il=!0,hp(o)}function bi(){if(!Fu&&Vi!==null){Fu=!0;var o=0,a=Tt;try{var f=Vi;for(Tt=1;o<f.length;o++){var g=f[o];do g=g(!0);while(g!==null)}Vi=null,il=!1}catch(S){throw Vi!==null&&(Vi=Vi.slice(o+1)),Du(Nu,bi),S}finally{Tt=a,Fu=!1}}return null}var Uy=c.ReactCurrentBatchConfig;function rl(o,a){if(Ai(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var f=Object.keys(o),g=Object.keys(a);if(f.length!==g.length)return!1;for(g=0;g<f.length;g++){var S=f[g];if(!Ht.call(a,S)||!Ai(o[S],a[S]))return!1}return!0}function Dy(o){switch(o.tag){case 5:return st(o.type);case 16:return st("Lazy");case 13:return st("Suspense");case 19:return st("SuspenseList");case 0:case 2:case 15:return o=ot(o.type,!1),o;case 11:return o=ot(o.type.render,!1),o;case 1:return o=ot(o.type,!0),o;default:return""}}function fi(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var f in o)a[f]===void 0&&(a[f]=o[f]);return a}return a}var sl=ln(null),ol=null,ws=null,zu=null;function Bu(){zu=ws=ol=null}function fp(o,a,f){_t?(Fe(sl,a._currentValue),a._currentValue=f):(Fe(sl,a._currentValue2),a._currentValue2=f)}function ku(o){var a=sl.current;tt(sl),_t?o._currentValue=a:o._currentValue2=a}function Hu(o,a,f){for(;o!==null;){var g=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,g!==null&&(g.childLanes|=a)):g!==null&&(g.childLanes&a)!==a&&(g.childLanes|=a),o===f)break;o=o.return}}function Ts(o,a){ol=o,zu=ws=null,o=o.dependencies,o!==null&&o.firstContext!==null&&((o.lanes&a)!==0&&(Yn=!0),o.firstContext=null)}function ni(o){var a=_t?o._currentValue:o._currentValue2;if(zu!==o)if(o={context:o,memoizedValue:a,next:null},ws===null){if(ol===null)throw Error(l(308));ws=o,ol.dependencies={lanes:0,firstContext:o}}else ws=ws.next=o;return a}var Ri=null,lr=!1;function Vu(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function dp(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Gi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function cr(o,a){var f=o.updateQueue;f!==null&&(f=f.shared,en!==null&&(o.mode&1)!==0&&(mt&2)===0?(o=f.interleaved,o===null?(a.next=a,Ri===null?Ri=[f]:Ri.push(f)):(a.next=o.next,o.next=a),f.interleaved=a):(o=f.pending,o===null?a.next=a:(a.next=o.next,o.next=a),f.pending=a))}function al(o,a,f){if(a=a.updateQueue,a!==null&&(a=a.shared,(f&4194240)!==0)){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,Uu(o,f)}}function pp(o,a){var f=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,f===g)){var S=null,T=null;if(f=f.firstBaseUpdate,f!==null){do{var N={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};T===null?S=T=N:T=T.next=N,f=f.next}while(f!==null);T===null?S=T=a:T=T.next=a}else S=T=a;f={baseState:g.baseState,firstBaseUpdate:S,lastBaseUpdate:T,shared:g.shared,effects:g.effects},o.updateQueue=f;return}o=f.lastBaseUpdate,o===null?f.firstBaseUpdate=a:o.next=a,f.lastBaseUpdate=a}function ll(o,a,f,g){var S=o.updateQueue;lr=!1;var T=S.firstBaseUpdate,N=S.lastBaseUpdate,G=S.shared.pending;if(G!==null){S.shared.pending=null;var re=G,_e=re.next;re.next=null,N===null?T=_e:N.next=_e,N=re;var Ne=o.alternate;Ne!==null&&(Ne=Ne.updateQueue,G=Ne.lastBaseUpdate,G!==N&&(G===null?Ne.firstBaseUpdate=_e:G.next=_e,Ne.lastBaseUpdate=re))}if(T!==null){var ct=S.baseState;N=0,Ne=_e=re=null,G=T;do{var Ye=G.lane,Ut=G.eventTime;if((g&Ye)===Ye){Ne!==null&&(Ne=Ne.next={eventTime:Ut,lane:0,tag:G.tag,payload:G.payload,callback:G.callback,next:null});e:{var We=o,En=G;switch(Ye=a,Ut=f,En.tag){case 1:if(We=En.payload,typeof We=="function"){ct=We.call(Ut,ct,Ye);break e}ct=We;break e;case 3:We.flags=We.flags&-65537|128;case 0:if(We=En.payload,Ye=typeof We=="function"?We.call(Ut,ct,Ye):We,Ye==null)break e;ct=s({},ct,Ye);break e;case 2:lr=!0}}G.callback!==null&&G.lane!==0&&(o.flags|=64,Ye=S.effects,Ye===null?S.effects=[G]:Ye.push(G))}else Ut={eventTime:Ut,lane:Ye,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Ne===null?(_e=Ne=Ut,re=ct):Ne=Ne.next=Ut,N|=Ye;if(G=G.next,G===null){if(G=S.shared.pending,G===null)break;Ye=G,G=Ye.next,Ye.next=null,S.lastBaseUpdate=Ye,S.shared.pending=null}}while(!0);if(Ne===null&&(re=ct),S.baseState=re,S.firstBaseUpdate=_e,S.lastBaseUpdate=Ne,a=S.shared.interleaved,a!==null){S=a;do N|=S.lane,S=S.next;while(S!==a)}else T===null&&(S.shared.lanes=0);Ds|=N,o.lanes=N,o.memoizedState=ct}}function mp(o,a,f){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var g=o[a],S=g.callback;if(S!==null){if(g.callback=null,g=f,typeof S!="function")throw Error(l(191,S));S.call(g)}}}var gp=new n.Component().refs;function Gu(o,a,f,g){a=o.memoizedState,f=f(g,a),f=f==null?a:s({},a,f),o.memoizedState=f,o.lanes===0&&(o.updateQueue.baseState=f)}var cl={isMounted:function(o){return(o=o._reactInternals)?b(o)===o:!1},enqueueSetState:function(o,a,f){o=o._reactInternals;var g=Pn(),S=fr(o),T=Gi(g,S);T.payload=a,f!=null&&(T.callback=f),cr(o,T),a=ai(o,S,g),a!==null&&al(a,o,S)},enqueueReplaceState:function(o,a,f){o=o._reactInternals;var g=Pn(),S=fr(o),T=Gi(g,S);T.tag=1,T.payload=a,f!=null&&(T.callback=f),cr(o,T),a=ai(o,S,g),a!==null&&al(a,o,S)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var f=Pn(),g=fr(o),S=Gi(f,g);S.tag=2,a!=null&&(S.callback=a),cr(o,S),a=ai(o,g,f),a!==null&&al(a,o,g)}};function vp(o,a,f,g,S,T,N){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,T,N):a.prototype&&a.prototype.isPureReactComponent?!rl(f,g)||!rl(S,T):!0}function _p(o,a,f){var g=!1,S=ei,T=a.contextType;return typeof T=="object"&&T!==null?T=ni(T):(S=cn(a)?Ei:yt.current,g=a.contextTypes,T=(g=g!=null)?ti(o,S):ei),a=new a(f,T),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=cl,o.stateNode=a,a._reactInternals=o,g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=T),a}function yp(o,a,f,g){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(f,g),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(f,g),a.state!==o&&cl.enqueueReplaceState(a,a.state,null)}function Wu(o,a,f,g){var S=o.stateNode;S.props=f,S.state=o.memoizedState,S.refs=gp,Vu(o);var T=a.contextType;typeof T=="object"&&T!==null?S.context=ni(T):(T=cn(a)?Ei:yt.current,S.context=ti(o,T)),S.state=o.memoizedState,T=a.getDerivedStateFromProps,typeof T=="function"&&(Gu(o,a,T,f),S.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(a=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),a!==S.state&&cl.enqueueReplaceState(S,S.state,null),ll(o,f,S,g),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var As=[],bs=0,ul=null,hl=0,ii=[],ri=0,Nr=null,Wi=1,Xi="";function Or(o,a){As[bs++]=hl,As[bs++]=ul,ul=o,hl=a}function xp(o,a,f){ii[ri++]=Wi,ii[ri++]=Xi,ii[ri++]=Nr,Nr=o;var g=Wi;o=Xi;var S=32-Wn(g)-1;g&=~(1<<S),f+=1;var T=32-Wn(a)+S;if(30<T){var N=S-S%5;T=(g&(1<<N)-1).toString(32),g>>=N,S-=N,Wi=1<<32-Wn(a)+S|f<<S|g,Xi=T+o}else Wi=1<<T|f<<S|g,Xi=o}function Xu(o){o.return!==null&&(Or(o,1),xp(o,1,0))}function qu(o){for(;o===ul;)ul=As[--bs],As[bs]=null,hl=As[--bs],As[bs]=null;for(;o===Nr;)Nr=ii[--ri],ii[ri]=null,Xi=ii[--ri],ii[ri]=null,Wi=ii[--ri],ii[ri]=null}var Xn=null,qn=null,Bt=!1,Po=!1,di=null;function Sp(o,a){var f=li(5,null,null,0);f.elementType="DELETED",f.stateNode=a,f.return=o,a=o.deletions,a===null?(o.deletions=[f],o.flags|=16):a.push(f)}function Mp(o,a){switch(o.tag){case 5:return a=It(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,Xn=o,qn=Ss(a),!0):!1;case 6:return a=gn(a,o.pendingProps),a!==null?(o.stateNode=a,Xn=o,qn=null,!0):!1;case 13:if(a=$n(a),a!==null){var f=Nr!==null?{id:Wi,overflow:Xi}:null;return o.memoizedState={dehydrated:a,treeContext:f,retryLane:1073741824},f=li(18,null,null,0),f.stateNode=a,f.return=o,o.child=f,Xn=o,qn=null,!0}return!1;default:return!1}}function Yu(o){return(o.mode&1)!==0&&(o.flags&128)===0}function Zu(o){if(Bt){var a=qn;if(a){var f=a;if(!Mp(o,a)){if(Yu(o))throw Error(l(418));a=ar(f);var g=Xn;a&&Mp(o,a)?Sp(g,f):(o.flags=o.flags&-4097|2,Bt=!1,Xn=o)}}else{if(Yu(o))throw Error(l(418));o.flags=o.flags&-4097|2,Bt=!1,Xn=o}}}function Ep(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;Xn=o}function Lo(o){if(!pe||o!==Xn)return!1;if(!Bt)return Ep(o),Bt=!0,!1;if(o.tag!==3&&(o.tag!==5||Ie(o.type)&&!Ae(o.type,o.memoizedProps))){var a=qn;if(a){if(Yu(o)){for(o=qn;o;)o=ar(o);throw Error(l(418))}for(;a;)Sp(o,a),a=ar(a)}}if(Ep(o),o.tag===13){if(!pe)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));qn=I(o)}else qn=Xn?ar(o.stateNode):null;return!0}function Rs(){pe&&(qn=Xn=null,Po=Bt=!1)}function Ju(o){di===null?di=[o]:di.push(o)}function Io(o,a,f){if(o=f.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(l(309));var g=f.stateNode}if(!g)throw Error(l(147,o));var S=g,T=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===T?a.ref:(a=function(N){var G=S.refs;G===gp&&(G=S.refs={}),N===null?delete G[T]:G[T]=N},a._stringRef=T,a)}if(typeof o!="string")throw Error(l(284));if(!f._owner)throw Error(l(290,o))}return o}function fl(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function wp(o){var a=o._init;return a(o._payload)}function Tp(o){function a(J,W){if(o){var te=J.deletions;te===null?(J.deletions=[W],J.flags|=16):te.push(W)}}function f(J,W){if(!o)return null;for(;W!==null;)a(J,W),W=W.sibling;return null}function g(J,W){for(J=new Map;W!==null;)W.key!==null?J.set(W.key,W):J.set(W.index,W),W=W.sibling;return J}function S(J,W){return J=pr(J,W),J.index=0,J.sibling=null,J}function T(J,W,te){return J.index=te,o?(te=J.alternate,te!==null?(te=te.index,te<W?(J.flags|=2,W):te):(J.flags|=2,W)):(J.flags|=1048576,W)}function N(J){return o&&J.alternate===null&&(J.flags|=2),J}function G(J,W,te,Pe){return W===null||W.tag!==6?(W=Ih(te,J.mode,Pe),W.return=J,W):(W=S(W,te),W.return=J,W)}function re(J,W,te,Pe){var Ve=te.type;return Ve===d?Ne(J,W,te.props.children,Pe,te.key):W!==null&&(W.elementType===Ve||typeof Ve=="object"&&Ve!==null&&Ve.$$typeof===M&&wp(Ve)===W.type)?(Pe=S(W,te.props),Pe.ref=Io(J,W,te),Pe.return=J,Pe):(Pe=Gl(te.type,te.key,te.props,null,J.mode,Pe),Pe.ref=Io(J,W,te),Pe.return=J,Pe)}function _e(J,W,te,Pe){return W===null||W.tag!==4||W.stateNode.containerInfo!==te.containerInfo||W.stateNode.implementation!==te.implementation?(W=Uh(te,J.mode,Pe),W.return=J,W):(W=S(W,te.children||[]),W.return=J,W)}function Ne(J,W,te,Pe,Ve){return W===null||W.tag!==7?(W=Gr(te,J.mode,Pe,Ve),W.return=J,W):(W=S(W,te),W.return=J,W)}function ct(J,W,te){if(typeof W=="string"&&W!==""||typeof W=="number")return W=Ih(""+W,J.mode,te),W.return=J,W;if(typeof W=="object"&&W!==null){switch(W.$$typeof){case u:return te=Gl(W.type,W.key,W.props,null,J.mode,te),te.ref=Io(J,null,W),te.return=J,te;case h:return W=Uh(W,J.mode,te),W.return=J,W;case M:var Pe=W._init;return ct(J,Pe(W._payload),te)}if(K(W)||P(W))return W=Gr(W,J.mode,te,null),W.return=J,W;fl(J,W)}return null}function Ye(J,W,te,Pe){var Ve=W!==null?W.key:null;if(typeof te=="string"&&te!==""||typeof te=="number")return Ve!==null?null:G(J,W,""+te,Pe);if(typeof te=="object"&&te!==null){switch(te.$$typeof){case u:return te.key===Ve?re(J,W,te,Pe):null;case h:return te.key===Ve?_e(J,W,te,Pe):null;case M:return Ve=te._init,Ye(J,W,Ve(te._payload),Pe)}if(K(te)||P(te))return Ve!==null?null:Ne(J,W,te,Pe,null);fl(J,te)}return null}function Ut(J,W,te,Pe,Ve){if(typeof Pe=="string"&&Pe!==""||typeof Pe=="number")return J=J.get(te)||null,G(W,J,""+Pe,Ve);if(typeof Pe=="object"&&Pe!==null){switch(Pe.$$typeof){case u:return J=J.get(Pe.key===null?te:Pe.key)||null,re(W,J,Pe,Ve);case h:return J=J.get(Pe.key===null?te:Pe.key)||null,_e(W,J,Pe,Ve);case M:var dt=Pe._init;return Ut(J,W,te,dt(Pe._payload),Ve)}if(K(Pe)||P(Pe))return J=J.get(te)||null,Ne(W,J,Pe,Ve,null);fl(W,Pe)}return null}function We(J,W,te,Pe){for(var Ve=null,dt=null,ut=W,At=W=0,dn=null;ut!==null&&At<te.length;At++){ut.index>At?(dn=ut,ut=null):dn=ut.sibling;var bt=Ye(J,ut,te[At],Pe);if(bt===null){ut===null&&(ut=dn);break}o&&ut&&bt.alternate===null&&a(J,ut),W=T(bt,W,At),dt===null?Ve=bt:dt.sibling=bt,dt=bt,ut=dn}if(At===te.length)return f(J,ut),Bt&&Or(J,At),Ve;if(ut===null){for(;At<te.length;At++)ut=ct(J,te[At],Pe),ut!==null&&(W=T(ut,W,At),dt===null?Ve=ut:dt.sibling=ut,dt=ut);return Bt&&Or(J,At),Ve}for(ut=g(J,ut);At<te.length;At++)dn=Ut(ut,J,At,te[At],Pe),dn!==null&&(o&&dn.alternate!==null&&ut.delete(dn.key===null?At:dn.key),W=T(dn,W,At),dt===null?Ve=dn:dt.sibling=dn,dt=dn);return o&&ut.forEach(function(mr){return a(J,mr)}),Bt&&Or(J,At),Ve}function En(J,W,te,Pe){var Ve=P(te);if(typeof Ve!="function")throw Error(l(150));if(te=Ve.call(te),te==null)throw Error(l(151));for(var dt=Ve=null,ut=W,At=W=0,dn=null,bt=te.next();ut!==null&&!bt.done;At++,bt=te.next()){ut.index>At?(dn=ut,ut=null):dn=ut.sibling;var mr=Ye(J,ut,bt.value,Pe);if(mr===null){ut===null&&(ut=dn);break}o&&ut&&mr.alternate===null&&a(J,ut),W=T(mr,W,At),dt===null?Ve=mr:dt.sibling=mr,dt=mr,ut=dn}if(bt.done)return f(J,ut),Bt&&Or(J,At),Ve;if(ut===null){for(;!bt.done;At++,bt=te.next())bt=ct(J,bt.value,Pe),bt!==null&&(W=T(bt,W,At),dt===null?Ve=bt:dt.sibling=bt,dt=bt);return Bt&&Or(J,At),Ve}for(ut=g(J,ut);!bt.done;At++,bt=te.next())bt=Ut(ut,J,At,bt.value,Pe),bt!==null&&(o&&bt.alternate!==null&&ut.delete(bt.key===null?At:bt.key),W=T(bt,W,At),dt===null?Ve=bt:dt.sibling=bt,dt=bt);return o&&ut.forEach(function(ux){return a(J,ux)}),Bt&&Or(J,At),Ve}function ci(J,W,te,Pe){if(typeof te=="object"&&te!==null&&te.type===d&&te.key===null&&(te=te.props.children),typeof te=="object"&&te!==null){switch(te.$$typeof){case u:e:{for(var Ve=te.key,dt=W;dt!==null;){if(dt.key===Ve){if(Ve=te.type,Ve===d){if(dt.tag===7){f(J,dt.sibling),W=S(dt,te.props.children),W.return=J,J=W;break e}}else if(dt.elementType===Ve||typeof Ve=="object"&&Ve!==null&&Ve.$$typeof===M&&wp(Ve)===dt.type){f(J,dt.sibling),W=S(dt,te.props),W.ref=Io(J,dt,te),W.return=J,J=W;break e}f(J,dt);break}else a(J,dt);dt=dt.sibling}te.type===d?(W=Gr(te.props.children,J.mode,Pe,te.key),W.return=J,J=W):(Pe=Gl(te.type,te.key,te.props,null,J.mode,Pe),Pe.ref=Io(J,W,te),Pe.return=J,J=Pe)}return N(J);case h:e:{for(dt=te.key;W!==null;){if(W.key===dt)if(W.tag===4&&W.stateNode.containerInfo===te.containerInfo&&W.stateNode.implementation===te.implementation){f(J,W.sibling),W=S(W,te.children||[]),W.return=J,J=W;break e}else{f(J,W);break}else a(J,W);W=W.sibling}W=Uh(te,J.mode,Pe),W.return=J,J=W}return N(J);case M:return dt=te._init,ci(J,W,dt(te._payload),Pe)}if(K(te))return We(J,W,te,Pe);if(P(te))return En(J,W,te,Pe);fl(J,te)}return typeof te=="string"&&te!==""||typeof te=="number"?(te=""+te,W!==null&&W.tag===6?(f(J,W.sibling),W=S(W,te),W.return=J,J=W):(f(J,W),W=Ih(te,J.mode,Pe),W.return=J,J=W),N(J)):f(J,W)}return ci}var Cs=Tp(!0),Ap=Tp(!1),Uo={},si=ln(Uo),Do=ln(Uo),Ps=ln(Uo);function Ci(o){if(o===Uo)throw Error(l(174));return o}function ju(o,a){Fe(Ps,a),Fe(Do,o),Fe(si,Uo),o=oe(a),tt(si),Fe(si,o)}function Ls(){tt(si),tt(Do),tt(Ps)}function bp(o){var a=Ci(Ps.current),f=Ci(si.current);a=X(f,o.type,a),f!==a&&(Fe(Do,o),Fe(si,a))}function Ku(o){Do.current===o&&(tt(si),tt(Do))}var Vt=ln(0);function dl(o){for(var a=o;a!==null;){if(a.tag===13){var f=a.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||Ao(f)||bo(f)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if((a.flags&128)!==0)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var Qu=[];function $u(){for(var o=0;o<Qu.length;o++){var a=Qu[o];_t?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}Qu.length=0}var pl=c.ReactCurrentDispatcher,oi=c.ReactCurrentBatchConfig,Is=0,Xt=null,xn=null,fn=null,ml=!1,No=!1,Oo=0,Ny=0;function Sn(){throw Error(l(321))}function eh(o,a){if(a===null)return!1;for(var f=0;f<a.length&&f<o.length;f++)if(!Ai(o[f],a[f]))return!1;return!0}function th(o,a,f,g,S,T){if(Is=T,Xt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,pl.current=o===null||o.memoizedState===null?By:ky,o=f(g,S),No){T=0;do{if(No=!1,Oo=0,25<=T)throw Error(l(301));T+=1,fn=xn=null,a.updateQueue=null,pl.current=Hy,o=f(g,S)}while(No)}if(pl.current=xl,a=xn!==null&&xn.next!==null,Is=0,fn=xn=Xt=null,ml=!1,a)throw Error(l(300));return o}function nh(){var o=Oo!==0;return Oo=0,o}function qi(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return fn===null?Xt.memoizedState=fn=o:fn=fn.next=o,fn}function Pi(){if(xn===null){var o=Xt.alternate;o=o!==null?o.memoizedState:null}else o=xn.next;var a=fn===null?Xt.memoizedState:fn.next;if(a!==null)fn=a,xn=o;else{if(o===null)throw Error(l(310));xn=o,o={memoizedState:xn.memoizedState,baseState:xn.baseState,baseQueue:xn.baseQueue,queue:xn.queue,next:null},fn===null?Xt.memoizedState=fn=o:fn=fn.next=o}return fn}function Fr(o,a){return typeof a=="function"?a(o):a}function gl(o){var a=Pi(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=xn,S=g.baseQueue,T=f.pending;if(T!==null){if(S!==null){var N=S.next;S.next=T.next,T.next=N}g.baseQueue=S=T,f.pending=null}if(S!==null){T=S.next,g=g.baseState;var G=N=null,re=null,_e=T;do{var Ne=_e.lane;if((Is&Ne)===Ne)re!==null&&(re=re.next={lane:0,action:_e.action,hasEagerState:_e.hasEagerState,eagerState:_e.eagerState,next:null}),g=_e.hasEagerState?_e.eagerState:o(g,_e.action);else{var ct={lane:Ne,action:_e.action,hasEagerState:_e.hasEagerState,eagerState:_e.eagerState,next:null};re===null?(G=re=ct,N=g):re=re.next=ct,Xt.lanes|=Ne,Ds|=Ne}_e=_e.next}while(_e!==null&&_e!==T);re===null?N=g:re.next=G,Ai(g,a.memoizedState)||(Yn=!0),a.memoizedState=g,a.baseState=N,a.baseQueue=re,f.lastRenderedState=g}if(o=f.interleaved,o!==null){S=o;do T=S.lane,Xt.lanes|=T,Ds|=T,S=S.next;while(S!==o)}else S===null&&(f.lanes=0);return[a.memoizedState,f.dispatch]}function vl(o){var a=Pi(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=f.dispatch,S=f.pending,T=a.memoizedState;if(S!==null){f.pending=null;var N=S=S.next;do T=o(T,N.action),N=N.next;while(N!==S);Ai(T,a.memoizedState)||(Yn=!0),a.memoizedState=T,a.baseQueue===null&&(a.baseState=T),f.lastRenderedState=T}return[T,g]}function Rp(){}function Cp(o,a){var f=Xt,g=Pi(),S=a(),T=!Ai(g.memoizedState,S);if(T&&(g.memoizedState=S,Yn=!0),g=g.queue,zo(Ip.bind(null,f,g,o),[o]),g.getSnapshot!==a||T||fn!==null&&fn.memoizedState.tag&1){if(f.flags|=2048,Fo(9,Lp.bind(null,f,g,S,a),void 0,null),en===null)throw Error(l(349));(Is&30)!==0||Pp(f,a,S)}return S}function Pp(o,a,f){o.flags|=16384,o={getSnapshot:a,value:f},a=Xt.updateQueue,a===null?(a={lastEffect:null,stores:null},Xt.updateQueue=a,a.stores=[o]):(f=a.stores,f===null?a.stores=[o]:f.push(o))}function Lp(o,a,f,g){a.value=f,a.getSnapshot=g,Up(a)&&ai(o,1,-1)}function Ip(o,a,f){return f(function(){Up(a)&&ai(o,1,-1)})}function Up(o){var a=o.getSnapshot;o=o.value;try{var f=a();return!Ai(o,f)}catch{return!0}}function ih(o){var a=qi();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Fr,lastRenderedState:o},a.queue=o,o=o.dispatch=zy.bind(null,Xt,o),[a.memoizedState,o]}function Fo(o,a,f,g){return o={tag:o,create:a,destroy:f,deps:g,next:null},a=Xt.updateQueue,a===null?(a={lastEffect:null,stores:null},Xt.updateQueue=a,a.lastEffect=o.next=o):(f=a.lastEffect,f===null?a.lastEffect=o.next=o:(g=f.next,f.next=o,o.next=g,a.lastEffect=o)),o}function Dp(){return Pi().memoizedState}function _l(o,a,f,g){var S=qi();Xt.flags|=o,S.memoizedState=Fo(1|a,f,void 0,g===void 0?null:g)}function yl(o,a,f,g){var S=Pi();g=g===void 0?null:g;var T=void 0;if(xn!==null){var N=xn.memoizedState;if(T=N.destroy,g!==null&&eh(g,N.deps)){S.memoizedState=Fo(a,f,T,g);return}}Xt.flags|=o,S.memoizedState=Fo(1|a,f,T,g)}function rh(o,a){return _l(8390656,8,o,a)}function zo(o,a){return yl(2048,8,o,a)}function Np(o,a){return yl(4,2,o,a)}function Op(o,a){return yl(4,4,o,a)}function Fp(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function zp(o,a,f){return f=f!=null?f.concat([o]):null,yl(4,4,Fp.bind(null,a,o),f)}function sh(){}function Bp(o,a){var f=Pi();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&eh(a,g[1])?g[0]:(f.memoizedState=[o,a],o)}function kp(o,a){var f=Pi();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&eh(a,g[1])?g[0]:(o=o(),f.memoizedState=[o,a],o)}function Oy(o,a){var f=Tt;Tt=f!==0&&4>f?f:4,o(!0);var g=oi.transition;oi.transition={};try{o(!1),a()}finally{Tt=f,oi.transition=g}}function Hp(){return Pi().memoizedState}function Fy(o,a,f){var g=fr(o);f={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null},Vp(o)?Gp(a,f):(Wp(o,a,f),f=Pn(),o=ai(o,g,f),o!==null&&Xp(o,a,g))}function zy(o,a,f){var g=fr(o),S={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null};if(Vp(o))Gp(a,S);else{Wp(o,a,S);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=a.lastRenderedReducer,T!==null))try{var N=a.lastRenderedState,G=T(N,f);if(S.hasEagerState=!0,S.eagerState=G,Ai(G,N))return}catch{}finally{}f=Pn(),o=ai(o,g,f),o!==null&&Xp(o,a,g)}}function Vp(o){var a=o.alternate;return o===Xt||a!==null&&a===Xt}function Gp(o,a){No=ml=!0;var f=o.pending;f===null?a.next=a:(a.next=f.next,f.next=a),o.pending=a}function Wp(o,a,f){en!==null&&(o.mode&1)!==0&&(mt&2)===0?(o=a.interleaved,o===null?(f.next=f,Ri===null?Ri=[a]:Ri.push(a)):(f.next=o.next,o.next=f),a.interleaved=f):(o=a.pending,o===null?f.next=f:(f.next=o.next,o.next=f),a.pending=f)}function Xp(o,a,f){if((f&4194240)!==0){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,Uu(o,f)}}var xl={readContext:ni,useCallback:Sn,useContext:Sn,useEffect:Sn,useImperativeHandle:Sn,useInsertionEffect:Sn,useLayoutEffect:Sn,useMemo:Sn,useReducer:Sn,useRef:Sn,useState:Sn,useDebugValue:Sn,useDeferredValue:Sn,useTransition:Sn,useMutableSource:Sn,useSyncExternalStore:Sn,useId:Sn,unstable_isNewReconciler:!1},By={readContext:ni,useCallback:function(o,a){return qi().memoizedState=[o,a===void 0?null:a],o},useContext:ni,useEffect:rh,useImperativeHandle:function(o,a,f){return f=f!=null?f.concat([o]):null,_l(4194308,4,Fp.bind(null,a,o),f)},useLayoutEffect:function(o,a){return _l(4194308,4,o,a)},useInsertionEffect:function(o,a){return _l(4,2,o,a)},useMemo:function(o,a){var f=qi();return a=a===void 0?null:a,o=o(),f.memoizedState=[o,a],o},useReducer:function(o,a,f){var g=qi();return a=f!==void 0?f(a):a,g.memoizedState=g.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},g.queue=o,o=o.dispatch=Fy.bind(null,Xt,o),[g.memoizedState,o]},useRef:function(o){var a=qi();return o={current:o},a.memoizedState=o},useState:ih,useDebugValue:sh,useDeferredValue:function(o){var a=ih(o),f=a[0],g=a[1];return rh(function(){var S=oi.transition;oi.transition={};try{g(o)}finally{oi.transition=S}},[o]),f},useTransition:function(){var o=ih(!1),a=o[0];return o=Oy.bind(null,o[1]),qi().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,f){var g=Xt,S=qi();if(Bt){if(f===void 0)throw Error(l(407));f=f()}else{if(f=a(),en===null)throw Error(l(349));(Is&30)!==0||Pp(g,a,f)}S.memoizedState=f;var T={value:f,getSnapshot:a};return S.queue=T,rh(Ip.bind(null,g,T,o),[o]),g.flags|=2048,Fo(9,Lp.bind(null,g,T,f,a),void 0,null),f},useId:function(){var o=qi(),a=en.identifierPrefix;if(Bt){var f=Xi,g=Wi;f=(g&~(1<<32-Wn(g)-1)).toString(32)+f,a=":"+a+"R"+f,f=Oo++,0<f&&(a+="H"+f.toString(32)),a+=":"}else f=Ny++,a=":"+a+"r"+f.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},ky={readContext:ni,useCallback:Bp,useContext:ni,useEffect:zo,useImperativeHandle:zp,useInsertionEffect:Np,useLayoutEffect:Op,useMemo:kp,useReducer:gl,useRef:Dp,useState:function(){return gl(Fr)},useDebugValue:sh,useDeferredValue:function(o){var a=gl(Fr),f=a[0],g=a[1];return zo(function(){var S=oi.transition;oi.transition={};try{g(o)}finally{oi.transition=S}},[o]),f},useTransition:function(){var o=gl(Fr)[0],a=Pi().memoizedState;return[o,a]},useMutableSource:Rp,useSyncExternalStore:Cp,useId:Hp,unstable_isNewReconciler:!1},Hy={readContext:ni,useCallback:Bp,useContext:ni,useEffect:zo,useImperativeHandle:zp,useInsertionEffect:Np,useLayoutEffect:Op,useMemo:kp,useReducer:vl,useRef:Dp,useState:function(){return vl(Fr)},useDebugValue:sh,useDeferredValue:function(o){var a=vl(Fr),f=a[0],g=a[1];return zo(function(){var S=oi.transition;oi.transition={};try{g(o)}finally{oi.transition=S}},[o]),f},useTransition:function(){var o=vl(Fr)[0],a=Pi().memoizedState;return[o,a]},useMutableSource:Rp,useSyncExternalStore:Cp,useId:Hp,unstable_isNewReconciler:!1};function oh(o,a){try{var f="",g=a;do f+=Dy(g),g=g.return;while(g);var S=f}catch(T){S=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:a,stack:S}}function ah(o,a){try{console.error(a.value)}catch(f){setTimeout(function(){throw f})}}var Vy=typeof WeakMap=="function"?WeakMap:Map;function qp(o,a,f){f=Gi(-1,f),f.tag=3,f.payload={element:null};var g=a.value;return f.callback=function(){Ol||(Ol=!0,Th=g),ah(o,a)},f}function Yp(o,a,f){f=Gi(-1,f),f.tag=3;var g=o.type.getDerivedStateFromError;if(typeof g=="function"){var S=a.value;f.payload=function(){return g(S)},f.callback=function(){ah(o,a)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(f.callback=function(){ah(o,a),typeof g!="function"&&(ur===null?ur=new Set([this]):ur.add(this));var N=a.stack;this.componentDidCatch(a.value,{componentStack:N!==null?N:""})}),f}function Zp(o,a,f){var g=o.pingCache;if(g===null){g=o.pingCache=new Vy;var S=new Set;g.set(a,S)}else S=g.get(a),S===void 0&&(S=new Set,g.set(a,S));S.has(f)||(S.add(f),o=nx.bind(null,o,a,f),a.then(o,o))}function Jp(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function jp(o,a,f,g,S){return(o.mode&1)===0?(o===a?o.flags|=65536:(o.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(a=Gi(-1,1),a.tag=2,cr(f,a))),f.lanes|=1),o):(o.flags|=65536,o.lanes=S,o)}function Li(o){o.flags|=4}function Kp(o,a){if(o!==null&&o.child===a.child)return!0;if((a.flags&16)!==0)return!1;for(o=a.child;o!==null;){if((o.flags&12854)!==0||(o.subtreeFlags&12854)!==0)return!1;o=o.sibling}return!0}var Bo,ko,Sl,Ml;if(Be)Bo=function(o,a){for(var f=a.child;f!==null;){if(f.tag===5||f.tag===6)j(o,f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===a)break;for(;f.sibling===null;){if(f.return===null||f.return===a)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},ko=function(){},Sl=function(o,a,f,g,S){if(o=o.memoizedProps,o!==g){var T=a.stateNode,N=Ci(si.current);f=we(T,f,o,g,S,N),(a.updateQueue=f)&&Li(a)}},Ml=function(o,a,f,g){f!==g&&Li(a)};else if(B){Bo=function(o,a,f,g){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;f&&g&&(T=kt(T,S.type,S.memoizedProps,S)),j(o,T)}else if(S.tag===6)T=S.stateNode,f&&g&&(T=Rn(T,S.memoizedProps,S)),j(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Bo(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var Qp=function(o,a,f,g){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;f&&g&&(T=kt(T,S.type,S.memoizedProps,S)),Ee(o,T)}else if(S.tag===6)T=S.stateNode,f&&g&&(T=Rn(T,S.memoizedProps,S)),Ee(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Qp(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};ko=function(o,a){var f=a.stateNode;if(!Kp(o,a)){o=f.containerInfo;var g=le(o);Qp(g,a,!1,!1),f.pendingChildren=g,Li(a),je(o,g)}},Sl=function(o,a,f,g,S){var T=o.stateNode,N=o.memoizedProps;if((o=Kp(o,a))&&N===g)a.stateNode=T;else{var G=a.stateNode,re=Ci(si.current),_e=null;N!==g&&(_e=we(G,f,N,g,S,re)),o&&_e===null?a.stateNode=T:(T=xe(T,_e,f,N,g,a,o,G),fe(T,f,g,S,re)&&Li(a),a.stateNode=T,o?Li(a):Bo(T,a,!1,!1))}},Ml=function(o,a,f,g){f!==g?(o=Ci(Ps.current),f=Ci(si.current),a.stateNode=ke(g,o,f,a),Li(a)):a.stateNode=o.stateNode}}else ko=function(){},Sl=function(){},Ml=function(){};function Ho(o,a){if(!Bt)switch(o.tailMode){case"hidden":a=o.tail;for(var f=null;a!==null;)a.alternate!==null&&(f=a),a=a.sibling;f===null?o.tail=null:f.sibling=null;break;case"collapsed":f=o.tail;for(var g=null;f!==null;)f.alternate!==null&&(g=f),f=f.sibling;g===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function Mn(o){var a=o.alternate!==null&&o.alternate.child===o.child,f=0,g=0;if(a)for(var S=o.child;S!==null;)f|=S.lanes|S.childLanes,g|=S.subtreeFlags&14680064,g|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)f|=S.lanes|S.childLanes,g|=S.subtreeFlags,g|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=g,o.childLanes=f,a}function Gy(o,a,f){var g=a.pendingProps;switch(qu(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Mn(a),null;case 1:return cn(a.type)&&$t(),Mn(a),null;case 3:return g=a.stateNode,Ls(),tt(Wt),tt(yt),$u(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(o===null||o.child===null)&&(Lo(a)?Li(a):o===null||o.memoizedState.isDehydrated&&(a.flags&256)===0||(a.flags|=1024,di!==null&&(Rh(di),di=null))),ko(o,a),Mn(a),null;case 5:Ku(a),f=Ci(Ps.current);var S=a.type;if(o!==null&&a.stateNode!=null)Sl(o,a,S,g,f),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!g){if(a.stateNode===null)throw Error(l(166));return Mn(a),null}if(o=Ci(si.current),Lo(a)){if(!pe)throw Error(l(175));o=Ru(a.stateNode,a.type,a.memoizedProps,f,o,a,!Po),a.updateQueue=o,o!==null&&Li(a)}else{var T=z(S,g,f,o,a);Bo(T,a,!1,!1),a.stateNode=T,fe(T,S,g,f,o)&&Li(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return Mn(a),null;case 6:if(o&&a.stateNode!=null)Ml(o,a,o.memoizedProps,g);else{if(typeof g!="string"&&a.stateNode===null)throw Error(l(166));if(o=Ci(Ps.current),f=Ci(si.current),Lo(a)){if(!pe)throw Error(l(176));if(o=a.stateNode,g=a.memoizedProps,(f=Cu(o,g,a,!Po))&&(S=Xn,S!==null))switch(T=(S.mode&1)!==0,S.tag){case 3:Ge(S.stateNode.containerInfo,o,g,T);break;case 5:Ke(S.type,S.memoizedProps,S.stateNode,o,g,T)}f&&Li(a)}else a.stateNode=ke(g,o,f,a)}return Mn(a),null;case 13:if(tt(Vt),g=a.memoizedState,Bt&&qn!==null&&(a.mode&1)!==0&&(a.flags&128)===0){for(o=qn;o;)o=ar(o);return Rs(),a.flags|=98560,a}if(g!==null&&g.dehydrated!==null){if(g=Lo(a),o===null){if(!g)throw Error(l(318));if(!pe)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Pu(o,a)}else Rs(),(a.flags&128)===0&&(a.memoizedState=null),a.flags|=4;return Mn(a),null}return di!==null&&(Rh(di),di=null),(a.flags&128)!==0?(a.lanes=f,a):(g=g!==null,f=!1,o===null?Lo(a):f=o.memoizedState!==null,g&&!f&&(a.child.flags|=8192,(a.mode&1)!==0&&(o===null||(Vt.current&1)!==0?rn===0&&(rn=3):Ph())),a.updateQueue!==null&&(a.flags|=4),Mn(a),null);case 4:return Ls(),ko(o,a),o===null&&me(a.stateNode.containerInfo),Mn(a),null;case 10:return ku(a.type._context),Mn(a),null;case 17:return cn(a.type)&&$t(),Mn(a),null;case 19:if(tt(Vt),S=a.memoizedState,S===null)return Mn(a),null;if(g=(a.flags&128)!==0,T=S.rendering,T===null)if(g)Ho(S,!1);else{if(rn!==0||o!==null&&(o.flags&128)!==0)for(o=a.child;o!==null;){if(T=dl(o),T!==null){for(a.flags|=128,Ho(S,!1),o=T.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=f,g=a.child;g!==null;)f=g,S=o,f.flags&=14680066,T=f.alternate,T===null?(f.childLanes=0,f.lanes=S,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=T.childLanes,f.lanes=T.lanes,f.child=T.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=T.memoizedProps,f.memoizedState=T.memoizedState,f.updateQueue=T.updateQueue,f.type=T.type,S=T.dependencies,f.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),g=g.sibling;return Fe(Vt,Vt.current&1|2),a.child}o=o.sibling}S.tail!==null&&hn()>wh&&(a.flags|=128,g=!0,Ho(S,!1),a.lanes=4194304)}else{if(!g)if(o=dl(T),o!==null){if(a.flags|=128,g=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),Ho(S,!0),S.tail===null&&S.tailMode==="hidden"&&!T.alternate&&!Bt)return Mn(a),null}else 2*hn()-S.renderingStartTime>wh&&f!==1073741824&&(a.flags|=128,g=!0,Ho(S,!1),a.lanes=4194304);S.isBackwards?(T.sibling=a.child,a.child=T):(o=S.last,o!==null?o.sibling=T:a.child=T,S.last=T)}return S.tail!==null?(a=S.tail,S.rendering=a,S.tail=a.sibling,S.renderingStartTime=hn(),a.sibling=null,o=Vt.current,Fe(Vt,g?o&1|2:o&1),a):(Mn(a),null);case 22:case 23:return Ch(),g=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==g&&(a.flags|=8192),g&&(a.mode&1)!==0?(Zn&1073741824)!==0&&(Mn(a),Be&&a.subtreeFlags&6&&(a.flags|=8192)):Mn(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var Wy=c.ReactCurrentOwner,Yn=!1;function Cn(o,a,f,g){a.child=o===null?Ap(a,null,f,g):Cs(a,o.child,f,g)}function $p(o,a,f,g,S){f=f.render;var T=a.ref;return Ts(a,S),g=th(o,a,f,g,T,S),f=nh(),o!==null&&!Yn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,Yi(o,a,S)):(Bt&&f&&Xu(a),a.flags|=1,Cn(o,a,g,S),a.child)}function em(o,a,f,g,S){if(o===null){var T=f.type;return typeof T=="function"&&!Lh(T)&&T.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(a.tag=15,a.type=T,tm(o,a,T,g,S)):(o=Gl(f.type,null,g,a,a.mode,S),o.ref=a.ref,o.return=a,a.child=o)}if(T=o.child,(o.lanes&S)===0){var N=T.memoizedProps;if(f=f.compare,f=f!==null?f:rl,f(N,g)&&o.ref===a.ref)return Yi(o,a,S)}return a.flags|=1,o=pr(T,g),o.ref=a.ref,o.return=a,a.child=o}function tm(o,a,f,g,S){if(o!==null&&rl(o.memoizedProps,g)&&o.ref===a.ref)if(Yn=!1,(o.lanes&S)!==0)(o.flags&131072)!==0&&(Yn=!0);else return a.lanes=o.lanes,Yi(o,a,S);return lh(o,a,f,g,S)}function nm(o,a,f){var g=a.pendingProps,S=g.children,T=o!==null?o.memoizedState:null;if(g.mode==="hidden")if((a.mode&1)===0)a.memoizedState={baseLanes:0,cachePool:null},Fe(Us,Zn),Zn|=f;else if((f&1073741824)!==0)a.memoizedState={baseLanes:0,cachePool:null},g=T!==null?T.baseLanes:f,Fe(Us,Zn),Zn|=g;else return o=T!==null?T.baseLanes|f:f,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,Fe(Us,Zn),Zn|=o,null;else T!==null?(g=T.baseLanes|f,a.memoizedState=null):g=f,Fe(Us,Zn),Zn|=g;return Cn(o,a,S,f),a.child}function im(o,a){var f=a.ref;(o===null&&f!==null||o!==null&&o.ref!==f)&&(a.flags|=512,a.flags|=2097152)}function lh(o,a,f,g,S){var T=cn(f)?Ei:yt.current;return T=ti(a,T),Ts(a,S),f=th(o,a,f,g,T,S),g=nh(),o!==null&&!Yn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,Yi(o,a,S)):(Bt&&g&&Xu(a),a.flags|=1,Cn(o,a,f,S),a.child)}function rm(o,a,f,g,S){if(cn(f)){var T=!0;un(a)}else T=!1;if(Ts(a,S),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),_p(a,f,g),Wu(a,f,g,S),g=!0;else if(o===null){var N=a.stateNode,G=a.memoizedProps;N.props=G;var re=N.context,_e=f.contextType;typeof _e=="object"&&_e!==null?_e=ni(_e):(_e=cn(f)?Ei:yt.current,_e=ti(a,_e));var Ne=f.getDerivedStateFromProps,ct=typeof Ne=="function"||typeof N.getSnapshotBeforeUpdate=="function";ct||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(G!==g||re!==_e)&&yp(a,N,g,_e),lr=!1;var Ye=a.memoizedState;N.state=Ye,ll(a,g,N,S),re=a.memoizedState,G!==g||Ye!==re||Wt.current||lr?(typeof Ne=="function"&&(Gu(a,f,Ne,g),re=a.memoizedState),(G=lr||vp(a,f,G,g,Ye,re,_e))?(ct||typeof N.UNSAFE_componentWillMount!="function"&&typeof N.componentWillMount!="function"||(typeof N.componentWillMount=="function"&&N.componentWillMount(),typeof N.UNSAFE_componentWillMount=="function"&&N.UNSAFE_componentWillMount()),typeof N.componentDidMount=="function"&&(a.flags|=4194308)):(typeof N.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=g,a.memoizedState=re),N.props=g,N.state=re,N.context=_e,g=G):(typeof N.componentDidMount=="function"&&(a.flags|=4194308),g=!1)}else{N=a.stateNode,dp(o,a),G=a.memoizedProps,_e=a.type===a.elementType?G:fi(a.type,G),N.props=_e,ct=a.pendingProps,Ye=N.context,re=f.contextType,typeof re=="object"&&re!==null?re=ni(re):(re=cn(f)?Ei:yt.current,re=ti(a,re));var Ut=f.getDerivedStateFromProps;(Ne=typeof Ut=="function"||typeof N.getSnapshotBeforeUpdate=="function")||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(G!==ct||Ye!==re)&&yp(a,N,g,re),lr=!1,Ye=a.memoizedState,N.state=Ye,ll(a,g,N,S);var We=a.memoizedState;G!==ct||Ye!==We||Wt.current||lr?(typeof Ut=="function"&&(Gu(a,f,Ut,g),We=a.memoizedState),(_e=lr||vp(a,f,_e,g,Ye,We,re)||!1)?(Ne||typeof N.UNSAFE_componentWillUpdate!="function"&&typeof N.componentWillUpdate!="function"||(typeof N.componentWillUpdate=="function"&&N.componentWillUpdate(g,We,re),typeof N.UNSAFE_componentWillUpdate=="function"&&N.UNSAFE_componentWillUpdate(g,We,re)),typeof N.componentDidUpdate=="function"&&(a.flags|=4),typeof N.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof N.componentDidUpdate!="function"||G===o.memoizedProps&&Ye===o.memoizedState||(a.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||G===o.memoizedProps&&Ye===o.memoizedState||(a.flags|=1024),a.memoizedProps=g,a.memoizedState=We),N.props=g,N.state=We,N.context=re,g=_e):(typeof N.componentDidUpdate!="function"||G===o.memoizedProps&&Ye===o.memoizedState||(a.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||G===o.memoizedProps&&Ye===o.memoizedState||(a.flags|=1024),g=!1)}return ch(o,a,f,g,T,S)}function ch(o,a,f,g,S,T){im(o,a);var N=(a.flags&128)!==0;if(!g&&!N)return S&&Es(a,f,!1),Yi(o,a,T);g=a.stateNode,Wy.current=a;var G=N&&typeof f.getDerivedStateFromError!="function"?null:g.render();return a.flags|=1,o!==null&&N?(a.child=Cs(a,o.child,null,T),a.child=Cs(a,null,G,T)):Cn(o,a,G,T),a.memoizedState=g.state,S&&Es(a,f,!0),a.child}function sm(o){var a=o.stateNode;a.pendingContext?wi(o,a.pendingContext,a.pendingContext!==a.context):a.context&&wi(o,a.context,!1),ju(o,a.containerInfo)}function om(o,a,f,g,S){return Rs(),Ju(S),a.flags|=256,Cn(o,a,f,g),a.child}var El={dehydrated:null,treeContext:null,retryLane:0};function wl(o){return{baseLanes:o,cachePool:null}}function am(o,a,f){var g=a.pendingProps,S=Vt.current,T=!1,N=(a.flags&128)!==0,G;if((G=N)||(G=o!==null&&o.memoizedState===null?!1:(S&2)!==0),G?(T=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),Fe(Vt,S&1),o===null)return Zu(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?((a.mode&1)===0?a.lanes=1:bo(o)?a.lanes=8:a.lanes=1073741824,null):(S=g.children,o=g.fallback,T?(g=a.mode,T=a.child,S={mode:"hidden",children:S},(g&1)===0&&T!==null?(T.childLanes=0,T.pendingProps=S):T=Wl(S,g,0,null),o=Gr(o,g,f,null),T.return=a,o.return=a,T.sibling=o,a.child=T,a.child.memoizedState=wl(f),a.memoizedState=El,o):uh(a,S));if(S=o.memoizedState,S!==null){if(G=S.dehydrated,G!==null){if(N)return a.flags&256?(a.flags&=-257,Tl(o,a,f,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(T=g.fallback,S=a.mode,g=Wl({mode:"visible",children:g.children},S,0,null),T=Gr(T,S,f,null),T.flags|=2,g.return=a,T.return=a,g.sibling=T,a.child=g,(a.mode&1)!==0&&Cs(a,o.child,null,f),a.child.memoizedState=wl(f),a.memoizedState=El,T);if((a.mode&1)===0)a=Tl(o,a,f,null);else if(bo(G))a=Tl(o,a,f,Error(l(419)));else if(g=(f&o.childLanes)!==0,Yn||g){if(g=en,g!==null){switch(f&-f){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}g=(T&(g.suspendedLanes|f))!==0?0:T,g!==0&&g!==S.retryLane&&(S.retryLane=g,ai(o,g,-1))}Ph(),a=Tl(o,a,f,Error(l(421)))}else Ao(G)?(a.flags|=128,a.child=o.child,a=ix.bind(null,o),xs(G,a),a=null):(f=S.treeContext,pe&&(qn=Ka(G),Xn=a,Bt=!0,di=null,Po=!1,f!==null&&(ii[ri++]=Wi,ii[ri++]=Xi,ii[ri++]=Nr,Wi=f.id,Xi=f.overflow,Nr=a)),a=uh(a,a.pendingProps.children),a.flags|=4096);return a}return T?(g=cm(o,a,g.children,g.fallback,f),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?wl(f):{baseLanes:S.baseLanes|f,cachePool:null},T.childLanes=o.childLanes&~f,a.memoizedState=El,g):(f=lm(o,a,g.children,f),a.memoizedState=null,f)}return T?(g=cm(o,a,g.children,g.fallback,f),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?wl(f):{baseLanes:S.baseLanes|f,cachePool:null},T.childLanes=o.childLanes&~f,a.memoizedState=El,g):(f=lm(o,a,g.children,f),a.memoizedState=null,f)}function uh(o,a){return a=Wl({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function lm(o,a,f,g){var S=o.child;return o=S.sibling,f=pr(S,{mode:"visible",children:f}),(a.mode&1)===0&&(f.lanes=g),f.return=a,f.sibling=null,o!==null&&(g=a.deletions,g===null?(a.deletions=[o],a.flags|=16):g.push(o)),a.child=f}function cm(o,a,f,g,S){var T=a.mode;o=o.child;var N=o.sibling,G={mode:"hidden",children:f};return(T&1)===0&&a.child!==o?(f=a.child,f.childLanes=0,f.pendingProps=G,a.deletions=null):(f=pr(o,G),f.subtreeFlags=o.subtreeFlags&14680064),N!==null?g=pr(N,g):(g=Gr(g,T,S,null),g.flags|=2),g.return=a,f.return=a,f.sibling=g,a.child=f,g}function Tl(o,a,f,g){return g!==null&&Ju(g),Cs(a,o.child,null,f),o=uh(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function um(o,a,f){o.lanes|=a;var g=o.alternate;g!==null&&(g.lanes|=a),Hu(o.return,a,f)}function hh(o,a,f,g,S){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:g,tail:f,tailMode:S}:(T.isBackwards=a,T.rendering=null,T.renderingStartTime=0,T.last=g,T.tail=f,T.tailMode=S)}function hm(o,a,f){var g=a.pendingProps,S=g.revealOrder,T=g.tail;if(Cn(o,a,g.children,f),g=Vt.current,(g&2)!==0)g=g&1|2,a.flags|=128;else{if(o!==null&&(o.flags&128)!==0)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&um(o,f,a);else if(o.tag===19)um(o,f,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}if(Fe(Vt,g),(a.mode&1)===0)a.memoizedState=null;else switch(S){case"forwards":for(f=a.child,S=null;f!==null;)o=f.alternate,o!==null&&dl(o)===null&&(S=f),f=f.sibling;f=S,f===null?(S=a.child,a.child=null):(S=f.sibling,f.sibling=null),hh(a,!1,S,f,T);break;case"backwards":for(f=null,S=a.child,a.child=null;S!==null;){if(o=S.alternate,o!==null&&dl(o)===null){a.child=S;break}o=S.sibling,S.sibling=f,f=S,S=o}hh(a,!0,f,null,T);break;case"together":hh(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function Yi(o,a,f){if(o!==null&&(a.dependencies=o.dependencies),Ds|=a.lanes,(f&a.childLanes)===0)return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,f=pr(o,o.pendingProps),a.child=f,f.return=a;o.sibling!==null;)o=o.sibling,f=f.sibling=pr(o,o.pendingProps),f.return=a;f.sibling=null}return a.child}function Xy(o,a,f){switch(a.tag){case 3:sm(a),Rs();break;case 5:bp(a);break;case 1:cn(a.type)&&un(a);break;case 4:ju(a,a.stateNode.containerInfo);break;case 10:fp(a,a.type._context,a.memoizedProps.value);break;case 13:var g=a.memoizedState;if(g!==null)return g.dehydrated!==null?(Fe(Vt,Vt.current&1),a.flags|=128,null):(f&a.child.childLanes)!==0?am(o,a,f):(Fe(Vt,Vt.current&1),o=Yi(o,a,f),o!==null?o.sibling:null);Fe(Vt,Vt.current&1);break;case 19:if(g=(f&a.childLanes)!==0,(o.flags&128)!==0){if(g)return hm(o,a,f);a.flags|=128}var S=a.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),Fe(Vt,Vt.current),g)break;return null;case 22:case 23:return a.lanes=0,nm(o,a,f)}return Yi(o,a,f)}function qy(o,a){switch(qu(a),a.tag){case 1:return cn(a.type)&&$t(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return Ls(),tt(Wt),tt(yt),$u(),o=a.flags,(o&65536)!==0&&(o&128)===0?(a.flags=o&-65537|128,a):null;case 5:return Ku(a),null;case 13:if(tt(Vt),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));Rs()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return tt(Vt),null;case 4:return Ls(),null;case 10:return ku(a.type._context),null;case 22:case 23:return Ch(),null;case 24:return null;default:return null}}var Al=!1,zr=!1,Yy=typeof WeakSet=="function"?WeakSet:Set,be=null;function bl(o,a){var f=o.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(g){Fn(o,a,g)}else f.current=null}function fh(o,a,f){try{f()}catch(g){Fn(o,a,g)}}var fm=!1;function Zy(o,a){for(Y(o.containerInfo),be=a;be!==null;)if(o=be,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,be=a;else for(;be!==null;){o=be;try{var f=o.alternate;if((o.flags&1024)!==0)switch(o.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var g=f.memoizedProps,S=f.memoizedState,T=o.stateNode,N=T.getSnapshotBeforeUpdate(o.elementType===o.type?g:fi(o.type,g),S);T.__reactInternalSnapshotBeforeUpdate=N}break;case 3:Be&&Ce(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(G){Fn(o,o.return,G)}if(a=o.sibling,a!==null){a.return=o.return,be=a;break}be=o.return}return f=fm,fm=!1,f}function Br(o,a,f){var g=a.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var S=g=g.next;do{if((S.tag&o)===o){var T=S.destroy;S.destroy=void 0,T!==void 0&&fh(a,f,T)}S=S.next}while(S!==g)}}function Vo(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var f=a=a.next;do{if((f.tag&o)===o){var g=f.create;f.destroy=g()}f=f.next}while(f!==a)}}function dh(o){var a=o.ref;if(a!==null){var f=o.stateNode;switch(o.tag){case 5:o=se(f);break;default:o=f}typeof a=="function"?a(o):a.current=o}}function dm(o,a,f){if(Ti&&typeof Ti.onCommitFiberUnmount=="function")try{Ti.onCommitFiberUnmount(nl,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var g=o=o.next;do{var S=g,T=S.destroy;S=S.tag,T!==void 0&&((S&2)!==0||(S&4)!==0)&&fh(a,f,T),g=g.next}while(g!==o)}break;case 1:if(bl(a,f),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(N){Fn(a,f,N)}break;case 5:bl(a,f);break;case 4:Be?ym(o,a,f):B&&B&&(a=a.stateNode.containerInfo,f=le(a),St(a,f))}}function pm(o,a,f){for(var g=a;;)if(dm(o,g,f),g.child===null||Be&&g.tag===4){if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function mm(o){var a=o.alternate;a!==null&&(o.alternate=null,mm(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&Xe(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function gm(o){return o.tag===5||o.tag===3||o.tag===4}function vm(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||gm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function _m(o){if(Be){e:{for(var a=o.return;a!==null;){if(gm(a))break e;a=a.return}throw Error(l(160))}var f=a;switch(f.tag){case 5:a=f.stateNode,f.flags&32&&(et(a),f.flags&=-33),f=vm(o),mh(o,f,a);break;case 3:case 4:a=f.stateNode.containerInfo,f=vm(o),ph(o,f,a);break;default:throw Error(l(161))}}}function ph(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?ye(f,o,a):He(f,o);else if(g!==4&&(o=o.child,o!==null))for(ph(o,a,f),o=o.sibling;o!==null;)ph(o,a,f),o=o.sibling}function mh(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Mt(f,o,a):ve(f,o);else if(g!==4&&(o=o.child,o!==null))for(mh(o,a,f),o=o.sibling;o!==null;)mh(o,a,f),o=o.sibling}function ym(o,a,f){for(var g=a,S=!1,T,N;;){if(!S){S=g.return;e:for(;;){if(S===null)throw Error(l(160));switch(T=S.stateNode,S.tag){case 5:N=!1;break e;case 3:T=T.containerInfo,N=!0;break e;case 4:T=T.containerInfo,N=!0;break e}S=S.return}S=!0}if(g.tag===5||g.tag===6)pm(o,g,f),N?at(T,g.stateNode):Ct(T,g.stateNode);else if(g.tag===18)N?ie(T,g.stateNode):ne(T,g.stateNode);else if(g.tag===4){if(g.child!==null){T=g.stateNode.containerInfo,N=!0,g.child.return=g,g=g.child;continue}}else if(dm(o,g,f),g.child!==null){g.child.return=g,g=g.child;continue}if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return,g.tag===4&&(S=!1)}g.sibling.return=g.return,g=g.sibling}}function gh(o,a){if(Be){switch(a.tag){case 0:case 11:case 14:case 15:Br(3,a,a.return),Vo(3,a),Br(5,a,a.return);return;case 1:return;case 5:var f=a.stateNode;if(f!=null){var g=a.memoizedProps;o=o!==null?o.memoizedProps:g;var S=a.type,T=a.updateQueue;a.updateQueue=null,T!==null&&nt(f,T,S,o,g,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));f=a.memoizedProps,Me(a.stateNode,o!==null?o.memoizedProps:f,f);return;case 3:pe&&o!==null&&o.memoizedState.isDehydrated&&q(a.stateNode.containerInfo);return;case 12:return;case 13:Rl(a);return;case 19:Rl(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:Br(3,a,a.return),Vo(3,a),Br(5,a,a.return);return;case 12:return;case 13:Rl(a);return;case 19:Rl(a);return;case 3:pe&&o!==null&&o.memoizedState.isDehydrated&&q(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(B){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,St(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function Rl(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var f=o.stateNode;f===null&&(f=o.stateNode=new Yy),a.forEach(function(g){var S=rx.bind(null,o,g);f.has(g)||(f.add(g),g.then(S,S))})}}function Jy(o,a){for(be=a;be!==null;){a=be;var f=a.deletions;if(f!==null)for(var g=0;g<f.length;g++){var S=f[g];try{var T=o;Be?ym(T,S,a):pm(T,S,a);var N=S.alternate;N!==null&&(N.return=null),S.return=null}catch(Ve){Fn(S,a,Ve)}}if(f=a.child,(a.subtreeFlags&12854)!==0&&f!==null)f.return=a,be=f;else for(;be!==null;){a=be;try{var G=a.flags;if(G&32&&Be&&et(a.stateNode),G&512){var re=a.alternate;if(re!==null){var _e=re.ref;_e!==null&&(typeof _e=="function"?_e(null):_e.current=null)}}if(G&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var Ne=a.alternate;(Ne===null||Ne.memoizedState===null)&&(Eh=hn())}break;case 22:var ct=a.memoizedState!==null,Ye=a.alternate,Ut=Ye!==null&&Ye.memoizedState!==null;if(f=a,Be){e:if(g=f,S=ct,T=null,Be)for(var We=g;;){if(We.tag===5){if(T===null){T=We;var En=We.stateNode;S?Ze(En):xt(We.stateNode,We.memoizedProps)}}else if(We.tag===6){if(T===null){var ci=We.stateNode;S?De(ci):V(ci,We.memoizedProps)}}else if((We.tag!==22&&We.tag!==23||We.memoizedState===null||We===g)&&We.child!==null){We.child.return=We,We=We.child;continue}if(We===g)break;for(;We.sibling===null;){if(We.return===null||We.return===g)break e;T===We&&(T=null),We=We.return}T===We&&(T=null),We.sibling.return=We.return,We=We.sibling}}if(ct&&!Ut&&(f.mode&1)!==0){be=f;for(var J=f.child;J!==null;){for(f=be=J;be!==null;){g=be;var W=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Br(4,g,g.return);break;case 1:bl(g,g.return);var te=g.stateNode;if(typeof te.componentWillUnmount=="function"){var Pe=g.return;try{te.props=g.memoizedProps,te.state=g.memoizedState,te.componentWillUnmount()}catch(Ve){Fn(g,Pe,Ve)}}break;case 5:bl(g,g.return);break;case 22:if(g.memoizedState!==null){Mm(f);continue}}W!==null?(W.return=g,be=W):Mm(f)}J=J.sibling}}}switch(G&4102){case 2:_m(a),a.flags&=-3;break;case 6:_m(a),a.flags&=-3,gh(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,gh(a.alternate,a);break;case 4:gh(a.alternate,a)}}catch(Ve){Fn(a,a.return,Ve)}if(f=a.sibling,f!==null){f.return=a.return,be=f;break}be=a.return}}}function jy(o,a,f){be=o,xm(o)}function xm(o,a,f){for(var g=(o.mode&1)!==0;be!==null;){var S=be,T=S.child;if(S.tag===22&&g){var N=S.memoizedState!==null||Al;if(!N){var G=S.alternate,re=G!==null&&G.memoizedState!==null||zr;G=Al;var _e=zr;if(Al=N,(zr=re)&&!_e)for(be=S;be!==null;)N=be,re=N.child,N.tag===22&&N.memoizedState!==null?Em(S):re!==null?(re.return=N,be=re):Em(S);for(;T!==null;)be=T,xm(T),T=T.sibling;be=S,Al=G,zr=_e}Sm(o)}else(S.subtreeFlags&8772)!==0&&T!==null?(T.return=S,be=T):Sm(o)}}function Sm(o){for(;be!==null;){var a=be;if((a.flags&8772)!==0){var f=a.alternate;try{if((a.flags&8772)!==0)switch(a.tag){case 0:case 11:case 15:zr||Vo(5,a);break;case 1:var g=a.stateNode;if(a.flags&4&&!zr)if(f===null)g.componentDidMount();else{var S=a.elementType===a.type?f.memoizedProps:fi(a.type,f.memoizedProps);g.componentDidUpdate(S,f.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var T=a.updateQueue;T!==null&&mp(a,T,g);break;case 3:var N=a.updateQueue;if(N!==null){if(f=null,a.child!==null)switch(a.child.tag){case 5:f=se(a.child.stateNode);break;case 1:f=a.child.stateNode}mp(a,N,f)}break;case 5:var G=a.stateNode;f===null&&a.flags&4&&Re(G,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(pe&&a.memoizedState===null){var re=a.alternate;if(re!==null){var _e=re.memoizedState;if(_e!==null){var Ne=_e.dehydrated;Ne!==null&&ee(Ne)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}zr||a.flags&512&&dh(a)}catch(ct){Fn(a,a.return,ct)}}if(a===o){be=null;break}if(f=a.sibling,f!==null){f.return=a.return,be=f;break}be=a.return}}function Mm(o){for(;be!==null;){var a=be;if(a===o){be=null;break}var f=a.sibling;if(f!==null){f.return=a.return,be=f;break}be=a.return}}function Em(o){for(;be!==null;){var a=be;try{switch(a.tag){case 0:case 11:case 15:var f=a.return;try{Vo(4,a)}catch(re){Fn(a,f,re)}break;case 1:var g=a.stateNode;if(typeof g.componentDidMount=="function"){var S=a.return;try{g.componentDidMount()}catch(re){Fn(a,S,re)}}var T=a.return;try{dh(a)}catch(re){Fn(a,T,re)}break;case 5:var N=a.return;try{dh(a)}catch(re){Fn(a,N,re)}}}catch(re){Fn(a,a.return,re)}if(a===o){be=null;break}var G=a.sibling;if(G!==null){G.return=a.return,be=G;break}be=a.return}}var Cl=0,Pl=1,Ll=2,Il=3,Ul=4;if(typeof Symbol=="function"&&Symbol.for){var Go=Symbol.for;Cl=Go("selector.component"),Pl=Go("selector.has_pseudo_class"),Ll=Go("selector.role"),Il=Go("selector.test_id"),Ul=Go("selector.text")}function vh(o){var a=ce(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=vt(o),o===null)throw Error(l(362));return o.stateNode.current}function _h(o,a){switch(a.$$typeof){case Cl:if(o.type===a.value)return!0;break;case Pl:e:{a=a.value,o=[o,0];for(var f=0;f<o.length;){var g=o[f++],S=o[f++],T=a[S];if(g.tag!==5||!C(g)){for(;T!=null&&_h(g,T);)S++,T=a[S];if(S===a.length){a=!0;break e}else for(g=g.child;g!==null;)o.push(g,S),g=g.sibling}}a=!1}return a;case Ll:if(o.tag===5&&Q(o.stateNode,a.value))return!0;break;case Ul:if((o.tag===5||o.tag===6)&&(o=O(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Il:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function yh(o){switch(o.$$typeof){case Cl:return"<"+(U(o.value)||"Unknown")+">";case Pl:return":has("+(yh(o)||"")+")";case Ll:return'[role="'+o.value+'"]';case Ul:return'"'+o.value+'"';case Il:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function wm(o,a){var f=[];o=[o,0];for(var g=0;g<o.length;){var S=o[g++],T=o[g++],N=a[T];if(S.tag!==5||!C(S)){for(;N!=null&&_h(S,N);)T++,N=a[T];if(T===a.length)f.push(S);else for(S=S.child;S!==null;)o.push(S,T),S=S.sibling}}return f}function xh(o,a){if(!Qe)throw Error(l(363));o=vh(o),o=wm(o,a),a=[],o=Array.from(o);for(var f=0;f<o.length;){var g=o[f++];if(g.tag===5)C(g)||a.push(g.stateNode);else for(g=g.child;g!==null;)o.push(g),g=g.sibling}return a}var Ky=Math.ceil,Dl=c.ReactCurrentDispatcher,Sh=c.ReactCurrentOwner,Zt=c.ReactCurrentBatchConfig,mt=0,en=null,tn=null,_n=0,Zn=0,Us=ln(0),rn=0,Wo=null,Ds=0,Nl=0,Mh=0,Xo=null,Nn=null,Eh=0,wh=1/0;function Ns(){wh=hn()+500}var Ol=!1,Th=null,ur=null,Fl=!1,hr=null,zl=0,qo=0,Ah=null,Bl=-1,kl=0;function Pn(){return(mt&6)!==0?hn():Bl!==-1?Bl:Bl=hn()}function fr(o){return(o.mode&1)===0?1:(mt&2)!==0&&_n!==0?_n&-_n:Uy.transition!==null?(kl===0&&(o=$a,$a<<=1,($a&4194240)===0&&($a=64),kl=o),kl):(o=Tt,o!==0?o:he())}function ai(o,a,f){if(50<qo)throw qo=0,Ah=null,Error(l(185));var g=Hl(o,a);return g===null?null:(Co(g,a,f),((mt&2)===0||g!==en)&&(g===en&&((mt&2)===0&&(Nl|=a),rn===4&&dr(g,_n)),On(g,f),a===1&&mt===0&&(o.mode&1)===0&&(Ns(),il&&bi())),g)}function Hl(o,a){o.lanes|=a;var f=o.alternate;for(f!==null&&(f.lanes|=a),f=o,o=o.return;o!==null;)o.childLanes|=a,f=o.alternate,f!==null&&(f.childLanes|=a),f=o,o=o.return;return f.tag===3?f.stateNode:null}function On(o,a){var f=o.callbackNode;wy(o,a);var g=tl(o,o===en?_n:0);if(g===0)f!==null&&up(f),o.callbackNode=null,o.callbackPriority=0;else if(a=g&-g,o.callbackPriority!==a){if(f!=null&&up(f),a===1)o.tag===0?Iy(Am.bind(null,o)):hp(Am.bind(null,o)),Le?Oe(function(){mt===0&&bi()}):Du(Nu,bi),f=null;else{switch(cp(g)){case 1:f=Nu;break;case 4:f=Ry;break;case 16:f=Ou;break;case 536870912:f=Cy;break;default:f=Ou}f=Nm(f,Tm.bind(null,o))}o.callbackPriority=a,o.callbackNode=f}}function Tm(o,a){if(Bl=-1,kl=0,(mt&6)!==0)throw Error(l(327));var f=o.callbackNode;if(Vr()&&o.callbackNode!==f)return null;var g=tl(o,o===en?_n:0);if(g===0)return null;if((g&30)!==0||(g&o.expiredLanes)!==0||a)a=Vl(o,g);else{a=g;var S=mt;mt|=2;var T=Cm();(en!==o||_n!==a)&&(Ns(),kr(o,a));do try{ex();break}catch(G){Rm(o,G)}while(!0);Bu(),Dl.current=T,mt=S,tn!==null?a=0:(en=null,_n=0,a=rn)}if(a!==0){if(a===2&&(S=Lu(o),S!==0&&(g=S,a=bh(o,S))),a===1)throw f=Wo,kr(o,0),dr(o,g),On(o,hn()),f;if(a===6)dr(o,g);else{if(S=o.current.alternate,(g&30)===0&&!Qy(S)&&(a=Vl(o,g),a===2&&(T=Lu(o),T!==0&&(g=T,a=bh(o,T))),a===1))throw f=Wo,kr(o,0),dr(o,g),On(o,hn()),f;switch(o.finishedWork=S,o.finishedLanes=g,a){case 0:case 1:throw Error(l(345));case 2:Hr(o,Nn);break;case 3:if(dr(o,g),(g&130023424)===g&&(a=Eh+500-hn(),10<a)){if(tl(o,0)!==0)break;if(S=o.suspendedLanes,(S&g)!==g){Pn(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=qe(Hr.bind(null,o,Nn),a);break}Hr(o,Nn);break;case 4:if(dr(o,g),(g&4194240)===g)break;for(a=o.eventTimes,S=-1;0<g;){var N=31-Wn(g);T=1<<N,N=a[N],N>S&&(S=N),g&=~T}if(g=S,g=hn()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*Ky(g/1960))-g,10<g){o.timeoutHandle=qe(Hr.bind(null,o,Nn),g);break}Hr(o,Nn);break;case 5:Hr(o,Nn);break;default:throw Error(l(329))}}}return On(o,hn()),o.callbackNode===f?Tm.bind(null,o):null}function bh(o,a){var f=Xo;return o.current.memoizedState.isDehydrated&&(kr(o,a).flags|=256),o=Vl(o,a),o!==2&&(a=Nn,Nn=f,a!==null&&Rh(a)),o}function Rh(o){Nn===null?Nn=o:Nn.push.apply(Nn,o)}function Qy(o){for(var a=o;;){if(a.flags&16384){var f=a.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var g=0;g<f.length;g++){var S=f[g],T=S.getSnapshot;S=S.value;try{if(!Ai(T(),S))return!1}catch{return!1}}}if(f=a.child,a.subtreeFlags&16384&&f!==null)f.return=a,a=f;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function dr(o,a){for(a&=~Mh,a&=~Nl,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var f=31-Wn(a),g=1<<f;o[f]=-1,a&=~g}}function Am(o){if((mt&6)!==0)throw Error(l(327));Vr();var a=tl(o,0);if((a&1)===0)return On(o,hn()),null;var f=Vl(o,a);if(o.tag!==0&&f===2){var g=Lu(o);g!==0&&(a=g,f=bh(o,g))}if(f===1)throw f=Wo,kr(o,0),dr(o,a),On(o,hn()),f;if(f===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Hr(o,Nn),On(o,hn()),null}function bm(o){hr!==null&&hr.tag===0&&(mt&6)===0&&Vr();var a=mt;mt|=1;var f=Zt.transition,g=Tt;try{if(Zt.transition=null,Tt=1,o)return o()}finally{Tt=g,Zt.transition=f,mt=a,(mt&6)===0&&bi()}}function Ch(){Zn=Us.current,tt(Us)}function kr(o,a){o.finishedWork=null,o.finishedLanes=0;var f=o.timeoutHandle;if(f!==it&&(o.timeoutHandle=it,Je(f)),tn!==null)for(f=tn.return;f!==null;){var g=f;switch(qu(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&$t();break;case 3:Ls(),tt(Wt),tt(yt),$u();break;case 5:Ku(g);break;case 4:Ls();break;case 13:tt(Vt);break;case 19:tt(Vt);break;case 10:ku(g.type._context);break;case 22:case 23:Ch()}f=f.return}if(en=o,tn=o=pr(o.current,null),_n=Zn=a,rn=0,Wo=null,Mh=Nl=Ds=0,Nn=Xo=null,Ri!==null){for(a=0;a<Ri.length;a++)if(f=Ri[a],g=f.interleaved,g!==null){f.interleaved=null;var S=g.next,T=f.pending;if(T!==null){var N=T.next;T.next=S,g.next=N}f.pending=g}Ri=null}return o}function Rm(o,a){do{var f=tn;try{if(Bu(),pl.current=xl,ml){for(var g=Xt.memoizedState;g!==null;){var S=g.queue;S!==null&&(S.pending=null),g=g.next}ml=!1}if(Is=0,fn=xn=Xt=null,No=!1,Oo=0,Sh.current=null,f===null||f.return===null){rn=1,Wo=a,tn=null;break}e:{var T=o,N=f.return,G=f,re=a;if(a=_n,G.flags|=32768,re!==null&&typeof re=="object"&&typeof re.then=="function"){var _e=re,Ne=G,ct=Ne.tag;if((Ne.mode&1)===0&&(ct===0||ct===11||ct===15)){var Ye=Ne.alternate;Ye?(Ne.updateQueue=Ye.updateQueue,Ne.memoizedState=Ye.memoizedState,Ne.lanes=Ye.lanes):(Ne.updateQueue=null,Ne.memoizedState=null)}var Ut=Jp(N);if(Ut!==null){Ut.flags&=-257,jp(Ut,N,G,T,a),Ut.mode&1&&Zp(T,_e,a),a=Ut,re=_e;var We=a.updateQueue;if(We===null){var En=new Set;En.add(re),a.updateQueue=En}else We.add(re);break e}else{if((a&1)===0){Zp(T,_e,a),Ph();break e}re=Error(l(426))}}else if(Bt&&G.mode&1){var ci=Jp(N);if(ci!==null){(ci.flags&65536)===0&&(ci.flags|=256),jp(ci,N,G,T,a),Ju(re);break e}}T=re,rn!==4&&(rn=2),Xo===null?Xo=[T]:Xo.push(T),re=oh(re,G),G=N;do{switch(G.tag){case 3:G.flags|=65536,a&=-a,G.lanes|=a;var J=qp(G,re,a);pp(G,J);break e;case 1:T=re;var W=G.type,te=G.stateNode;if((G.flags&128)===0&&(typeof W.getDerivedStateFromError=="function"||te!==null&&typeof te.componentDidCatch=="function"&&(ur===null||!ur.has(te)))){G.flags|=65536,a&=-a,G.lanes|=a;var Pe=Yp(G,T,a);pp(G,Pe);break e}}G=G.return}while(G!==null)}Lm(f)}catch(Ve){a=Ve,tn===f&&f!==null&&(tn=f=f.return);continue}break}while(!0)}function Cm(){var o=Dl.current;return Dl.current=xl,o===null?xl:o}function Ph(){(rn===0||rn===3||rn===2)&&(rn=4),en===null||(Ds&268435455)===0&&(Nl&268435455)===0||dr(en,_n)}function Vl(o,a){var f=mt;mt|=2;var g=Cm();en===o&&_n===a||kr(o,a);do try{$y();break}catch(S){Rm(o,S)}while(!0);if(Bu(),mt=f,Dl.current=g,tn!==null)throw Error(l(261));return en=null,_n=0,rn}function $y(){for(;tn!==null;)Pm(tn)}function ex(){for(;tn!==null&&!Ay();)Pm(tn)}function Pm(o){var a=Dm(o.alternate,o,Zn);o.memoizedProps=o.pendingProps,a===null?Lm(o):tn=a,Sh.current=null}function Lm(o){var a=o;do{var f=a.alternate;if(o=a.return,(a.flags&32768)===0){if(f=Gy(f,a,Zn),f!==null){tn=f;return}}else{if(f=qy(f,a),f!==null){f.flags&=32767,tn=f;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{rn=6,tn=null;return}}if(a=a.sibling,a!==null){tn=a;return}tn=a=o}while(a!==null);rn===0&&(rn=5)}function Hr(o,a){var f=Tt,g=Zt.transition;try{Zt.transition=null,Tt=1,tx(o,a,f)}finally{Zt.transition=g,Tt=f}return null}function tx(o,a,f){do Vr();while(hr!==null);if((mt&6)!==0)throw Error(l(327));var g=o.finishedWork,S=o.finishedLanes;if(g===null)return null;if(o.finishedWork=null,o.finishedLanes=0,g===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var T=g.lanes|g.childLanes;if(Ty(o,T),o===en&&(tn=en=null,_n=0),(g.subtreeFlags&2064)===0&&(g.flags&2064)===0||Fl||(Fl=!0,Nm(Ou,function(){return Vr(),null})),T=(g.flags&15990)!==0,(g.subtreeFlags&15990)!==0||T){T=Zt.transition,Zt.transition=null;var N=Tt;Tt=1;var G=mt;mt|=4,Sh.current=null,Zy(o,g),Jy(o,g),Z(o.containerInfo),o.current=g,jy(g),by(),mt=G,Tt=N,Zt.transition=T}else o.current=g;if(Fl&&(Fl=!1,hr=o,zl=S),T=o.pendingLanes,T===0&&(ur=null),Py(g.stateNode),On(o,hn()),a!==null)for(f=o.onRecoverableError,g=0;g<a.length;g++)f(a[g]);if(Ol)throw Ol=!1,o=Th,Th=null,o;return(zl&1)!==0&&o.tag!==0&&Vr(),T=o.pendingLanes,(T&1)!==0?o===Ah?qo++:(qo=0,Ah=o):qo=0,bi(),null}function Vr(){if(hr!==null){var o=cp(zl),a=Zt.transition,f=Tt;try{if(Zt.transition=null,Tt=16>o?16:o,hr===null)var g=!1;else{if(o=hr,hr=null,zl=0,(mt&6)!==0)throw Error(l(331));var S=mt;for(mt|=4,be=o.current;be!==null;){var T=be,N=T.child;if((be.flags&16)!==0){var G=T.deletions;if(G!==null){for(var re=0;re<G.length;re++){var _e=G[re];for(be=_e;be!==null;){var Ne=be;switch(Ne.tag){case 0:case 11:case 15:Br(8,Ne,T)}var ct=Ne.child;if(ct!==null)ct.return=Ne,be=ct;else for(;be!==null;){Ne=be;var Ye=Ne.sibling,Ut=Ne.return;if(mm(Ne),Ne===_e){be=null;break}if(Ye!==null){Ye.return=Ut,be=Ye;break}be=Ut}}}var We=T.alternate;if(We!==null){var En=We.child;if(En!==null){We.child=null;do{var ci=En.sibling;En.sibling=null,En=ci}while(En!==null)}}be=T}}if((T.subtreeFlags&2064)!==0&&N!==null)N.return=T,be=N;else e:for(;be!==null;){if(T=be,(T.flags&2048)!==0)switch(T.tag){case 0:case 11:case 15:Br(9,T,T.return)}var J=T.sibling;if(J!==null){J.return=T.return,be=J;break e}be=T.return}}var W=o.current;for(be=W;be!==null;){N=be;var te=N.child;if((N.subtreeFlags&2064)!==0&&te!==null)te.return=N,be=te;else e:for(N=W;be!==null;){if(G=be,(G.flags&2048)!==0)try{switch(G.tag){case 0:case 11:case 15:Vo(9,G)}}catch(Ve){Fn(G,G.return,Ve)}if(G===N){be=null;break e}var Pe=G.sibling;if(Pe!==null){Pe.return=G.return,be=Pe;break e}be=G.return}}if(mt=S,bi(),Ti&&typeof Ti.onPostCommitFiberRoot=="function")try{Ti.onPostCommitFiberRoot(nl,o)}catch{}g=!0}return g}finally{Tt=f,Zt.transition=a}}return!1}function Im(o,a,f){a=oh(f,a),a=qp(o,a,1),cr(o,a),a=Pn(),o=Hl(o,1),o!==null&&(Co(o,1,a),On(o,a))}function Fn(o,a,f){if(o.tag===3)Im(o,o,f);else for(;a!==null;){if(a.tag===3){Im(a,o,f);break}else if(a.tag===1){var g=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(ur===null||!ur.has(g))){o=oh(f,o),o=Yp(a,o,1),cr(a,o),o=Pn(),a=Hl(a,1),a!==null&&(Co(a,1,o),On(a,o));break}}a=a.return}}function nx(o,a,f){var g=o.pingCache;g!==null&&g.delete(a),a=Pn(),o.pingedLanes|=o.suspendedLanes&f,en===o&&(_n&f)===f&&(rn===4||rn===3&&(_n&130023424)===_n&&500>hn()-Eh?kr(o,0):Mh|=f),On(o,a)}function Um(o,a){a===0&&((o.mode&1)===0?a=1:(a=el,el<<=1,(el&130023424)===0&&(el=4194304)));var f=Pn();o=Hl(o,a),o!==null&&(Co(o,a,f),On(o,f))}function ix(o){var a=o.memoizedState,f=0;a!==null&&(f=a.retryLane),Um(o,f)}function rx(o,a){var f=0;switch(o.tag){case 13:var g=o.stateNode,S=o.memoizedState;S!==null&&(f=S.retryLane);break;case 19:g=o.stateNode;break;default:throw Error(l(314))}g!==null&&g.delete(a),Um(o,f)}var Dm;Dm=function(o,a,f){if(o!==null)if(o.memoizedProps!==a.pendingProps||Wt.current)Yn=!0;else{if((o.lanes&f)===0&&(a.flags&128)===0)return Yn=!1,Xy(o,a,f);Yn=(o.flags&131072)!==0}else Yn=!1,Bt&&(a.flags&1048576)!==0&&xp(a,hl,a.index);switch(a.lanes=0,a.tag){case 2:var g=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var S=ti(a,yt.current);Ts(a,f),S=th(null,a,g,o,S,f);var T=nh();return a.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,cn(g)?(T=!0,un(a)):T=!1,a.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Vu(a),S.updater=cl,a.stateNode=S,S._reactInternals=a,Wu(a,g,o,f),a=ch(null,a,g,!0,T,f)):(a.tag=0,Bt&&T&&Xu(a),Cn(null,a,S,f),a=a.child),a;case 16:g=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,S=g._init,g=S(g._payload),a.type=g,S=a.tag=ox(g),o=fi(g,o),S){case 0:a=lh(null,a,g,o,f);break e;case 1:a=rm(null,a,g,o,f);break e;case 11:a=$p(null,a,g,o,f);break e;case 14:a=em(null,a,g,fi(g.type,o),f);break e}throw Error(l(306,g,""))}return a;case 0:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:fi(g,S),lh(o,a,g,S,f);case 1:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:fi(g,S),rm(o,a,g,S,f);case 3:e:{if(sm(a),o===null)throw Error(l(387));g=a.pendingProps,T=a.memoizedState,S=T.element,dp(o,a),ll(a,g,null,f);var N=a.memoizedState;if(g=N.element,pe&&T.isDehydrated)if(T={element:g,isDehydrated:!1,cache:N.cache,transitions:N.transitions},a.updateQueue.baseState=T,a.memoizedState=T,a.flags&256){S=Error(l(423)),a=om(o,a,g,f,S);break e}else if(g!==S){S=Error(l(424)),a=om(o,a,g,f,S);break e}else for(pe&&(qn=ja(a.stateNode.containerInfo),Xn=a,Bt=!0,di=null,Po=!1),f=Ap(a,null,g,f),a.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(Rs(),g===S){a=Yi(o,a,f);break e}Cn(o,a,g,f)}a=a.child}return a;case 5:return bp(a),o===null&&Zu(a),g=a.type,S=a.pendingProps,T=o!==null?o.memoizedProps:null,N=S.children,Ae(g,S)?N=null:T!==null&&Ae(g,T)&&(a.flags|=32),im(o,a),Cn(o,a,N,f),a.child;case 6:return o===null&&Zu(a),null;case 13:return am(o,a,f);case 4:return ju(a,a.stateNode.containerInfo),g=a.pendingProps,o===null?a.child=Cs(a,null,g,f):Cn(o,a,g,f),a.child;case 11:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:fi(g,S),$p(o,a,g,S,f);case 7:return Cn(o,a,a.pendingProps,f),a.child;case 8:return Cn(o,a,a.pendingProps.children,f),a.child;case 12:return Cn(o,a,a.pendingProps.children,f),a.child;case 10:e:{if(g=a.type._context,S=a.pendingProps,T=a.memoizedProps,N=S.value,fp(a,g,N),T!==null)if(Ai(T.value,N)){if(T.children===S.children&&!Wt.current){a=Yi(o,a,f);break e}}else for(T=a.child,T!==null&&(T.return=a);T!==null;){var G=T.dependencies;if(G!==null){N=T.child;for(var re=G.firstContext;re!==null;){if(re.context===g){if(T.tag===1){re=Gi(-1,f&-f),re.tag=2;var _e=T.updateQueue;if(_e!==null){_e=_e.shared;var Ne=_e.pending;Ne===null?re.next=re:(re.next=Ne.next,Ne.next=re),_e.pending=re}}T.lanes|=f,re=T.alternate,re!==null&&(re.lanes|=f),Hu(T.return,f,a),G.lanes|=f;break}re=re.next}}else if(T.tag===10)N=T.type===a.type?null:T.child;else if(T.tag===18){if(N=T.return,N===null)throw Error(l(341));N.lanes|=f,G=N.alternate,G!==null&&(G.lanes|=f),Hu(N,f,a),N=T.sibling}else N=T.child;if(N!==null)N.return=T;else for(N=T;N!==null;){if(N===a){N=null;break}if(T=N.sibling,T!==null){T.return=N.return,N=T;break}N=N.return}T=N}Cn(o,a,S.children,f),a=a.child}return a;case 9:return S=a.type,g=a.pendingProps.children,Ts(a,f),S=ni(S),g=g(S),a.flags|=1,Cn(o,a,g,f),a.child;case 14:return g=a.type,S=fi(g,a.pendingProps),S=fi(g.type,S),em(o,a,g,S,f);case 15:return tm(o,a,a.type,a.pendingProps,f);case 17:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:fi(g,S),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,cn(g)?(o=!0,un(a)):o=!1,Ts(a,f),_p(a,g,S),Wu(a,g,S,f),ch(null,a,g,!0,o,f);case 19:return hm(o,a,f);case 22:return nm(o,a,f)}throw Error(l(156,a.tag))};function Nm(o,a){return Du(o,a)}function sx(o,a,f,g){this.tag=o,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function li(o,a,f,g){return new sx(o,a,f,g)}function Lh(o){return o=o.prototype,!(!o||!o.isReactComponent)}function ox(o){if(typeof o=="function")return Lh(o)?1:0;if(o!=null){if(o=o.$$typeof,o===E)return 11;if(o===w)return 14}return 2}function pr(o,a){var f=o.alternate;return f===null?(f=li(o.tag,a,o.key,o.mode),f.elementType=o.elementType,f.type=o.type,f.stateNode=o.stateNode,f.alternate=o,o.alternate=f):(f.pendingProps=a,f.type=o.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=o.flags&14680064,f.childLanes=o.childLanes,f.lanes=o.lanes,f.child=o.child,f.memoizedProps=o.memoizedProps,f.memoizedState=o.memoizedState,f.updateQueue=o.updateQueue,a=o.dependencies,f.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},f.sibling=o.sibling,f.index=o.index,f.ref=o.ref,f}function Gl(o,a,f,g,S,T){var N=2;if(g=o,typeof o=="function")Lh(o)&&(N=1);else if(typeof o=="string")N=5;else e:switch(o){case d:return Gr(f.children,S,T,a);case p:N=8,S|=8;break;case m:return o=li(12,f,a,S|2),o.elementType=m,o.lanes=T,o;case x:return o=li(13,f,a,S),o.elementType=x,o.lanes=T,o;case _:return o=li(19,f,a,S),o.elementType=_,o.lanes=T,o;case A:return Wl(f,S,T,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case v:N=10;break e;case y:N=9;break e;case E:N=11;break e;case w:N=14;break e;case M:N=16,g=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=li(N,f,a,S),a.elementType=o,a.type=g,a.lanes=T,a}function Gr(o,a,f,g){return o=li(7,o,g,a),o.lanes=f,o}function Wl(o,a,f,g){return o=li(22,o,g,a),o.elementType=A,o.lanes=f,o.stateNode={},o}function Ih(o,a,f){return o=li(6,o,null,a),o.lanes=f,o}function Uh(o,a,f){return a=li(4,o.children!==null?o.children:[],o.key,a),a.lanes=f,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function ax(o,a,f,g,S){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=it,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Iu(0),this.expirationTimes=Iu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Iu(0),this.identifierPrefix=g,this.onRecoverableError=S,pe&&(this.mutableSourceEagerHydrationData=null)}function Om(o,a,f,g,S,T,N,G,re){return o=new ax(o,a,f,G,re),a===1?(a=1,T===!0&&(a|=8)):a=0,T=li(3,null,null,a),o.current=T,T.stateNode=o,T.memoizedState={element:g,isDehydrated:f,cache:null,transitions:null},Vu(T),o}function Fm(o){if(!o)return ei;o=o._reactInternals;e:{if(b(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(cn(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var f=o.type;if(cn(f))return Ms(o,f,a)}return a}function zm(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=$(a),o===null?null:o.stateNode}function Bm(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var f=o.retryLane;o.retryLane=f!==0&&f<a?f:a}}function Dh(o,a){Bm(o,a),(o=o.alternate)&&Bm(o,a)}function lx(o){return o=$(o),o===null?null:o.stateNode}function cx(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=Pn();ai(o,134217728,a),Dh(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=Pn(),f=fr(o);ai(o,f,a),Dh(o,f)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var f=Ro(a.pendingLanes);f!==0&&(Uu(a,f|1),On(a,hn()),(mt&6)===0&&(Ns(),bi()))}break;case 13:var g=Pn();bm(function(){return ai(o,1,g)}),Dh(o,1)}},t.batchedUpdates=function(o,a){var f=mt;mt|=1;try{return o(a)}finally{mt=f,mt===0&&(Ns(),il&&bi())}},t.createComponentSelector=function(o){return{$$typeof:Cl,value:o}},t.createContainer=function(o,a,f,g,S,T,N){return Om(o,a,!1,null,f,g,S,T,N)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Pl,value:o}},t.createHydrationContainer=function(o,a,f,g,S,T,N,G,re){return o=Om(f,g,!0,o,S,T,N,G,re),o.context=Fm(null),f=o.current,g=Pn(),S=fr(f),T=Gi(g,S),T.callback=a??null,cr(f,T),o.current.lanes=S,Co(o,S,g),On(o,g),o},t.createPortal=function(o,a,f){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:o,containerInfo:a,implementation:f}},t.createRoleSelector=function(o){return{$$typeof:Ll,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Il,value:o}},t.createTextSelector=function(o){return{$$typeof:Ul,value:o}},t.deferredUpdates=function(o){var a=Tt,f=Zt.transition;try{return Zt.transition=null,Tt=16,o()}finally{Tt=a,Zt.transition=f}},t.discreteUpdates=function(o,a,f,g,S){var T=Tt,N=Zt.transition;try{return Zt.transition=null,Tt=1,o(a,f,g,S)}finally{Tt=T,Zt.transition=N,mt===0&&Ns()}},t.findAllNodes=xh,t.findBoundingRects=function(o,a){if(!Qe)throw Error(l(363));a=xh(o,a),o=[];for(var f=0;f<a.length;f++)o.push(zt(a[f]));for(a=o.length-1;0<a;a--){f=o[a];for(var g=f.x,S=g+f.width,T=f.y,N=T+f.height,G=a-1;0<=G;G--)if(a!==G){var re=o[G],_e=re.x,Ne=_e+re.width,ct=re.y,Ye=ct+re.height;if(g>=_e&&T>=ct&&S<=Ne&&N<=Ye){o.splice(a,1);break}else if(g!==_e||f.width!==re.width||Ye<T||ct>N){if(!(T!==ct||f.height!==re.height||Ne<g||_e>S)){_e>g&&(re.width+=_e-g,re.x=g),Ne<S&&(re.width=S-_e),o.splice(a,1);break}}else{ct>T&&(re.height+=ct-T,re.y=T),Ye<N&&(re.height=N-ct),o.splice(a,1);break}}}return o},t.findHostInstance=zm,t.findHostInstanceWithNoPortals=function(o){return o=k(o),o=o!==null?H(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return zm(o)},t.flushControlled=function(o){var a=mt;mt|=1;var f=Zt.transition,g=Tt;try{Zt.transition=null,Tt=1,o()}finally{Tt=g,Zt.transition=f,mt=a,mt===0&&(Ns(),bi())}},t.flushPassiveEffects=Vr,t.flushSync=bm,t.focusWithin=function(o,a){if(!Qe)throw Error(l(363));for(o=vh(o),a=wm(o,a),a=Array.from(a),o=0;o<a.length;){var f=a[o++];if(!C(f)){if(f.tag===5&&ge(f.stateNode))return!0;for(f=f.child;f!==null;)a.push(f),f=f.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Tt},t.getFindAllNodesFailureDescription=function(o,a){if(!Qe)throw Error(l(363));var f=0,g=[];o=[vh(o),0];for(var S=0;S<o.length;){var T=o[S++],N=o[S++],G=a[N];if((T.tag!==5||!C(T))&&(_h(T,G)&&(g.push(yh(G)),N++,N>f&&(f=N)),N<a.length))for(T=T.child;T!==null;)o.push(T,N),T=T.sibling}if(f<a.length){for(o=[];f<a.length;f++)o.push(yh(a[f]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return se(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:lx,findFiberByHostInstance:o.findFiberByHostInstance||cx,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{nl=a.inject(o),Ti=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,f,g){if(!Qe)throw Error(l(363));o=xh(o,a);var S=de(o,f,g).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,a){var f=a._getVersion;f=f(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,f]:o.mutableSourceEagerHydrationData.push(a,f)},t.runWithPriority=function(o,a){var f=Tt;try{return Tt=o,a()}finally{Tt=f}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,f,g){var S=a.current,T=Pn(),N=fr(S);return f=Fm(f),a.context===null?a.context=f:a.pendingContext=f,a=Gi(T,N),a.payload={element:o},g=g===void 0?null:g,g!==null&&(a.callback=g),cr(S,a),o=ai(S,N,T),o!==null&&al(o,S,N),N},t}),Sf}var y0;function ob(){return y0||(y0=1,_f.exports=sb()),_f.exports}var ab=ob();const lb=fx(ab);var x0=ny();const ap={},cb=r=>void Object.assign(ap,r);function ub(r,e){function t(d,{args:p=[],attach:m,...v},y){let E=`${d[0].toUpperCase()}${d.slice(1)}`,x;if(d==="primitive"){if(v.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const _=v.object;x=ro(_,{type:d,root:y,attach:m,primitive:!0})}else{const _=ap[E];if(!_)throw new Error(`R3F: ${E} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=ro(new _(...p),{type:d,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x.isBufferGeometry?x.__r3f.attach="geometry":x.isMaterial&&(x.__r3f.attach="material")),E!=="inject"&&wf(x,v),x}function n(d,p){let m=!1;if(p){var v,y;(v=p.__r3f)!=null&&v.attach?Ef(d,p,p.__r3f.attach):p.isObject3D&&d.isObject3D&&(d.add(p),m=!0),m||(y=d.__r3f)==null||y.objects.push(p),p.__r3f||ro(p,{}),p.__r3f.parent=d,Sd(p),so(p)}}function i(d,p,m){let v=!1;if(p){var y,E;if((y=p.__r3f)!=null&&y.attach)Ef(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){p.parent=d,p.dispatchEvent({type:"added"}),d.dispatchEvent({type:"childadded",child:p});const x=d.children.filter(w=>w!==p),_=x.indexOf(m);d.children=[...x.slice(0,_),p,...x.slice(_)],v=!0}v||(E=d.__r3f)==null||E.objects.push(p),p.__r3f||ro(p,{}),p.__r3f.parent=d,Sd(p),so(p)}}function s(d,p,m=!1){d&&[...d].forEach(v=>l(p,v,m))}function l(d,p,m){if(p){var v,y,E;if(p.__r3f&&(p.__r3f.parent=null),(v=d.__r3f)!=null&&v.objects&&(d.__r3f.objects=d.__r3f.objects.filter(A=>A!==p)),(y=p.__r3f)!=null&&y.attach)T0(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){var x;d.remove(p),(x=p.__r3f)!=null&&x.root&&vb(Wc(p),p)}const w=(E=p.__r3f)==null?void 0:E.primitive,M=!w&&(m===void 0?p.dispose!==null:m);if(!w){var _;s((_=p.__r3f)==null?void 0:_.objects,p,M),s(p.children,p,M)}if(delete p.__r3f,M&&p.dispose&&p.type!=="Scene"){const A=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?x0.unstable_scheduleCallback(x0.unstable_IdlePriority,A):A()}so(d)}}function c(d,p,m,v){var y;const E=(y=d.__r3f)==null?void 0:y.parent;if(!E)return;const x=t(p,m,d.__r3f.root);if(d.children){for(const _ of d.children)_.__r3f&&n(x,_);d.children=d.children.filter(_=>!_.__r3f)}d.__r3f.objects.forEach(_=>n(x,_)),d.__r3f.objects=[],d.__r3f.autoRemovedBeforeAppend||l(E,d),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(E,x),x.raycast&&x.__r3f.eventCount&&Wc(x).getState().internal.interaction.push(x),[v,v.alternate].forEach(_=>{_!==null&&(_.stateNode=x,_.ref&&(typeof _.ref=="function"?_.ref(x):_.ref.current=x))})}const u=()=>{};return{reconciler:lb({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(d,p)=>{if(!p)return;const m=d.getState().scene;m.__r3f&&(m.__r3f.root=d,n(m,p))},removeChildFromContainer:(d,p)=>{p&&l(d.getState().scene,p)},insertInContainerBefore:(d,p,m)=>{if(!p||!m)return;const v=d.getState().scene;v.__r3f&&i(v,p,m)},getRootHostContext:()=>null,getChildHostContext:d=>d,finalizeInitialChildren(d){var p;return!!((p=d?.__r3f)!=null?p:{}).handlers},prepareUpdate(d,p,m,v){var y;if(((y=d?.__r3f)!=null?y:{}).primitive&&v.object&&v.object!==d)return[!0];{const{args:x=[],children:_,...w}=v,{args:M=[],children:A,...R}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((U,F)=>U!==M[F]))return[!0];const P=cy(d,w,R,!0);return P.changes.length?[!1,P]:null}},commitUpdate(d,[p,m],v,y,E,x){p?c(d,v,E,x):wf(d,m)},commitMount(d,p,m,v){var y;const E=(y=d.__r3f)!=null?y:{};d.raycast&&E.handlers&&E.eventCount&&Wc(d).getState().internal.interaction.push(d)},getPublicInstance:d=>d,prepareForCommit:()=>null,preparePortalMount:d=>ro(d.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(d){var p;const{attach:m,parent:v}=(p=d.__r3f)!=null?p:{};m&&v&&T0(v,d,m),d.isObject3D&&(d.visible=!1),so(d)},unhideInstance(d,p){var m;const{attach:v,parent:y}=(m=d.__r3f)!=null?m:{};v&&y&&Ef(y,d,v),(d.isObject3D&&p.visible==null||p.visible)&&(d.visible=!0),so(d)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():ho.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Ft.fun(performance.now)?performance.now:Ft.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Ft.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Ft.fun(clearTimeout)?clearTimeout:void 0}),applyProps:wf}}var S0,M0;const Mf=r=>"colorSpace"in r||"outputColorSpace"in r,iy=()=>{var r;return(r=ap.ColorManagement)!=null?r:null},ry=r=>r&&r.isOrthographicCamera,hb=r=>r&&r.hasOwnProperty("current"),Ja=typeof window<"u"&&((S0=window.document)!=null&&S0.createElement||((M0=window.navigator)==null?void 0:M0.product)==="ReactNative")?Se.useLayoutEffect:Se.useEffect;function sy(r){const e=Se.useRef(r);return Ja(()=>void(e.current=r),[r]),e}function fb({set:r}){return Ja(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class oy extends Se.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}oy.getDerivedStateFromError=()=>({error:!0});const ay="__default",E0=new Map,db=r=>r&&!!r.memoized&&!!r.changes;function ly(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const ia=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function Wc(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Ft={obj:r=>r===Object(r)&&!Ft.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Ft.str(r)||Ft.num(r)||Ft.boo(r))return r===e;const s=Ft.obj(r);if(s&&n==="reference")return r===e;const l=Ft.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Ft.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Ft.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function pb(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function ro(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function xd(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const w0=/-\d+$/;function Ef(r,e,t){if(Ft.str(t)){if(w0.test(t)){const s=t.replace(w0,""),{target:l,key:c}=xd(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=xd(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function T0(r,e,t){var n,i;if(Ft.str(t)){const{target:s,key:l}=xd(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function cy(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){const d=r.__r3f,p=Object.entries(i),m=[];if(h){const y=Object.keys(u);for(let E=0;E<y.length;E++)i.hasOwnProperty(y[E])||p.unshift([y[E],ay+"remove"])}p.forEach(([y,E])=>{var x;if((x=r.__r3f)!=null&&x.primitive&&y==="object"||Ft.equ(E,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return m.push([y,E,!0,[]]);let _=[];y.includes("-")&&(_=y.split("-")),m.push([y,E,!1,_]);for(const w in i){const M=i[w];w.startsWith(`${y}-`)&&m.push([w,M,!1,w.split("-")])}});const v={...i};return d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.args&&(v.args=d.memoizedProps.args),d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.attach&&(v.attach=d.memoizedProps.attach),{memoized:v,changes:m}}function wf(r,e){var t;const n=r.__r3f,i=n?.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:l,changes:c}=db(e)?e:cy(r,e),u=n?.eventCount;r.__r3f&&(r.__r3f.memoizedProps=l);for(let m=0;m<c.length;m++){let[v,y,E,x]=c[m];if(Mf(r)){const A="srgb",R="srgb-linear";v==="encoding"?(v="colorSpace",y=y===3001?A:R):v==="outputEncoding"&&(v="outputColorSpace",y=y===3001?A:R)}let _=r,w=_[v];if(x.length&&(w=x.reduce((M,A)=>M[A],r),!(w&&w.set))){const[M,...A]=x.reverse();_=A.reverse().reduce((R,P)=>R[P],r),v=M}if(y===ay+"remove")if(_.constructor){let M=E0.get(_.constructor);M||(M=new _.constructor,E0.set(_.constructor,M)),y=M[v]}else y=0;if(E&&n)y?n.handlers[v]=y:delete n.handlers[v],n.eventCount=Object.keys(n.handlers).length;else if(w&&w.set&&(w.copy||w instanceof us)){if(Array.isArray(y))w.fromArray?w.fromArray(y):w.set(...y);else if(w.copy&&y&&y.constructor&&w.constructor===y.constructor)w.copy(y);else if(y!==void 0){var h;const M=(h=w)==null?void 0:h.isColor;!M&&w.setScalar?w.setScalar(y):w instanceof us&&y instanceof us?w.mask=y.mask:w.set(y),!iy()&&s&&!s.linear&&M&&w.convertSRGBToLinear()}}else{var d;if(_[v]=y,(d=_[v])!=null&&d.isTexture&&_[v].format===kn&&_[v].type===Oi&&s){const M=_[v];Mf(M)&&Mf(s.gl)?M.colorSpace=s.gl.outputColorSpace:M.encoding=s.gl.outputEncoding}}so(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const m=Wc(r).getState().internal,v=m.interaction.indexOf(r);v>-1&&m.interaction.splice(v,1),n.eventCount&&m.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&Sd(r),r}function so(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Sd(r){r.onUpdate==null||r.onUpdate(r)}function mb(r,e){r.manual||(ry(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function Nc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function gb(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return ho.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return ho.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return ho.ContinuousEventPriority;default:return ho.DefaultEventPriority}}function uy(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function vb(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{uy(t.capturedMap,e,n,i)})}function _b(r){function e(u){const{internal:h}=r.getState(),d=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,h){const d=r.getState(),p=new Set,m=[],v=h?h(d.internal.interaction):d.internal.interaction;for(let _=0;_<v.length;_++){const w=ia(v[_]);w&&(w.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function y(_){const w=ia(_);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var M;w.events.compute==null||w.events.compute(u,w,(M=w.previousRoot)==null?void 0:M.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(_,!0):[]}let E=v.flatMap(y).sort((_,w)=>{const M=ia(_.object),A=ia(w.object);return!M||!A?_.distance-w.distance:A.events.priority-M.events.priority||_.distance-w.distance}).filter(_=>{const w=Nc(_);return p.has(w)?!1:(p.add(w),!0)});d.events.filter&&(E=d.events.filter(E,d));for(const _ of E){let w=_.object;for(;w;){var x;(x=w.__r3f)!=null&&x.eventCount&&m.push({..._,eventObject:w}),w=w.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let _ of d.internal.capturedMap.get(u.pointerId).values())p.has(Nc(_.intersection))||m.push(_.intersection);return m}function i(u,h,d,p){const m=r.getState();if(u.length){const v={stopped:!1};for(const y of u){const E=ia(y.object)||m,{raycaster:x,pointer:_,camera:w,internal:M}=E,A=new D(_.x,_.y,0).unproject(w),R=L=>{var k,$;return(k=($=M.capturedMap.get(L))==null?void 0:$.has(y.eventObject))!=null?k:!1},P=L=>{const k={intersection:y,target:h.target};M.capturedMap.has(L)?M.capturedMap.get(L).set(y.eventObject,k):M.capturedMap.set(L,new Map([[y.eventObject,k]])),h.target.setPointerCapture(L)},U=L=>{const k=M.capturedMap.get(L);k&&uy(M.capturedMap,y.eventObject,k,L)};let F={};for(let L in h){let k=h[L];typeof k!="function"&&(F[L]=k)}let b={...y,...F,pointer:_,intersections:u,stopped:v.stopped,delta:d,unprojectedPoint:A,ray:x.ray,camera:w,stopPropagation(){const L="pointerId"in h&&M.capturedMap.get(h.pointerId);if((!L||L.has(y.eventObject))&&(b.stopped=v.stopped=!0,M.hovered.size&&Array.from(M.hovered.values()).find(k=>k.eventObject===y.eventObject))){const k=u.slice(0,u.indexOf(y));s([...k,y])}},target:{hasPointerCapture:R,setPointerCapture:P,releasePointerCapture:U},currentTarget:{hasPointerCapture:R,setPointerCapture:P,releasePointerCapture:U},nativeEvent:h};if(p(b),v.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const d of h.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const m=d.eventObject.__r3f,v=m?.handlers;if(h.hovered.delete(Nc(d)),m!=null&&m.eventCount){const y={...d,intersections:u};v.onPointerOut==null||v.onPointerOut(y),v.onPointerLeave==null||v.onPointerLeave(y)}}}function l(u,h){for(let d=0;d<h.length;d++){const p=h[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:d}=r.getState();"pointerId"in h&&d.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{d.capturedMap.has(h.pointerId)&&(d.capturedMap.delete(h.pointerId),s([]))})}}return function(d){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=d;const v=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(d,v?t:void 0),_=y?e(d):0;u==="onPointerDown"&&(m.initialClick=[d.offsetX,d.offsetY],m.initialHits=x.map(M=>M.eventObject)),y&&!x.length&&_<=2&&(l(d,m.interaction),p&&p(d)),v&&s(x);function w(M){const A=M.eventObject,R=A.__r3f,P=R?.handlers;if(R!=null&&R.eventCount)if(v){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const U=Nc(M),F=m.hovered.get(U);F?F.stopped&&M.stopPropagation():(m.hovered.set(U,M),P.onPointerOver==null||P.onPointerOver(M),P.onPointerEnter==null||P.onPointerEnter(M))}P.onPointerMove==null||P.onPointerMove(M)}else{const U=P[u];U?(!y||m.initialHits.includes(A))&&(l(d,m.interaction.filter(F=>!m.initialHits.includes(F))),U(M)):y&&m.initialHits.includes(A)&&l(d,m.interaction.filter(F=>!m.initialHits.includes(F)))}}i(x,d,_,w)}}return{handlePointer:c}}const hy=r=>!!(r!=null&&r.render),fy=Se.createContext(null),yb=(r,e)=>{const t=ib((c,u)=>{const h=new D,d=new D,p=new D;function m(_=u().camera,w=d,M=u().size){const{width:A,height:R,top:P,left:U}=M,F=A/R;w.isVector3?p.copy(w):p.set(...w);const b=_.getWorldPosition(h).distanceTo(p);if(ry(_))return{width:A/_.zoom,height:R/_.zoom,top:P,left:U,factor:1,distance:b,aspect:F};{const L=_.fov*Math.PI/180,k=2*Math.tan(L/2)*b,$=k*(A/R);return{width:$,height:k,top:P,left:U,factor:A/$,distance:b,aspect:F}}}let v;const y=_=>c(w=>({performance:{...w.performance,current:_}})),E=new ue;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(_=1)=>r(u(),_),advance:(_,w)=>e(_,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new ip,pointer:E,mouse:E,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=u();v&&clearTimeout(v),_.performance.current!==_.performance.min&&y(_.performance.min),v=setTimeout(()=>y(u().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:_=>c(w=>({...w,events:{...w.events,..._}})),setSize:(_,w,M,A,R)=>{const P=u().camera,U={width:_,height:w,top:A||0,left:R||0,updateStyle:M};c(F=>({size:U,viewport:{...F.viewport,...m(P,d,U)}}))},setDpr:_=>c(w=>{const M=ly(_);return{viewport:{...w.viewport,dpr:M,initialDpr:w.viewport.initialDpr||M}}}),setFrameloop:(_="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,_!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Se.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(_,w,M)=>{const A=u().internal;return A.priority=A.priority+(w>0?1:0),A.subscribers.push({ref:_,priority:w,store:M}),A.subscribers=A.subscribers.sort((R,P)=>R.priority-P.priority),()=>{const R=u().internal;R!=null&&R.subscribers&&(R.priority=R.priority-(w>0?1:0),R.subscribers=R.subscribers.filter(P=>P.ref!==_))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:d,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,mb(c,u),d.setPixelRatio(h.dpr);const v=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,v)}c!==l&&(l=c,p(v=>({viewport:{...v.viewport,...v.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Oc,xb=new Set,Sb=new Set,Mb=new Set;function Tf(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ra(r,e){switch(r){case"before":return Tf(xb,e);case"after":return Tf(Sb,e);case"tail":return Tf(Mb,e)}}let Af,bf;function Rf(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),Af=e.internal.subscribers,Oc=0;Oc<Af.length;Oc++)bf=Af[Oc],bf.ref.current(bf.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function Eb(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,ra("before",h),t=!0;for(const p of r.values()){var d;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((d=s.gl.xr)!=null&&d.isPresenting)&&(n+=Rf(h,s))}if(t=!1,ra("after",h),n===0)return ra("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,d=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),d));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(d>1?h.internal.frames=Math.min(60,h.internal.frames+d):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,d=!0,p,m){if(d&&ra("before",h),p)Rf(h,p,m);else for(const v of r.values())Rf(h,v.store.getState());d&&ra("after",h)}return{loop:l,invalidate:c,advance:u}}function dy(){const r=Se.useContext(fy);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function oo(r=t=>t,e){return dy()(r,e)}function bu(r,e=0){const t=dy(),n=t.getState().internal.subscribe,i=sy(r);return Ja(()=>n(i,e,t),[e,n,t]),null}const xo=new Map,{invalidate:A0,advance:b0}=Eb(xo),{reconciler:Kc,applyProps:no}=ub(xo,gb),io={objects:"shallow",strict:!1},wb=(r,e)=>{const t=typeof r=="function"?r(e):r;return hy(t)?t:new kd({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function Tb(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function Ab(r){const e=xo.get(r),t=e?.fiber,n=e?.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||yb(A0,b0),l=t||Kc.createContainer(s,ho.ConcurrentRoot,null,!1,null,"",i,null);e||xo.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(d={}){let{gl:p,size:m,scene:v,events:y,onCreated:E,shadows:x=!1,linear:_=!1,flat:w=!1,legacy:M=!1,orthographic:A=!1,frameloop:R="always",dpr:P=[1,2],performance:U,raycaster:F,camera:b,onPointerMissed:L}=d,k=s.getState(),$=k.gl;k.gl||k.set({gl:$=wb(p,r)});let ae=k.raycaster;ae||k.set({raycaster:ae=new ey});const{params:H,...K}=F||{};if(Ft.equ(K,ae,io)||no(ae,{...K}),Ft.equ(H,ae.params,io)||no(ae,{params:{...ae.params,...H}}),!k.camera||k.camera===h&&!Ft.equ(h,b,io)){h=b;const Z=b instanceof Ha,z=Z?b:A?new Wa(0,0,0,0,.1,1e3):new mn(75,0,.1,1e3);Z||(z.position.z=5,b&&(no(z,b),("aspect"in b||"left"in b||"right"in b||"bottom"in b||"top"in b)&&(z.manual=!0,z.updateProjectionMatrix())),!k.camera&&!(b!=null&&b.rotation)&&z.lookAt(0,0,0)),k.set({camera:z}),ae.camera=z}if(!k.scene){let Z;v!=null&&v.isScene?Z=v:(Z=new Hd,v&&no(Z,v)),k.set({scene:ro(Z)})}if(!k.xr){var se;const Z=(fe,we)=>{const Ae=s.getState();Ae.frameloop!=="never"&&b0(fe,!0,Ae,we)},z=()=>{const fe=s.getState();fe.gl.xr.enabled=fe.gl.xr.isPresenting,fe.gl.xr.setAnimationLoop(fe.gl.xr.isPresenting?Z:null),fe.gl.xr.isPresenting||A0(fe)},j={connect(){const fe=s.getState().gl;fe.xr.addEventListener("sessionstart",z),fe.xr.addEventListener("sessionend",z)},disconnect(){const fe=s.getState().gl;fe.xr.removeEventListener("sessionstart",z),fe.xr.removeEventListener("sessionend",z)}};typeof((se=$.xr)==null?void 0:se.addEventListener)=="function"&&j.connect(),k.set({xr:j})}if($.shadowMap){const Z=$.shadowMap.enabled,z=$.shadowMap.type;if($.shadowMap.enabled=!!x,Ft.boo(x))$.shadowMap.type=ca;else if(Ft.str(x)){var oe;const j={basic:X0,percentage:Qc,soft:ca,variance:vi};$.shadowMap.type=(oe=j[x])!=null?oe:ca}else Ft.obj(x)&&Object.assign($.shadowMap,x);(Z!==$.shadowMap.enabled||z!==$.shadowMap.type)&&($.shadowMap.needsUpdate=!0)}const X=iy();X&&("enabled"in X?X.enabled=!M:"legacyMode"in X&&(X.legacyMode=M)),u||no($,{outputEncoding:_?3e3:3001,toneMapping:w?Ni:Md}),k.legacy!==M&&k.set(()=>({legacy:M})),k.linear!==_&&k.set(()=>({linear:_})),k.flat!==w&&k.set(()=>({flat:w})),p&&!Ft.fun(p)&&!hy(p)&&!Ft.equ(p,$,io)&&no($,p),y&&!k.events.handlers&&k.set({events:y(s)});const Y=Tb(r,m);return Ft.equ(Y,k.size,io)||k.setSize(Y.width,Y.height,Y.updateStyle,Y.top,Y.left),P&&k.viewport.dpr!==ly(P)&&k.setDpr(P),k.frameloop!==R&&k.setFrameloop(R),k.onPointerMissed||k.set({onPointerMissed:L}),U&&!Ft.equ(U,k.performance,io)&&k.set(Z=>({performance:{...Z.performance,...U}})),c=E,u=!0,this},render(d){return u||this.configure(),Kc.updateContainer(wt.jsx(bb,{store:s,children:d,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){py(r)}}}function bb({store:r,children:e,onCreated:t,rootElement:n}){return Ja(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),wt.jsx(fy.Provider,{value:r,children:e})}function py(r,e){const t=xo.get(r),n=t?.fiber;if(n){const i=t?.store.getState();i&&(i.internal.active=!1),Kc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),pb(i),xo.delete(r)}catch{}},500)})}}Kc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Se.version});const Cf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function Rb(r){const{handlePointer:e}=_b(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Cf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=Cf[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Cf[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}function R0(r,e){let t;return(...n)=>{window.clearTimeout(t),t=window.setTimeout(()=>r(...n),e)}}function Cb({debounce:r,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[s,l]=Se.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=Se.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s,orientationHandler:null}),u=r?typeof r=="number"?r:r.scroll:null,h=r?typeof r=="number"?r:r.resize:null,d=Se.useRef(!1);Se.useEffect(()=>(d.current=!0,()=>void(d.current=!1)));const[p,m,v]=Se.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:w,top:M,width:A,height:R,bottom:P,right:U,x:F,y:b}=c.current.element.getBoundingClientRect(),L={left:w,top:M,width:A,height:R,bottom:P,right:U,x:F,y:b};c.current.element instanceof HTMLElement&&n&&(L.height=c.current.element.offsetHeight,L.width=c.current.element.offsetWidth),Object.freeze(L),d.current&&!Ub(c.current.lastBounds,L)&&l(c.current.lastBounds=L)};return[_,h?R0(_,h):_,u?R0(_,u):_]},[l,n,u,h]);function y(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function E(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const x=_=>{!_||_===c.current.element||(y(),c.current.element=_,c.current.scrollContainers=my(_),E())};return Lb(v,!!e),Pb(m),Se.useEffect(()=>{y(),E()},[e,v,m]),Se.useEffect(()=>y,[]),[x,s,p]}function Pb(r){Se.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function Lb(r,e){Se.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function my(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...my(r.parentElement)]}const Ib=["x","y","top","bottom","left","right","width","height"],Ub=(r,e)=>Ib.every(t=>r[t]===e[t]);var Db=Object.defineProperty,Nb=Object.defineProperties,Ob=Object.getOwnPropertyDescriptors,C0=Object.getOwnPropertySymbols,Fb=Object.prototype.hasOwnProperty,zb=Object.prototype.propertyIsEnumerable,P0=(r,e,t)=>e in r?Db(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,L0=(r,e)=>{for(var t in e||(e={}))Fb.call(e,t)&&P0(r,t,e[t]);if(C0)for(var t of C0(e))zb.call(e,t)&&P0(r,t,e[t]);return r},Bb=(r,e)=>Nb(r,Ob(e)),I0,U0;typeof window<"u"&&((I0=window.document)!=null&&I0.createElement||((U0=window.navigator)==null?void 0:U0.product)==="ReactNative")?Se.useLayoutEffect:Se.useEffect;function gy(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=r.child;for(;n;){const i=gy(n,e,t);if(i)return i;n=n.sibling}}function vy(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const D0=console.error;console.error=function(){const r=[...arguments].join("");if(r?.startsWith("Warning:")&&r.includes("useContext")){console.error=D0;return}return D0.apply(this,arguments)};const lp=vy(Se.createContext(null));class _y extends Se.Component{render(){return Se.createElement(lp.Provider,{value:this._reactInternals},this.props.children)}}function kb(){const r=Se.useContext(lp);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Se.useId();return Se.useMemo(()=>{for(const n of[r,r?.alternate]){if(!n)continue;const i=gy(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function Hb(){const r=kb(),[e]=Se.useState(()=>new Map);e.clear();let t=r;for(;t;){if(t.type&&typeof t.type=="object"){const i=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;i&&i!==lp&&!e.has(i)&&e.set(i,Se.useContext(vy(i)))}t=t.return}return e}function Vb(){const r=Hb();return Se.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>Se.createElement(e,null,Se.createElement(t.Provider,Bb(L0({},n),{value:r.get(t)}))),e=>Se.createElement(_y,L0({},e))),[r])}const Gb=Se.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=Rb,eventSource:c,eventPrefix:u,shadows:h,linear:d,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:E,performance:x,raycaster:_,camera:w,scene:M,onPointerMissed:A,onCreated:R,...P},U){Se.useMemo(()=>cb(QA),[]);const F=Vb(),[b,L]=Cb({scroll:!0,debounce:{scroll:50,resize:0},...n}),k=Se.useRef(null),$=Se.useRef(null);Se.useImperativeHandle(U,()=>k.current);const ae=sy(A),[H,K]=Se.useState(!1),[se,oe]=Se.useState(!1);if(H)throw H;if(se)throw se;const X=Se.useRef(null);Ja(()=>{const Z=k.current;L.width>0&&L.height>0&&Z&&(X.current||(X.current=Ab(Z)),X.current.configure({gl:s,events:l,shadows:h,linear:d,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:E,performance:x,raycaster:_,camera:w,scene:M,size:L,onPointerMissed:(...z)=>ae.current==null?void 0:ae.current(...z),onCreated:z=>{z.events.connect==null||z.events.connect(c?hb(c)?c.current:c:$.current),u&&z.setEvents({compute:(j,fe)=>{const we=j[u+"X"],Ae=j[u+"Y"];fe.pointer.set(we/fe.size.width*2-1,-(Ae/fe.size.height)*2+1),fe.raycaster.setFromCamera(fe.pointer,fe.camera)}}),R?.(z)}}),X.current.render(wt.jsx(F,{children:wt.jsx(oy,{set:oe,children:wt.jsx(Se.Suspense,{fallback:wt.jsx(fb,{set:K}),children:e??null})})})))}),Se.useEffect(()=>{const Z=k.current;if(Z)return()=>py(Z)},[]);const Y=c?"none":"auto";return wt.jsx("div",{ref:$,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:Y,...i},...P,children:wt.jsx("div",{ref:b,style:{width:"100%",height:"100%"},children:wt.jsx("canvas",{ref:k,style:{display:"block"},children:t})})})}),Wb=Se.forwardRef(function(e,t){return wt.jsx(_y,{children:wt.jsx(Gb,{...e,ref:t})})});function gs(){return gs=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},gs.apply(null,arguments)}function mo(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}function N0(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(r);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(r,i).enumerable})),t.push.apply(t,n)}return t}function O0(r){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?N0(Object(t),!0).forEach(function(n){mo(r,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):N0(Object(t)).forEach(function(n){Object.defineProperty(r,n,Object.getOwnPropertyDescriptor(t,n))})}return r}new ue;new ue;function yy(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}var hi=function r(e,t,n){var i=this;yy(this,r),mo(this,"dot2",function(s,l){return i.x*s+i.y*l}),mo(this,"dot3",function(s,l,c){return i.x*s+i.y*l+i.z*c}),this.x=e,this.y=t,this.z=n},Xb=[new hi(1,1,0),new hi(-1,1,0),new hi(1,-1,0),new hi(-1,-1,0),new hi(1,0,1),new hi(-1,0,1),new hi(1,0,-1),new hi(-1,0,-1),new hi(0,1,1),new hi(0,-1,1),new hi(0,1,-1),new hi(0,-1,-1)],F0=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],z0=new Array(512),B0=new Array(512),qb=function(e){e>0&&e<1&&(e*=65536),e=Math.floor(e),e<256&&(e|=e<<8);for(var t=0;t<256;t++){var n;t&1?n=F0[t]^e&255:n=F0[t]^e>>8&255,z0[t]=z0[t+256]=n,B0[t]=B0[t+256]=Xb[n%12]}};qb(0);function Yb(r){if(typeof r=="number")r=Math.abs(r);else if(typeof r=="string"){var e=r;r=0;for(var t=0;t<e.length;t++)r=(r+(t+1)*(e.charCodeAt(t)%96))%2147483647}return r===0&&(r=311),r}function k0(r){var e=Yb(r);return function(){var t=e*48271%2147483647;return e=t,t/2147483647}}var Zb=function r(e){var t=this;yy(this,r),mo(this,"seed",0),mo(this,"init",function(n){t.seed=n,t.value=k0(n)}),mo(this,"value",k0(this.seed)),this.init(e)},Jb=new Zb(Math.random()),jb={radius:1,center:[0,0,0]};function Kb(r,e){for(var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Jb,n=O0(O0({},jb),e),i=n.radius,s=n.center,l=0;l<r.length;l+=3){var c=Math.pow(t.value(),.3333333333333333),u=t.value()*2-1,h=t.value()*2-1,d=t.value()*2-1,p=Math.sqrt(u*u+h*h+d*d);u=c*u/p,h=c*h/p,d=c*d/p,r[l]=u*i+s[0],r[l+1]=h*i+s[1],r[l+2]=d*i+s[2]}return r}const Qb=()=>parseInt(Fa.replace(/\D+/g,"")),xy=Qb(),Pf=xy>=154?"opaque_fragment":"output_fragment";class $b extends uu{constructor(e){super(e),this.onBeforeCompile=(t,n)=>{const{isWebGL2:i}=n.capabilities;t.fragmentShader=t.fragmentShader.replace(`#include <${Pf}>`,`
        ${i?`#include <${Pf}>`:`#extension GL_OES_standard_derivatives : enable
#include <${Pf}>`}
      vec2 cxy = 2.0 * gl_PointCoord - 1.0;
      float r = dot(cxy, cxy);
      float delta = fwidth(r);     
      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);
      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );
      #include <tonemapping_fragment>
      #include <${xy>=154?"colorspace_fragment":"encodings_fragment"}>
      `)}}}const eR=Se.forwardRef((r,e)=>{const[t]=Se.useState(()=>new $b(null));return Se.createElement("primitive",gs({},r,{object:t,ref:e,attach:"material"}))});let $r,sa;const tR=Se.createContext(null),H0=new lt,V0=new D,nR=Se.forwardRef(({children:r,range:e,limit:t=1e3,...n},i)=>{const s=Se.useRef(null);Se.useImperativeHandle(i,()=>s.current,[]);const[l,c]=Se.useState([]),[[u,h,d]]=Se.useState(()=>[new Float32Array(t*3),Float32Array.from({length:t*3},()=>1),Float32Array.from({length:t},()=>1)]);Se.useEffect(()=>{s.current.geometry.attributes.position.needsUpdate=!0}),bu(()=>{for(s.current.updateMatrix(),s.current.updateMatrixWorld(),H0.copy(s.current.matrixWorld).invert(),s.current.geometry.drawRange.count=Math.min(t,e!==void 0?e:t,l.length),$r=0;$r<l.length;$r++)sa=l[$r].current,sa.getWorldPosition(V0).applyMatrix4(H0),V0.toArray(u,$r*3),s.current.geometry.attributes.position.needsUpdate=!0,sa.matrixWorldNeedsUpdate=!0,sa.color.toArray(h,$r*3),s.current.geometry.attributes.color.needsUpdate=!0,d.set([sa.size],$r),s.current.geometry.attributes.size.needsUpdate=!0});const p=Se.useMemo(()=>({getParent:()=>s,subscribe:m=>(c(v=>[...v,m]),()=>c(v=>v.filter(y=>y.current!==m.current)))}),[]);return Se.createElement("points",gs({userData:{instances:l},matrixAutoUpdate:!1,ref:s,raycast:()=>null},n),Se.createElement("bufferGeometry",null,Se.createElement("bufferAttribute",{attach:"attributes-position",count:u.length/3,array:u,itemSize:3,usage:ls}),Se.createElement("bufferAttribute",{attach:"attributes-color",count:h.length/3,array:h,itemSize:3,usage:ls}),Se.createElement("bufferAttribute",{attach:"attributes-size",count:d.length,array:d,itemSize:1,usage:ls})),Se.createElement(tR.Provider,{value:p},r))}),iR=Se.forwardRef(({children:r,positions:e,colors:t,sizes:n,stride:i=3,...s},l)=>{const c=Se.useRef(null);return Se.useImperativeHandle(l,()=>c.current,[]),bu(()=>{const u=c.current.geometry.attributes;u.position.needsUpdate=!0,t&&(u.color.needsUpdate=!0),n&&(u.size.needsUpdate=!0)}),Se.createElement("points",gs({ref:c},s),Se.createElement("bufferGeometry",null,Se.createElement("bufferAttribute",{attach:"attributes-position",count:e.length/i,array:e,itemSize:i,usage:ls}),t&&Se.createElement("bufferAttribute",{attach:"attributes-color",count:t.length/i,array:t,itemSize:3,usage:ls}),n&&Se.createElement("bufferAttribute",{attach:"attributes-size",count:n.length/i,array:n,itemSize:1,usage:ls})),r)}),rR=Se.forwardRef((r,e)=>r.positions instanceof Float32Array?Se.createElement(iR,gs({},r,{ref:e})):Se.createElement(nR,gs({},r,{ref:e})));function sR({pixelated:r}){const e=oo(l=>l.gl),t=oo(l=>l.internal.active),n=oo(l=>l.performance.current),i=oo(l=>l.viewport.initialDpr),s=oo(l=>l.setDpr);return Se.useEffect(()=>{const l=e.domElement;return()=>{t&&s(i),r&&l&&(l.style.imageRendering="auto")}},[]),Se.useEffect(()=>{s(n*i),r&&e.domElement&&(e.domElement.style.imageRendering=n===1?"auto":"pixelated")},[n]),null}function oR(){const r=Se.useRef(null),[e]=Se.useState(()=>Kb(new Float32Array(5e3),{radius:1.5}));return bu((t,n)=>{if(r.current){r.current.rotation.x-=n/10,r.current.rotation.y-=n/15;const i=t.mouse.y*.5,s=t.mouse.x*.5;r.current.rotation.x+=(i-r.current.rotation.x)*.02,r.current.rotation.y+=(s-r.current.rotation.y)*.02}}),wt.jsx("group",{rotation:[0,0,Math.PI/4],children:wt.jsx(rR,{ref:r,positions:e,stride:3,frustumCulled:!1,children:wt.jsx(eR,{transparent:!0,color:"#e2d6fa",size:.006,sizeAttenuation:!0,depthWrite:!1})})})}function aR(){const r=Se.useRef(null),{viewport:e}=oo();return bu(()=>{r.current&&(r.current.rotation.x+=.002,r.current.rotation.y+=.002)}),wt.jsxs("mesh",{ref:r,position:[e.width/4.2,0,0],scale:[.6,.6,.6],children:[wt.jsx("torusKnotGeometry",{args:[.4,.2,100,20]}),wt.jsx("meshStandardMaterial",{color:"#e2d6fa",emissive:"#e2d6fa",emissiveIntensity:.7,wireframe:!0})]})}function lR(){return wt.jsxs(Wb,{camera:{position:[0,0,1]},children:[wt.jsx(sR,{pixelated:!0}),wt.jsx(oR,{}),wt.jsx(aR,{})," ",wt.jsx("ambientLight",{intensity:.5}),wt.jsx("directionalLight",{position:[1,1,1],intensity:.8})]})}function cR(){const r={hidden:{opacity:0},visible:{opacity:1,transition:{staggerChildren:.2,delayChildren:.5}}},e={hidden:{opacity:0,y:20},visible:{opacity:1,y:0,transition:{duration:.8,ease:"easeInOut"}}};return wt.jsxs("section",{className:"hero",children:[wt.jsx("div",{className:"hero-background-canvas",children:wt.jsx(lR,{})}),wt.jsxs(oa.div,{className:"hero-content",variants:r,initial:"hidden",animate:"visible",children:[wt.jsx(oa.h1,{className:"hero-title",variants:e,children:"166studios"}),wt.jsx(oa.p,{className:"hero-subtitle",variants:e,children:"Explorando a interseção entre a tecnologia e a arte."}),wt.jsx(oa.div,{variants:e,children:wt.jsx(dx,{to:"/portfolio/projects",className:"hero-cta-button",children:"Explorar Projetos"})})]})]})}const uR={initial:{opacity:0,scale:.98},in:{opacity:1,scale:1},out:{opacity:0,scale:.98}},hR={type:"tween",ease:"anticipate",duration:.8};function mR(){return wt.jsx(oa.div,{initial:"initial",animate:"in",exit:"out",variants:uR,transition:hR,className:"app",children:wt.jsx(cR,{})})}export{mR as default};
//# sourceMappingURL=Home-Cr_6KB_5.js.map
