@use "../variables";

.hero {
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  background-color: variables.$black;
  
  .hero-grid-background {
    position: absolute;
    inset: 0;
    background-image:
      linear-gradient(rgba(variables.$primary, 0.2) 1px, transparent 1px),
      linear-gradient(90deg, rgba(variables.$primary, 0.2) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: pan-grid 30s linear infinite;
    opacity: 0.3;
  }

  .hero-canvas-container {
    position: absolute;
    inset: 0;
    z-index: 1;
  }

  .hero-content {
    position: relative;
    z-index: 3;
    text-align: center;
    user-select: none;
    padding: 2rem;
  }
  
  .hero-title {
    font-family: variables.$font-secondary;
    font-size: 10rem;
    font-weight: 700;
    // O texto em si é transparente para revelar o fundo
    color: transparent; 
    text-transform: lowercase; // Garante que fica em caixa baixa
    position: relative;
    letter-spacing: -0.2rem; // Um toque de design, juntando um pouco as letras

    // A magia acontece aqui: um gradiente radial segue o rato
    background-image: radial-gradient(
      circle 400px at var(--mouse-x, 50%) var(--mouse-y, 50%),
      variables.$white 0%,
      rgba(variables.$white, 0.3) 60%,
      transparent 100%
    );
    -webkit-background-clip: text;
    background-clip: text;
    
    // Camadas de sombra para dar profundidade e um brilho subtil
    text-shadow: 
      0 0 20px rgba(variables.$primary, 0.2),
      0 0 40px rgba(variables.$black, 0.5);

    transition: all 0.2s ease-out; // Suaviza a resposta a movimentos rápidos
    
    // Media queries para responsividade
    @media (max-width: variables.$tablet) {
      font-size: 7rem;
    }
    @media (max-width: variables.$mobile) {
      font-size: 4rem;
    }
  }

  .hud-panel-wrapper {
    position: absolute;
    bottom: 2rem;
    left: 2rem;
    z-index: 2;
  }

  .scroll-indicator {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
    background: none;
    border: none;
    color: variables.$white;
    cursor: pointer;
    animation: bounce 2s infinite;

    svg {
        filter: drop-shadow(0 0 10px rgba(variables.$primary, 0.5));
        transition: color 0.3s ease;
    }
    &:hover {
        color: variables.$primary;
    }
  }
}

// Animações
@keyframes pan-grid {
  from { background-position: 0 0; }
  to { background-position: 50px 50px; }
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0) translateX(-50%); }
    40% { transform: translateY(-20px) translateX(-50%); }
    60% { transform: translateY(-10px) translateX(-50%); }
}