@use '../variables';

body,
a,
button,
[role='button'],
input,
textarea {
  cursor: none !important;
}

.custom-cursor-ring {
  position: fixed;
  top: 0;
  left: 0;
  width: 24px;
  height: 24px;
  border: 2px solid var(--cursor-color, #{variables.$primary});
  border-radius: 50%;
  pointer-events: none;
  z-index: 9999;
  // Transição suave para todas as propriedades
  transition: all 0.2s cubic-bezier(0.25, 1, 0.5, 1);
  will-change: transform, width, height, border;

  // Estado de hover - se expande e fica mais fino
  &.hover {
    width: 50px;
    height: 50px;
    border-width: 1px;
    background-color: rgba(variables.$primary, 0.1);
  }

  // Estado de movimento - rotação e escala são aplicadas via JS
  // A classe 'moving' pode ser usada para alterar a cor ou opacidade se desejar
  &.moving {
    transition-duration: 0.1s; // Reage mais rápido ao movimento
  }
}

.custom-cursor-dot {
  position: fixed;
  top: -2px;
  left: -2px;
  width: 4px;
  height: 4px;
  background-color: var(--cursor-color, #{variables.$primary});
  border-radius: 50%;
  pointer-events: none;
  z-index: 9998;
  box-shadow: 0 0 10px var(--cursor-color, #{variables.$primary});
  will-change: transform;
  transition: all 0.2s ease;

  // No hover, o ponto central cresce e brilha mais
  &.hover {
    transform: scale(2);
    box-shadow: 0 0 15px var(--cursor-color, #{variables.$primary});
  }
}

@media (hover: none) and (pointer: coarse) {
  .custom-cursor-ring,
  .custom-cursor-dot {
    display: none;
  }
  body,
  a,
  button,
  [role='button'],
  input,
  textarea {
    cursor: auto !important;
  }
}
